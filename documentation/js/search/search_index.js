var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Actor.html",[0,2.628,1,3.069]],["body/interfaces/Actor.html",[0,3.953,1,6.002,2,5.304,3,0.147,4,0.147,5,0.132,6,5.816,7,2.111,8,7.794,9,5.456,10,0.286,11,1.053,12,2.098,13,5.14,14,1.231,15,0.357,16,0.009,17,0.147,18,3.493,19,4.616,20,0.147,21,0.008,22,0.008]],["title/classes/AddTagDto.html",[23,0.268,24,2.9]],["body/classes/AddTagDto.html",[3,0.101,4,0.101,5,0.091,7,2.579,10,0.197,11,0.832,14,0.969,15,0.377,16,0.009,17,0.156,20,0.156,21,0.006,22,0.006,23,0.426,24,4.072,25,0.665,26,5.767,27,2.609,28,1.323,29,5.236,30,5.236,31,5.236,32,5.236,33,5.582,34,3.636,35,3.238,36,1.089,37,3.596,38,7.574,39,2.478,40,3.019,41,2.256,42,2.296,43,7.816,44,0.45,45,4.547,46,3.843,47,4.547,48,2.545,49,4.547,50,2.478,51,4.547,52,1.926,53,2.351,54,4.547,55,0.998,56,2.585,57,4.547,58,4.011,59,1.549,60,2.637,61,0.598,62,4.83,63,3.1,64,2.752,65,1.384,66,2.245,67,1.801,68,1.801,69,3.007,70,3.007,71,1.35]],["title/classes/AddressInput.html",[23,0.268,72,1.957]],["body/classes/AddressInput.html",[3,0.109,4,0.109,5,0.098,7,2.784,10,0.211,11,0.871,14,1.243,15,0.366,16,0.009,17,0.161,20,0.144,21,0.007,22,0.007,23,0.47,25,0.713,28,1.34,36,1.081,40,3.097,41,2.3,42,2.355,44,0.447,60,2.806,61,0.641,63,2.84,64,2.626,65,1.483,72,2.877,73,3.918,74,7.249,75,5.436,76,7.249,77,7.249,78,7.732,79,3.169,80,4.174,81,4.871,82,5.739,83,4.871,84,4.871,85,4.871,86,4.871,87,2.497,88,1.192,89,2.174]],["title/classes/AddressResponse.html",[23,0.268,89,1.957]],["body/classes/AddressResponse.html",[3,0.109,4,0.109,5,0.098,7,2.784,10,0.211,11,0.871,14,1.243,15,0.366,16,0.009,17,0.161,20,0.144,21,0.007,22,0.007,23,0.47,25,0.713,28,1.34,36,1.081,40,3.097,41,2.3,42,2.355,44,0.447,60,2.806,61,0.641,63,2.84,64,2.626,65,1.483,72,2.174,73,3.918,74,7.055,75,5.29,76,7.055,77,7.055,78,7.9,79,3.169,80,4.174,87,2.497,88,1.192,89,2.877,90,4.871,91,5.739,92,4.871,93,4.871,94,4.871,95,4.871]],["title/classes/AdminAnalyticsOutput.html",[23,0.268,96,3.069]],["body/classes/AdminAnalyticsOutput.html",[3,0.136,4,0.136,5,0.122,10,0.264,11,1.004,14,1.208,15,0.382,16,0.009,17,0.166,20,0.136,21,0.008,22,0.008,23,0.454,25,0.891,36,1.128,44,0.466,59,1.609,61,0.801,87,2.672,88,1.49,96,5.2,97,7.55,98,6.389,99,3.649,100,6.449,101,6.449,102,7.072,103,7.072,104,6.23,105,4.897,106,1.862,107,4.543,108,4.543,109,4.543]],["title/classes/AllExceptionsFilter.html",[23,0.268,110,3.272]],["body/classes/AllExceptionsFilter.html",[3,0.093,4,0.093,5,0.083,10,0.18,14,0.999,15,0.265,16,0.01,17,0.179,20,0.093,21,0.006,22,0.006,23,0.254,25,0.607,28,0.891,44,0.323,55,0.937,110,4.316,111,5.87,112,3.662,113,4.316,114,6.655,115,1.676,116,7.198,117,1.805,118,4.152,119,4.523,120,2.76,121,2.304,122,4.152,123,3.819,124,3.825,125,1.635,126,4.652,127,5.783,128,4.182,129,6.655,130,7.198,131,4.152,132,5.372,133,1.066,134,5.101,135,3.185,136,0.781,137,2.382,138,3.99,139,2.494,140,3.339,141,3.339,142,4.152,143,4.316,144,4.152,145,4.152,146,3.662,147,2.906,148,3.339,149,2.109,150,1.474,151,4.152,152,2.568,153,1.436,154,4.152,155,3.662,156,4.152,157,3.099,158,4.152,159,4.048,160,4.152,161,3.825,162,1.645,163,3.662,164,3.825,165,3.662,166,1.363,167,4.152,168,6.655,169,5.318,170,2.595,171,5.628,172,5.153,173,5.005,174,1.556,175,4.316,176,2.746,177,4.152,178,1.693,179,4.152,180,1.066,181,4.152,182,4.152,183,4.152,184,4.402,185,4.152,186,4.152,187,4.152,188,4.152,189,5.101,190,4.152,191,4.152,192,5.234,193,4.152,194,6.655,195,5.783,196,6.655,197,6.655,198,4.152,199,4.152,200,4.152,201,5.783,202,4.152,203,7.198,204,7.198,205,3.662,206,4.152,207,4.152,208,5.783,209,4.152,210,3.662,211,3.662,212,4.152,213,3.099,214,4.152,215,4.152,216,1.296,217,4.152,218,4.152,219,5.783,220,4.152,221,4.152,222,4.152,223,2.286,224,5.783,225,4.152,226,4.152,227,4.152]],["title/controllers/AnalyticsController.html",[228,1.689,229,3.272]],["body/controllers/AnalyticsController.html",[3,0.121,4,0.121,5,0.109,10,0.235,15,0.349,16,0.009,17,0.196,20,0.121,21,0.007,22,0.007,23,0.332,28,0.837,36,0.734,44,0.304,55,0.881,61,0.714,96,3.803,98,5.164,115,2.005,117,1.696,120,1.981,121,2.215,125,1.536,133,1.395,135,2.992,136,1.021,149,2.523,150,2.457,152,1.654,153,2.393,157,5.164,166,2.632,170,2.107,180,1.395,216,1.696,228,2.093,229,5.164,230,2.093,231,4.792,232,3.117,233,2.703,234,7.615,235,5.433,236,5.433,237,5.433,238,3.665,239,7.615,240,5.433,241,5.433,242,2.457,243,3.257,244,3.117,245,4.792,246,3.414,247,3.117,248,3.117,249,3.971,250,3.971,251,3.117,252,2.503,253,2.503,254,2.503,255,3.117,256,1.574,257,3.117,258,2.093,259,3.532,260,2.665,261,2.773,262,2.992,263,1.981,264,2.093,265,3.593,266,2.152,267,1.929,268,3.414,269,4.792,270,1.125,271,5.036,272,4.792,273,5.433,274,5.433,275,5.433,276,5.433,277,3.117,278,1.957,279,2.281,280,3.117,281,5.433,282,2.093,283,5.433]],["title/modules/AnalyticsModule.html",[284,1.369,285,3.069]],["body/modules/AnalyticsModule.html",[3,0.138,4,0.138,5,0.124,16,0.009,17,0.187,20,0.138,21,0.008,22,0.008,23,0.377,136,1.161,229,6.02,230,2.886,271,6.029,272,5.446,284,2.518,285,6.29,286,2.845,287,2.845,288,3.041,289,3.041,290,2.845,291,3.974,292,3.974,293,5.446,294,5.446,295,5.446,296,5.446,297,4.16,298,3.691,299,3.041,300,3.041,301,6.174,302,3.824,303,3.4,304,6.174]],["title/injectables/AnalyticsService.html",[271,2.9,305,0.999]],["body/injectables/AnalyticsService.html",[3,0.12,4,0.12,5,0.108,10,0.234,15,0.315,16,0.009,17,0.197,20,0.12,21,0.007,22,0.007,23,0.421,28,1.061,44,0.385,53,1.816,55,1.116,88,1.319,96,4.82,98,4.023,100,4.336,101,4.336,102,4.755,103,4.755,115,1.995,117,2.149,119,3.387,120,2.511,121,2.559,125,1.947,133,1.384,136,1.014,137,3.093,149,2.511,150,2.445,152,1.641,153,2.381,157,5.139,166,2.625,180,1.384,233,2.694,242,2.445,258,2.077,260,2.077,263,1.966,264,2.077,269,4.755,270,1.426,271,4.554,282,3.182,305,1.569,306,2.077,307,4.755,308,7.587,309,3.232,310,4.23,311,5.391,312,5.391,313,5.391,314,3.232,315,4.755,316,4.023,317,4.128,318,1.816,319,2.136,320,3.232,321,4.755,322,3.232,323,3.093,324,5.391,325,2.136,326,5.391,327,2.264,328,5.391,329,5.391,330,4.755,331,4.755,332,4.755,333,5.391,334,5.391,335,5.391,336,5.391,337,5.391,338,3.232]],["title/controllers/AppController.html",[228,1.689,339,3.272]],["body/controllers/AppController.html",[3,0.137,4,0.137,5,0.123,10,0.265,14,1.034,15,0.28,16,0.009,17,0.191,20,0.137,21,0.008,22,0.008,23,0.374,28,0.943,36,0.827,44,0.342,55,0.992,115,2.16,117,1.91,120,2.231,121,2.386,125,1.731,133,1.571,136,1.151,149,2.718,150,2.646,153,2.577,166,2.746,180,1.571,228,3.095,230,2.357,258,2.357,259,3.124,260,2.871,261,3.124,262,3.37,263,2.231,264,2.357,325,2.424,339,5.562,340,5.398,341,6.573,342,5.398,343,6.12,344,5.315,345,5.398,346,6.12,347,6.12,348,5.398,349,5.398,350,5.398,351,6.12]],["title/injectables/AppLogger.html",[121,1.404,305,0.999]],["body/injectables/AppLogger.html",[3,0.091,4,0.091,5,0.082,10,0.177,11,0.772,14,1.24,15,0.374,16,0.009,17,0.147,20,0.091,21,0.006,22,0.006,23,0.249,28,1.258,44,0.464,55,1.264,115,1.657,117,2.059,120,3.207,121,1.83,124,4.975,125,2.204,133,2.001,136,0.768,138,2.448,149,2.843,152,2.29,153,3.041,161,5.621,162,3.088,163,6.635,166,2.888,172,5.629,174,3.279,180,2.001,192,4.145,216,2.796,263,1.489,264,1.573,305,1.303,306,1.573,352,3.602,353,6.596,354,6.596,355,2.281,356,5.717,357,6.596,358,6.596,359,4.084,360,4.084,361,4.084,362,5.614,363,4.084,364,4.084,365,4.084,366,3.954,367,4.084,368,5.717,369,4.084,370,4.002,371,4.084,372,4.084,373,4.084,374,4.084,375,4.084,376,4.084,377,5.717,378,5.717,379,5.717,380,3.602,381,4.084,382,7.796,383,4.084,384,4.084,385,4.084,386,7.522,387,4.084,388,4.084,389,4.084,390,5.717]],["title/modules/AppLoggerModule.html",[284,1.369,391,3.069]],["body/modules/AppLoggerModule.html",[3,0.144,4,0.144,5,0.129,16,0.009,17,0.171,20,0.144,21,0.008,22,0.008,23,0.393,121,2.932,136,1.21,284,2.563,286,2.965,287,2.965,288,3.171,289,3.171,290,2.965,291,4.046,292,4.046,298,3.785,299,3.171,300,3.171,302,3.285,391,6.241,392,5.677,393,5.677,394,5.677,395,6.436,396,6.436]],["title/modules/AppModule.html",[284,1.369,397,3.272]],["body/modules/AppModule.html",[3,0.116,4,0.116,5,0.104,16,0.009,17,0.2,20,0.116,21,0.007,22,0.007,23,0.316,136,0.974,230,2.586,284,2.324,285,5.852,286,2.388,287,2.388,288,2.553,289,2.553,290,2.388,291,3.668,292,2.553,297,3.98,298,3.307,299,2.553,300,2.553,302,3.427,303,2.854,339,5.558,344,5.529,345,4.571,397,6.889,398,4.571,399,4.571,400,4.571,401,5.852,402,5.852,403,5.852,404,5.852,405,5.852,406,5.852,407,5.852,408,5.529,409,5.183,410,5.183,411,5.183,412,4.571,413,5.183,414,5.183,415,5.183,416,5.183,417,5.183,418,5.183,419,5.183]],["title/injectables/AppService.html",[305,0.999,344,2.9]],["body/injectables/AppService.html",[3,0.138,4,0.138,5,0.125,10,0.269,14,1.043,15,0.344,16,0.009,17,0.18,20,0.138,21,0.008,22,0.008,23,0.379,28,1.158,44,0.42,55,1.218,115,2.178,117,1.937,120,2.741,121,2.69,125,2.126,133,1.593,136,1.167,150,2.204,153,2.146,166,2.759,180,1.593,258,2.391,260,2.391,263,2.263,264,2.391,305,1.713,306,2.391,309,3.721,325,2.459,341,6.63,342,6.63,344,4.972,348,6.63,349,6.63,350,5.475,420,5.475,421,6.207,422,6.207,423,4.632,424,6.207,425,5.475]],["title/controllers/AuthController.html",[228,1.689,426,3.272]],["body/controllers/AuthController.html",[3,0.091,4,0.091,5,0.082,10,0.176,15,0.395,16,0.009,17,0.194,20,0.091,21,0.006,22,0.006,23,0.249,28,1.014,36,0.89,44,0.368,52,1.969,55,1.067,61,0.535,115,1.653,117,1.27,120,1.484,121,1.826,125,1.862,133,1.69,135,2.241,136,0.765,149,2.08,150,2.025,152,2.004,153,2.693,166,2.758,170,2.371,180,1.69,216,2.055,228,1.567,230,1.567,232,2.335,233,2.765,242,2.533,243,4.277,244,2.335,245,3.589,246,2.557,247,2.335,248,2.335,249,4.094,250,4.468,251,2.335,252,3.034,253,3.034,254,1.875,255,2.335,256,2.068,257,2.335,258,1.567,259,3.642,260,2.197,261,2.077,262,2.241,263,1.484,264,1.567,265,4.719,267,2.025,268,4.137,270,1.181,277,3.778,278,1.862,279,3.154,280,3.272,282,2.197,325,2.259,327,2.395,426,4.256,427,3.589,428,1.659,429,5.812,430,4.355,431,6.584,432,3.589,433,6.584,434,5.325,435,4.069,436,4.137,437,3.419,438,4.069,439,4.069,440,3.589,441,6.584,442,5.325,443,5.703,444,4.069,445,4.914,446,4.256,447,2.231,448,4.069,449,4.069,450,4.069,451,4.994,452,4.069,453,5.703,454,4.069,455,5.259,456,1.445,457,1.371,458,3.037,459,4.069,460,4.069,461,3.037,462,4.069,463,2.439,464,4.137,465,3.273,466,4.069,467,4.069,468,4.069,469,4.069,470,5.703,471,3.419,472,5.703,473,4.069,474,3.419,475,3.589,476,6.293,477,4.069,478,4.069,479,4.069,480,4.069,481,5.03,482,4.069,483,4.069,484,2.849,485,2.849,486,2.557,487,2.849,488,2.849,489,4.069,490,4.069,491,4.069,492,3.589,493,4.069]],["title/modules/AuthModule.html",[284,1.369,401,3.069]],["body/modules/AuthModule.html",[3,0.119,4,0.119,5,0.107,16,0.009,17,0.199,20,0.119,21,0.007,22,0.007,23,0.325,119,4.997,136,1,137,3.051,230,2.629,233,1.888,284,2.353,286,2.45,287,2.45,288,2.619,289,2.619,290,2.45,291,3.713,292,2.619,297,4.075,298,3.362,299,2.619,300,2.619,302,3.847,303,2.928,316,3.968,401,6.355,408,5.567,412,4.69,426,5.626,464,5.289,465,4.277,494,4.69,495,4.69,496,5.317,497,4.635,498,5.892,499,5.892,500,5.317,501,5.317,502,5.317,503,3.187,504,4.777,505,3.341,506,5.317,507,6.825,508,3.517,509,5.317,510,5.317,511,5.317,512,5.317,513,5.317,514,5.317,515,3.968,516,4.69,517,4.69,518,5.317,519,5.317,520,5.317,521,4.277,522,5.317]],["title/injectables/AuthService.html",[305,0.999,464,2.755]],["body/injectables/AuthService.html",[3,0.086,4,0.086,5,0.077,10,0.167,12,1.342,14,1.061,15,0.35,16,0.01,17,0.189,18,2.904,20,0.086,21,0.006,22,0.006,23,0.335,28,1.178,41,0.988,44,0.427,52,2.291,53,1.847,55,1.24,88,0.942,115,1.589,117,1.712,119,4.945,120,2.329,121,2.228,125,2.163,133,1.889,136,0.724,137,2.209,149,2.538,150,1.367,152,2.328,153,2.831,162,2.172,166,2.864,175,2.873,180,1.889,189,3.395,233,2.906,238,2.039,242,2.715,258,1.483,260,1.483,263,1.404,264,1.483,265,4.604,267,2.612,268,2.419,270,1.323,282,2.46,305,1.249,306,1.483,314,2.307,315,6.941,316,2.873,317,2.307,318,2.345,319,1.525,320,4.717,321,3.395,325,2.915,327,3.089,338,3.287,429,4.092,430,4.224,432,4.836,440,4.836,447,1.143,451,4.872,455,4.471,456,1.367,457,2.479,464,3.445,475,3.395,476,4.836,481,4.836,492,3.395,523,3.395,524,6.387,525,6.387,526,3.849,527,3.849,528,3.849,529,3.994,530,3.849,531,3.849,532,3.849,533,3.849,534,3.849,535,3.849,536,2.612,537,5.599,538,3.849,539,2.873,540,3.849,541,3.849,542,3.383,543,3.849,544,3.849,545,3.849,546,3.849,547,3.849,548,3.849,549,4.092,550,3.849,551,3.849,552,3.849,553,3.849,554,3.849,555,5.483,556,3.849,557,3.849,558,3.849,559,1.965,560,2.419,561,2.12,562,3.395,563,3.849,564,3.849,565,3.849,566,3.849,567,2.873,568,3.849,569,3.849,570,3.849,571,3.395,572,3.395,573,3.849,574,3.849,575,5.483,576,3.849,577,5.483,578,2.611,579,3.849,580,3.849,581,5.483,582,3.849,583,2.873,584,3.849,585,3.849,586,3.849]],["title/classes/AuthTokenApiResponse.html",[23,0.268,587,1.689]],["body/classes/AuthTokenApiResponse.html",[3,0.097,4,0.097,5,0.087,10,0.187,11,0.804,15,0.385,16,0.009,17,0.188,20,0.196,21,0.006,22,0.006,23,0.539,25,0.633,34,1.764,36,0.804,39,1.536,41,1.528,42,1.565,44,0.332,48,1.578,50,1.536,52,1.194,59,1.724,61,0.569,106,1.085,139,1.621,174,1.621,216,2.753,256,1.971,266,2.358,267,1.536,270,1.517,278,2.494,318,2.468,319,1.714,355,3.175,428,1.764,447,1.285,456,2.113,457,2.292,587,2.292,588,3.134,589,1.994,590,4.327,591,3.937,592,4.327,593,1.751,594,1.194,595,2.406,596,1.817,597,2.406,598,1.817,599,2.406,600,1.817,601,2.058,602,1.817,603,1.994,604,1.994,605,1.817,606,3.872,607,1.565,608,1.458,609,2.06,610,1.667,611,1.667,612,1.667,613,1.667,614,1.667,615,1.667,616,1.667,617,1.667,618,1.667,619,1.667,620,1.667,621,1.764,622,1.667]],["title/classes/AuthTokenOutput.html",[23,0.268,457,1.477]],["body/classes/AuthTokenOutput.html",[3,0.133,4,0.133,5,0.12,10,0.259,11,0.993,12,1.799,14,1.248,15,0.336,16,0.009,17,0.164,20,0.178,21,0.007,22,0.007,23,0.507,25,0.875,35,2.68,36,0.993,44,0.411,59,1.496,61,0.787,87,2.822,88,1.464,99,3.587,104,5.486,106,1.5,107,4.465,109,4.465,366,4.77,430,5.262,447,2.363,457,2.476,529,3.433,536,2.124,583,5.938,623,4.77,624,4.188,625,4.188,626,4.188,627,4.188,628,3.587,629,3.587,630,3.957]],["title/classes/BaseAclService.html",[23,0.268,631,3.272]],["body/classes/BaseAclService.html",[1,5.315,3,0.105,4,0.105,5,0.095,9,6.053,10,0.204,11,0.853,15,0.289,16,0.01,17,0.169,18,4.619,19,3.304,20,0.105,21,0.006,22,0.006,23,0.288,25,0.69,28,0.727,41,1.212,42,1.241,44,0.397,52,1.963,53,2.127,55,0.765,115,1.829,123,3.622,125,1.335,133,1.212,152,1.922,162,1.87,178,2.574,180,2.091,213,5.907,355,2.459,362,3.522,370,4.418,446,4.711,542,2.5,559,3.222,607,1.66,631,4.711,632,4.163,633,7.184,634,6.698,635,6.273,636,6.273,637,5.308,638,4.719,639,6.207,640,6.273,641,4.719,642,3.476,643,4.175,644,5.568,645,5.568,646,4.163,647,6.981,648,6.508,649,4.719,650,6.108,651,4.719,652,4.719,653,4.719,654,6.312,655,8.317,656,6.273,657,4.719,658,6.312,659,4.719,660,4.719,661,4.719,662,4.719,663,4.719,664,2.599,665,5.077,666,4.719,667,7.112,668,4.719,669,4.719,670,3.522,671,4.163,672,4.719,673,4.719,674,4.719]],["title/classes/BaseApiErrorObject.html",[23,0.268,675,2.9]],["body/classes/BaseApiErrorObject.html",[0,2.208,3,0.082,4,0.082,5,0.074,10,0.16,11,0.718,14,1.249,15,0.414,16,0.01,17,0.186,20,0.152,21,0.005,22,0.005,23,0.442,25,0.777,35,1.343,36,1.074,44,0.444,55,0.597,59,1.565,60,1.7,61,0.484,71,1.094,106,1.813,128,3.338,133,0.945,136,0.692,139,2.335,152,1.617,159,4.362,161,4.121,164,4.121,169,4.121,171,4.362,172,3.915,173,4.121,174,1.38,178,1.501,180,1.364,184,4.121,192,2.314,216,1.149,252,1.697,253,2.447,254,1.697,256,2.413,266,2.104,267,1.307,270,1.412,278,1.502,318,2.099,319,1.459,355,3.118,447,1.094,456,1.886,457,1.79,587,2.046,593,1.489,594,1.016,595,2.046,596,1.546,597,2.046,598,1.546,599,2.046,600,1.546,601,1.837,602,1.546,607,1.639,610,2.046,611,2.046,612,2.046,613,2.046,614,2.046,615,2.046,616,2.046,617,2.046,618,2.046,619,2.046,620,2.046,622,2.046,643,2.436,675,4.511,676,4.855,677,2.208,678,4.456,679,3.682,680,3.682,681,3.682,682,3.682,683,3.682,684,3.682,685,3.682,686,3.682,687,3.682,688,2.748,689,2.748,690,2.748,691,2.748,692,2.748,693,2.578,694,2.578,695,2.436,696,4.544,697,3.964,698,2.748,699,2.748,700,2.748,701,3.338,702,2.314,703,2.748,704,2.748,705,2.436,706,2.578,707,3.718,708,2.578,709,2.578,710,2.578,711,2.578,712,2.436,713,2.578,714,5.091,715,3.964,716,2.748,717,2.578,718,2.748,719,2.748,720,3.964,721,3.964,722,2.748,723,3.718,724,3.964,725,2.436,726,2.748,727,2.748,728,2.748,729,2.748,730,2.578]],["title/classes/BaseApiErrorResponse.html",[23,0.268,252,2.02]],["body/classes/BaseApiErrorResponse.html",[0,2.474,3,0.092,4,0.092,5,0.083,10,0.179,11,0.778,14,1.216,15,0.414,16,0.01,17,0.19,20,0.16,21,0.006,22,0.006,23,0.461,25,0.843,35,1.505,36,0.558,44,0.231,55,0.669,59,1.601,60,1.844,61,0.543,71,1.226,106,1.663,128,3.619,133,1.06,136,0.776,139,2.486,152,1.753,159,2.889,161,2.73,164,2.73,169,2.73,171,2.889,172,2.593,173,2.73,174,1.546,178,1.683,180,1.479,184,2.73,192,4.169,216,1.288,252,2.654,253,2.654,254,1.902,256,2.08,266,2.282,267,1.465,270,1.487,278,1.629,318,2.235,319,1.635,355,3.013,447,1.226,456,2.045,457,1.94,587,2.218,593,1.585,594,1.139,595,2.178,596,1.733,597,2.178,598,1.733,599,2.178,600,1.733,601,1.992,602,1.733,607,1.515,610,2.218,611,2.218,612,2.218,613,2.218,614,2.218,615,2.218,616,2.218,617,2.218,618,2.218,619,2.218,620,2.218,622,2.218,643,2.73,675,4.995,676,3.453,677,2.474,678,2.368,688,3.08,689,3.08,690,3.08,691,3.08,692,3.08,693,2.889,694,2.889,695,2.73,696,4.745,697,4.298,698,3.08,699,3.08,700,3.08,701,3.619,702,2.593,703,3.08,704,3.08,705,2.73,706,2.889,707,4.032,708,2.889,709,2.889,710,2.889,711,2.889,712,2.73,713,2.889,714,5.358,715,4.298,716,3.08,717,2.889,718,3.08,719,3.08,720,4.298,721,4.298,722,3.08,723,4.032,724,4.298,725,2.73,726,3.08,727,3.08,728,3.08,729,3.08,730,2.889,731,4.127]],["title/classes/BaseApiException.html",[23,0.268,143,3.272]],["body/classes/BaseApiException.html",[3,0.128,4,0.128,5,0.115,10,0.249,11,0.969,14,1.222,15,0.358,16,0.009,17,0.128,20,0.128,21,0.007,22,0.007,23,0.438,25,0.841,28,0.885,44,0.437,55,0.931,71,2.129,106,1.959,117,2.439,125,1.625,132,4.289,134,6.892,136,1.08,143,5.35,170,2.491,172,4.505,173,5.76,174,3.349,184,5.76,279,3.435,355,2.969,362,5.35,603,2.648,732,7.217,733,5.069,734,5.746,735,7.169,736,5.746,737,5.746,738,5.746,739,5.746,740,5.746,741,5.746,742,5.746,743,5.746]],["title/classes/BaseApiResponse.html",[23,0.268,253,2.02]],["body/classes/BaseApiResponse.html",[0,2.431,3,0.09,4,0.09,5,0.081,10,0.176,11,0.769,14,1.213,15,0.414,16,0.01,17,0.189,20,0.159,21,0.006,22,0.006,23,0.458,25,0.832,35,1.479,36,0.548,44,0.318,55,0.657,59,1.596,60,1.821,61,0.533,71,1.204,106,1.647,128,4.129,133,1.041,136,0.762,139,2.462,152,1.732,159,2.839,161,2.682,164,2.682,169,2.682,171,2.839,172,2.548,173,2.682,174,2.132,178,2.32,180,1.461,184,2.682,192,2.548,216,2.051,252,1.868,253,3.028,254,1.868,256,2.174,266,2.254,267,1.44,270,1.475,278,2.015,318,2.214,319,1.607,355,3.038,447,1.204,456,2.02,457,1.917,559,2.07,587,2.191,593,1.57,594,1.119,595,2.158,596,1.703,597,2.158,598,1.703,599,2.158,600,1.703,601,1.967,602,1.703,607,1.728,610,2.191,611,2.191,612,2.191,613,2.191,614,2.191,615,2.191,616,2.191,617,2.191,618,2.191,619,2.191,620,2.191,622,2.191,643,2.682,675,4.346,676,3.939,677,2.431,678,2.327,688,3.026,689,3.026,690,3.026,691,3.026,692,3.026,693,2.839,694,2.839,695,2.682,696,4.714,697,4.246,698,3.026,699,3.026,700,3.026,701,3.575,702,2.548,703,3.026,704,3.026,705,2.682,706,2.839,707,3.982,708,2.839,709,2.839,710,2.839,711,2.839,712,2.682,713,2.839,714,5.317,715,4.246,716,3.026,717,2.839,718,3.026,719,3.026,720,4.246,721,4.246,722,3.026,723,3.982,724,4.246,725,2.682,726,3.026,727,3.026,728,3.026,729,3.026,730,2.839,744,4.055,745,4.055]],["title/classes/CreateEventDto.html",[23,0.268,746,2.628]],["body/classes/CreateEventDto.html",[3,0.051,4,0.051,5,0.046,7,2.92,10,0.099,11,0.496,12,1.523,14,1.268,15,0.405,16,0.009,17,0.146,20,0.118,21,0.004,22,0.004,23,0.38,25,0.333,28,1.296,35,1.339,36,1.11,37,3.14,39,2.873,40,2.841,41,2.247,42,2.34,44,0.459,53,1.237,55,0.859,56,2.226,59,1.642,60,2.773,61,0.299,62,2.201,63,3.144,64,2.934,65,0.692,66,1.339,67,0.901,68,0.901,71,0.676,72,2.366,79,2.926,80,2.77,87,2.612,88,0.557,89,1.639,170,0.692,270,0.471,279,3.101,536,1.882,593,0.878,594,0.628,595,0.747,607,1.394,664,2.022,746,2.201,747,1.592,748,3.241,749,2.596,750,2.596,751,3.487,752,2.969,753,4.217,754,3.204,755,3.244,756,4.512,757,3.487,758,4.084,759,4.342,760,4.342,761,3.241,762,4.342,763,2.305,764,2.866,765,1.504,766,2.275,767,3.04,768,3.04,769,1.305,770,2.275,771,2.162,772,2.706,773,2.275,774,2.275,775,3.178,776,1.698,777,2.275,778,2.706,779,2.006,780,2.275,781,4.342,782,2.275,783,2.706,784,2.366,785,1.83,786,2.275,787,4.074,788,2.275,789,2.777,790,2.769,791,1.698,792,1.698,793,2.275,794,2.006,795,2.275,796,2.275,797,2.006,798,2.275,799,3.356,800,2.275,801,3.178,802,2.275,803,2.201,804,2.275,805,2.275,806,2.275,807,2.18,808,2.366,809,2.275,810,2.275,811,2.275,812,2.275,813,2.294,814,2.443,815,2.357,816,1.161,817,1.639,818,1.161,819,1.363,820,2.357,821,2.357,822,2.061,823,1.363,824,2.741,825,1.698,826,1.592,827,1.698]],["title/classes/CreateNewsDto.html",[23,0.268,828,2.628]],["body/classes/CreateNewsDto.html",[3,0.071,4,0.177,5,0.064,7,2.881,10,0.138,11,0.645,12,1.751,14,1.256,15,0.385,16,0.009,17,0.152,20,0.142,21,0.005,22,0.005,23,0.437,25,0.466,28,0.98,36,1.074,37,3.405,40,3.083,41,1.958,42,2.089,44,0.444,46,4.792,56,2.671,59,1.676,60,2.497,61,0.419,63,3.028,64,2.879,65,0.97,66,1.741,67,1.262,68,1.262,71,0.946,79,1.891,87,2.625,88,0.779,162,2.52,170,0.97,223,4.296,238,3.033,270,0.659,593,1.141,594,0.879,749,3.041,750,3.041,752,3.478,763,2.699,764,3.661,767,3.405,768,3.405,769,1.827,771,2.593,778,3.246,784,2.839,799,4.144,801,3.813,803,1.909,807,2.553,808,2.839,813,2.066,822,2.556,828,2.862,829,2.229,830,5.085,831,5.085,832,5.085,833,3.185,834,5.693,835,2.562,836,3.185,837,3.185,838,3.185,839,3.185,840,3.185,841,3.185,842,3.185,843,5.693,844,4.747,845,3.563,846,3.185,847,3.185,848,4.747,849,3.563,850,3.185,851,3.185,852,3.185,853,3.185,854,3.185,855,3.185,856,3.185,857,2.229,858,4.273,859,3.563,860,1.909,861,4.273,862,4.273,863,4.273,864,2.377,865,2.377,866,4.273,867,1.909,868,1.909,869,2.377,870,2.377,871,1.516,872,2.377,873,1.827,874,2.377,875,2.001]],["title/classes/CreateOpportunityDto.html",[23,0.268,876,2.628]],["body/classes/CreateOpportunityDto.html",[3,0.056,4,0.056,5,0.051,7,2.921,10,0.109,11,0.538,12,1.592,14,1.269,15,0.405,16,0.009,17,0.152,20,0.125,21,0.004,22,0.004,23,0.397,25,0.368,28,1.288,36,1.115,37,3.247,40,2.83,41,2.217,42,2.321,44,0.461,48,2.985,55,0.91,56,1.671,59,1.652,60,2.744,61,0.331,63,3.126,64,2.938,65,0.766,66,1.452,67,0.997,68,0.997,71,0.747,72,2.506,79,2.882,80,2.352,87,2.61,88,0.616,89,1.777,170,0.766,270,0.521,279,3.055,536,1.994,593,0.951,594,0.694,599,0.826,607,1.477,748,3.352,749,2.73,750,2.73,751,3.667,752,3.122,753,4.361,754,3.582,755,1.198,756,4.635,757,3.667,758,4.236,761,3.352,763,2.424,764,2.997,765,1.664,767,3.154,768,3.154,769,1.444,771,2.289,772,2.866,775,3.366,776,1.878,778,2.866,779,2.219,781,4.191,783,2.866,784,2.506,785,2.024,787,3.511,789,1.123,794,2.219,797,2.219,799,2.766,803,2.386,807,2.292,808,2.506,813,1.722,814,2.587,815,1.284,816,1.284,817,1.777,818,1.284,820,2.032,821,2.521,822,2.204,876,2.386,877,1.761,878,4.566,879,4.566,880,2.516,881,2.516,882,2.516,883,1.878,884,2.516,885,2.516,886,2.516,887,2.516,888,2.516,889,2.516,890,2.516,891,2.516,892,2.516,893,2.516,894,2.516,895,2.516,896,2.516,897,2.516,898,2.971,899,2.971,900,2.516,901,2.516,902,2.516,903,1.508,904,1.878,905,1.508,906,1.878,907,1.878]],["title/classes/CreateOrganizationDto.html",[23,0.268,908,2.628]],["body/classes/CreateOrganizationDto.html",[3,0.061,4,0.061,5,0.055,7,2.903,10,0.118,11,0.574,12,1.867,14,1.253,15,0.388,16,0.009,17,0.157,20,0.131,21,0.004,22,0.004,23,0.411,25,0.4,28,1.27,36,1.081,37,2.84,40,3.082,41,2.247,42,2.325,44,0.447,50,2.839,53,1.431,55,1.237,56,2.467,59,1.645,60,2.64,61,0.359,63,3.077,64,2.766,65,0.832,66,1.549,67,1.083,68,1.083,71,0.812,72,2.622,75,3.886,79,2.88,80,3.461,82,2.04,87,2.525,88,0.669,89,1.896,106,1.473,170,0.832,270,0.566,536,2.65,593,1.015,594,0.754,597,0.897,607,1.545,628,3.815,629,3.815,664,2.339,748,3.44,749,2.84,750,2.84,755,3.461,761,3.44,763,2.521,765,1.807,767,3.244,768,3.68,769,2.437,771,2.964,772,3.71,783,2.999,784,2.622,785,2.198,789,3.006,790,3.123,791,2.04,792,2.04,803,2.546,807,2.384,808,2.622,813,2.542,814,2.4,815,2.659,816,1.395,817,1.896,818,1.395,820,2.999,821,2.659,822,2.325,835,2.198,908,2.546,909,1.913,910,4.749,911,4.749,912,2.733,913,2.733,914,2.733,915,2.733,916,2.733,917,2.733,918,2.733,919,5.425,920,2.733,921,2.733,922,2.733,923,2.733,924,2.733,925,5.425,926,4.385,927,2.41,928,2.733,929,2.733,930,2.733,931,2.733,932,1.638,933,3.888,934,3.888,935,3.446,936,3.888,937,1.638,938,1.807,939,1.913]],["title/classes/CreateUserInput.html",[23,0.268,940,3.272]],["body/classes/CreateUserInput.html",[3,0.121,4,0.121,5,0.109,10,0.236,11,0.936,13,4.568,14,1.209,15,0.388,16,0.009,17,0.17,18,4.036,19,3.809,20,0.121,21,0.007,22,0.007,23,0.423,25,0.796,27,3.122,35,2.526,36,1.144,44,0.473,53,2.334,55,1.235,58,4.8,59,1.592,60,2.217,61,0.716,62,4.152,63,2.459,64,2.502,65,1.657,536,2.705,642,4.738,664,3.814,813,2.997,814,3.191,940,5.17,941,6.422,942,6.129,943,4.788,944,5.687,945,4.8,946,5.441,947,5.441,948,5.441,949,4.8,950,5.441,951,4.196,952,5.441,953,5.441,954,4.8,955,4.8,956,5.441,957,5.441,958,6.927,959,6.927,960,5.441,961,5.798,962,4.377,963,4.061,964,5.572,965,5.441,966,4.377]],["title/classes/EventApiResponse.html",[23,0.268,614,1.689]],["body/classes/EventApiResponse.html",[3,0.097,4,0.097,5,0.087,10,0.187,11,0.804,15,0.385,16,0.009,17,0.188,20,0.196,21,0.006,22,0.006,23,0.539,25,0.633,34,1.764,36,0.804,39,1.536,41,1.528,42,1.565,44,0.332,48,1.578,50,1.536,52,1.194,59,1.724,61,0.569,106,1.085,139,1.621,174,1.621,216,2.753,256,1.971,266,2.358,267,1.536,270,1.517,278,2.494,318,2.468,319,1.714,355,3.175,428,1.764,447,1.285,456,2.113,457,2.005,587,1.667,588,3.134,589,1.994,591,3.937,593,1.751,594,1.194,595,2.522,596,1.817,597,2.406,598,1.817,599,2.406,600,1.817,601,2.058,602,1.817,603,1.994,604,1.994,605,1.817,606,3.872,607,1.565,608,1.458,609,2.06,610,1.667,611,1.667,612,1.667,613,1.667,614,2.292,615,1.667,616,1.667,617,1.667,618,1.667,619,1.667,620,1.667,621,1.764,622,1.667,967,4.327,968,4.327]],["title/classes/EventArrayApiResponse.html",[23,0.268,615,1.689]],["body/classes/EventArrayApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.722,61,0.568,106,1.083,139,1.619,170,1.316,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.75,594,1.193,595,2.521,596,1.815,597,2.404,598,1.815,599,2.404,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,1.665,613,1.665,614,1.665,615,2.29,616,1.665,617,1.665,618,1.665,619,1.665,620,1.665,621,1.762,622,1.665,678,2.48,969,4.322,970,4.322]],["title/classes/EventResponseDto.html",[23,0.268,595,1.44]],["body/classes/EventResponseDto.html",[3,0.05,4,0.05,5,0.045,7,2.919,10,0.097,11,0.492,12,1.715,14,1.267,15,0.406,16,0.009,17,0.145,20,0.117,21,0.004,22,0.004,23,0.378,25,0.329,28,1.263,35,1.671,36,1.122,37,3.404,39,2.89,40,2.835,41,2.239,42,2.337,44,0.464,53,1.226,55,0.853,56,2.211,59,1.64,60,2.77,61,0.296,62,2.181,63,3.14,64,2.931,65,0.684,66,1.327,67,0.891,68,0.891,71,0.668,72,2.045,79,2.776,80,2.753,87,2.607,88,0.55,89,2.045,91,1.678,170,0.684,270,0.466,279,3.091,536,1.869,593,1.095,594,0.62,595,1.195,607,1.385,664,2.003,746,1.348,747,1.574,748,3.228,749,2.581,750,2.581,751,3.467,752,2.952,753,4.2,754,3.184,755,2.946,756,4.498,757,3.467,758,4.066,759,4.316,760,4.316,761,3.228,762,4.316,763,1.815,764,2.851,767,3.027,768,3.027,771,2.147,772,2.687,775,3.156,778,2.687,783,2.687,784,2.35,789,2.581,790,2.181,799,3.341,801,3.156,807,2.441,808,2.35,813,2.278,814,2.426,815,2.339,816,1.147,817,2.045,818,1.147,819,1.348,820,2.339,821,2.339,822,2.045,823,1.348,824,3.93,825,1.678,826,3.207,827,2.715,971,2.248,972,1.808,973,2.248,974,1.808,975,2.248,976,1.983,977,2.248,978,1.983,979,2.248,980,4.042,981,2.248,982,1.983,983,2.248,984,2.715,985,2.248,986,4.042,987,2.248,988,2.248,989,2.248,990,2.248,991,2.248,992,1.983,993,2.248,994,2.248,995,1.983,996,2.248,997,3.209,998,2.248,999,2.248,1000,1.983,1001,2.248,1002,2.248,1003,2.248,1004,2.248,1005,1.983,1006,2.248,1007,2.248]],["title/controllers/EventsController.html",[228,1.689,1008,3.272]],["body/controllers/EventsController.html",[3,0.077,4,0.077,5,0.069,10,0.149,12,2.031,14,1.104,15,0.407,16,0.009,17,0.178,20,0.077,21,0.005,22,0.005,23,0.21,28,1.083,36,0.95,39,2.768,44,0.393,55,1.14,61,0.451,115,1.462,117,1.071,120,1.252,121,1.615,125,1.988,133,1.805,135,1.89,136,0.645,149,1.84,150,1.792,152,2.14,153,2.798,166,2.816,170,2.463,180,1.805,216,2.195,228,1.322,230,1.322,232,1.969,233,3.024,242,2.872,243,3.588,244,1.969,246,3.171,247,1.969,248,1.969,249,4.218,250,4.707,251,1.969,252,3.78,253,1.581,254,1.581,255,1.969,256,2.13,257,1.969,258,1.322,259,3.752,260,1.944,261,1.752,262,1.89,263,1.252,264,1.322,277,4.034,278,1.988,279,3.397,280,4.034,282,2.708,325,2.785,327,2.952,436,4.418,437,4.215,463,2.058,471,4.215,474,4.215,561,2.779,578,3.852,595,1.127,608,1.7,746,3.955,819,3.955,823,3.955,1008,3.766,1009,3.027,1010,7.394,1011,5.279,1012,5.279,1013,5.279,1014,5.279,1015,5.279,1016,3.027,1017,2.403,1018,3.432,1019,3.027,1020,2.562,1021,4.189,1022,5.487,1023,3.432,1024,3.027,1025,3.752,1026,2.27,1027,3.432,1028,3.027,1029,2.562,1030,3.432,1031,3.027,1032,2.562,1033,2.486,1034,3.432,1035,2.157,1036,2.27,1037,4.146,1038,1.89,1039,2.157,1040,3.958,1041,3.027,1042,3.027,1043,3.432,1044,3.432,1045,3.432,1046,3.432,1047,3.027,1048,3.432,1049,3.761,1050,6.598,1051,3.027,1052,3.432,1053,2.562,1054,4.189,1055,3.027,1056,3.432,1057,2.562,1058,3.027,1059,3.432,1060,2.562,1061,3.027,1062,3.432,1063,3.432]],["title/modules/EventsModule.html",[284,1.369,402,3.069]],["body/modules/EventsModule.html",[3,0.137,4,0.137,5,0.123,16,0.009,17,0.191,20,0.137,21,0.008,22,0.008,23,0.375,136,1.155,230,2.877,284,2.512,286,2.829,287,2.829,288,3.025,289,3.025,290,2.829,291,3.965,292,3.025,297,4.155,298,3.679,299,3.025,300,3.025,302,3.812,303,3.382,402,6.321,497,4.805,508,4.062,1008,6.007,1040,5.771,1041,5.417,1064,5.417,1065,6.141,1066,5.417,1067,6.141,1068,4.299,1069,6.141]],["title/classes/EventsSearchInput.html",[23,0.268,819,2.628]],["body/classes/EventsSearchInput.html",[3,0.059,4,0.059,5,0.053,7,2.94,10,0.115,11,0.562,12,1.538,14,1.267,15,0.397,16,0.009,17,0.155,20,0.129,21,0.004,22,0.004,23,0.407,25,0.389,28,0.641,35,1.516,36,0.782,39,2.856,40,2.811,41,2.278,42,2.329,44,0.323,53,1.951,55,0.83,56,2.15,59,1.668,60,2.822,61,0.35,62,2.493,63,3.187,64,2.969,65,0.81,66,2.291,67,1.054,68,1.054,71,1.235,72,2.285,79,1.648,80,2.992,87,2.674,88,0.651,89,1.856,106,1.042,178,1.696,270,0.551,279,3.024,536,1.818,559,2.123,593,0.994,594,0.734,595,0.873,607,1.347,664,2.29,746,1.594,747,1.862,748,3.069,749,2.285,750,2.285,751,3.07,752,2.614,753,3.993,754,2.82,755,2.992,756,4.438,757,3.07,758,3.993,759,3.821,760,3.821,761,3.069,762,3.821,763,2.489,764,3.069,767,2.973,768,2.973,771,2.088,772,2.614,775,3.07,778,2.614,783,2.614,784,2.285,789,2.804,790,2.493,799,3.282,801,3.07,807,2.169,808,2.285,813,2.505,814,2.668,815,2.614,816,1.358,817,1.856,818,1.358,819,2.493,820,2.614,821,2.614,822,2.285,823,1.594,824,3.104,825,1.985,826,1.862,827,1.985,951,2.29,1070,2.123,1071,2.123,1072,2.346,1073,2.66,1074,2.66,1075,2.139,1076,2.66,1077,2.751,1078,2.751,1079,2.751,1080,2.751,1081,1.862,1082,2.613,1083,1.862]],["title/injectables/EventsService.html",[305,0.999,1040,2.9]],["body/injectables/EventsService.html",[3,0.068,4,0.068,5,0.061,10,0.131,12,2.071,14,1.089,15,0.321,16,0.01,17,0.172,20,0.068,21,0.005,22,0.005,23,0.281,28,1.081,29,3.218,39,2.785,44,0.392,53,2.783,55,1.138,88,0.741,100,3.698,115,1.332,117,1.435,120,1.676,121,1.985,123,2.638,125,1.985,133,1.712,136,0.57,149,1.676,150,1.632,152,2.461,153,2.713,162,2.457,166,2.759,180,1.872,223,2.532,233,3.004,242,2.785,258,1.167,260,1.167,263,1.105,264,1.167,278,1.885,282,2.964,305,1.047,306,1.167,309,1.816,310,3.593,317,1.816,322,1.816,323,1.738,325,2.642,327,2.8,331,2.672,338,3.997,542,2.943,560,1.904,578,3.577,595,0.995,605,1.272,608,1.021,642,4.016,746,3.718,748,3.674,755,3.342,761,3.462,763,2.642,764,2.56,807,2.498,819,3.718,823,3.718,826,3.889,871,1.443,1010,4.9,1011,4.9,1012,4.9,1013,4.9,1014,4.9,1015,4.9,1016,2.672,1019,2.672,1024,2.672,1025,3.166,1028,2.672,1031,2.672,1033,2.265,1040,3.041,1042,2.672,1047,2.672,1051,2.672,1055,2.672,1058,2.672,1061,2.672,1070,2.347,1071,2.347,1084,2.672,1085,3.03,1086,3.03,1087,3.03,1088,3.03,1089,3.03,1090,3.03,1091,2.261,1092,2.121,1093,2.889,1094,2.121,1095,2.121,1096,1.738,1097,1.816,1098,1.904,1099,2.121,1100,3.03,1101,3.218,1102,2.004,1103,4.469,1104,2.004,1105,2.004,1106,3.675,1107,3.041,1108,2.121,1109,2.121,1110,3.218,1111,2.121,1112,2.121,1113,3.03,1114,3.431,1115,2.261,1116,2.261,1117,2.121,1118,2.121,1119,5.556,1120,5.556,1121,5.556,1122,3.889,1123,4.629,1124,3.03,1125,3.431,1126,3.431,1127,4.469,1128,4.597,1129,3.03,1130,4.597,1131,4.597,1132,3.03,1133,3.698,1134,2.121,1135,2.261,1136,2.121,1137,3.431,1138,2.261,1139,2.261]],["title/classes/GalleryInput.html",[23,0.268,789,1.957]],["body/classes/GalleryInput.html",[3,0.135,4,0.178,5,0.121,7,2.365,10,0.261,11,0.998,12,1.808,14,1.25,15,0.338,16,0.009,17,0.178,20,0.165,21,0.007,22,0.007,23,0.508,25,0.883,28,1.138,36,0.998,37,3.298,44,0.413,59,1.502,61,0.794,64,2.622,65,1.837,87,2.747,88,1.477,355,2.555,771,2.461,789,3.298,817,2.693,871,2.873,873,3.463,875,3.792,1140,4.854,1141,7.342,1142,7.342,1143,6.035,1144,6.035,1145,6.035,1146,6.035]],["title/classes/GalleryResponse.html",[23,0.268,817,1.957]],["body/classes/GalleryResponse.html",[3,0.127,4,0.159,5,0.115,7,2.283,10,0.247,11,0.964,12,1.997,14,1.262,15,0.392,16,0.009,17,0.174,20,0.159,21,0.007,22,0.007,23,0.498,25,0.834,36,1.158,44,0.479,59,1.464,61,0.75,64,2.556,65,1.735,87,2.828,88,1.395,355,1.971,771,2.324,789,2.544,817,3.183,871,3.707,873,4.467,875,4.892,1140,4.584,1141,7.195,1142,7.195,1147,5.699,1148,5.699,1149,5.699,1150,5.699,1151,5.699,1152,5.699]],["title/classes/ImagekitApiResponse.html",[23,0.268,622,1.689]],["body/classes/ImagekitApiResponse.html",[3,0.097,4,0.097,5,0.087,10,0.187,11,0.804,15,0.385,16,0.009,17,0.188,20,0.196,21,0.006,22,0.006,23,0.539,25,0.633,34,1.764,36,0.804,39,1.536,41,1.528,42,1.565,44,0.332,48,1.578,50,1.536,52,1.194,59,1.724,61,0.569,106,1.085,139,1.621,174,1.621,216,2.753,256,1.971,266,2.358,267,1.536,270,1.517,278,2.494,318,2.468,319,1.714,355,3.175,428,1.764,447,1.285,456,2.113,457,2.005,587,1.667,588,3.134,589,1.994,591,3.937,593,1.751,594,1.194,595,2.406,596,1.817,597,2.406,598,1.817,599,2.406,600,1.817,601,2.352,602,1.817,603,1.994,604,1.994,605,1.817,606,3.872,607,1.565,608,1.458,609,2.06,610,1.667,611,1.667,612,1.667,613,1.667,614,1.667,615,1.667,616,1.667,617,1.667,618,1.667,619,1.667,620,1.667,621,1.764,622,2.292,1153,4.327,1154,4.327]],["title/classes/ImagekitAuthParams.html",[23,0.268,1155,3.272]],["body/classes/ImagekitAuthParams.html",[3,0.125,4,0.125,5,0.113,7,2.773,10,0.243,11,0.954,14,1.202,15,0.354,16,0.009,17,0.158,20,0.125,21,0.007,22,0.007,23,0.472,25,0.82,36,1.044,37,3.449,40,2.951,44,0.432,59,1.647,61,0.737,87,2.735,88,1.372,106,1.77,428,3.151,447,2.573,515,4.185,601,1.939,621,3.605,702,3.524,938,3.709,1155,5.767,1156,4.511,1157,6.816,1158,6.816,1159,6.227,1160,7.06,1161,5.608,1162,6.227,1163,5.608,1164,4.946,1165,5.608,1166,6.227,1167,4.511,1168,4.946,1169,5.269,1170,4.946,1171,5.679]],["title/controllers/ImagekitController.html",[228,1.689,1172,3.272]],["body/controllers/ImagekitController.html",[3,0.12,4,0.12,5,0.108,10,0.233,15,0.378,16,0.009,17,0.196,20,0.12,21,0.007,22,0.007,23,0.328,28,0.828,36,0.726,44,0.3,55,0.871,61,0.707,115,1.991,117,1.678,120,1.96,121,2.2,125,1.52,133,1.38,135,2.959,136,1.01,149,2.506,150,2.44,152,1.636,153,2.376,166,2.622,170,2.092,180,1.38,216,1.678,228,2.07,230,2.07,232,3.084,233,2.69,242,2.44,244,3.084,247,3.084,248,3.084,249,3.943,250,4.347,251,3.084,252,3.491,253,2.476,254,2.476,255,3.084,256,1.557,257,3.084,258,2.07,259,3.508,260,2.647,261,2.743,262,2.959,263,1.96,264,2.07,277,3.084,278,1.52,279,2.886,280,3.084,282,2.07,325,2.129,327,2.257,428,2.802,437,3.222,463,3.222,471,3.222,474,3.222,601,1.858,621,3.089,1037,4.318,1038,2.959,1039,3.377,1049,3.377,1172,5.129,1173,4.74,1174,7.576,1175,5.374,1176,5.374,1177,5.374,1178,5.374,1179,4.74,1180,5.011,1181,4.74,1182,5.374,1183,5.374,1184,5.374,1185,4.323,1186,5.374,1187,5.374,1188,6.872,1189,5.374]],["title/modules/ImagekitModule.html",[284,1.369,403,3.069]],["body/modules/ImagekitModule.html",[3,0.14,4,0.14,5,0.127,16,0.009,17,0.188,20,0.14,21,0.008,22,0.008,23,0.385,136,1.184,230,2.921,284,2.54,286,2.901,287,2.901,288,3.102,289,3.102,290,2.901,291,4.008,292,3.102,297,4.179,298,3.735,299,3.102,300,3.102,302,3.87,303,3.467,403,6.267,1172,6.072,1180,5.805,1181,5.554,1190,5.554,1191,5.554,1192,6.296,1193,6.296,1194,6.296]],["title/classes/ImagekitResponseDto.html",[23,0.268,601,1.516]],["body/classes/ImagekitResponseDto.html",[3,0.124,4,0.124,5,0.111,7,2.766,10,0.24,11,0.947,14,1.213,15,0.37,16,0.009,17,0.156,20,0.124,21,0.007,22,0.007,23,0.469,25,0.811,36,1.091,37,3.605,40,2.658,44,0.451,59,1.644,61,0.729,87,2.775,88,1.357,106,1.39,428,3.134,447,2.283,515,5.737,601,2.424,621,3.598,702,4.405,938,3.668,1155,5.737,1156,4.46,1157,4.891,1158,4.891,1159,4.891,1162,4.891,1166,6.183,1167,6.183,1168,6.183,1169,6.028,1170,6.183,1171,6.497,1195,5.545,1196,5.545,1197,5.545,1198,5.545,1199,5.545,1200,5.545]],["title/injectables/ImagekitService.html",[305,0.999,1180,2.9]],["body/injectables/ImagekitService.html",[3,0.124,4,0.124,5,0.111,10,0.24,11,0.946,14,1.18,15,0.352,16,0.009,17,0.19,20,0.124,21,0.007,22,0.007,23,0.338,28,1.079,44,0.429,55,1.135,115,2.029,117,2.186,119,5.345,120,2.801,121,2.584,125,1.98,133,1.421,136,1.041,137,3.177,149,3.036,150,2.866,152,1.686,153,1.914,162,2.193,166,2.651,180,1.421,233,2.727,242,2.486,258,2.133,260,2.133,263,2.019,264,2.133,305,1.596,306,2.133,325,2.193,327,2.325,515,5.227,517,4.883,601,1.914,621,3.564,1167,5.633,1169,4.132,1171,4.453,1179,4.883,1180,4.632,1201,4.883,1202,7.003,1203,4.453,1204,7.003,1205,7.003,1206,5.536,1207,5.536,1208,7.003,1209,5.536,1210,5.536,1211,7.003,1212,5.536,1213,5.536,1214,5.536,1215,5.536]],["title/injectables/JwtAuthGuard.html",[305,0.999,1038,2.414]],["body/injectables/JwtAuthGuard.html",[3,0.187,4,0.125,5,0.113,10,0.243,15,0.323,16,0.009,17,0.181,20,0.125,21,0.007,22,0.007,23,0.342,28,1.088,35,2.574,40,1.939,44,0.394,52,2.307,55,1.144,71,2.097,115,2.046,124,4.67,125,1.996,132,4.185,133,1.813,136,1.054,162,2.222,176,3.709,180,1.813,242,2.506,284,1.75,305,1.609,306,2.16,314,3.362,484,3.925,485,3.925,486,3.524,487,3.925,488,3.925,503,3.362,504,3.925,505,3.524,542,3.739,560,3.524,561,3.088,670,4.185,1038,3.888,1216,6.215,1217,4.511,1218,7.06,1219,6.215,1220,6.227,1221,4.511,1222,5.677,1223,5.608,1224,6.215,1225,6.227,1226,5.608,1227,7.154,1228,4.511,1229,4.185,1230,4.946,1231,4.946,1232,4.946,1233,4.946,1234,4.946,1235,4.946,1236,4.946,1237,4.185,1238,4.185,1239,4.185,1240,4.946,1241,4.946]],["title/injectables/JwtAuthStrategy.html",[305,0.999,497,2.414]],["body/injectables/JwtAuthStrategy.html",[3,0.12,4,0.12,5,0.108,10,0.233,12,1.317,15,0.315,16,0.009,17,0.192,20,0.12,21,0.007,22,0.007,23,0.329,28,1.06,44,0.384,52,2.205,55,1.115,71,2.043,115,1.993,117,2.147,119,5.306,125,1.945,133,1.382,136,1.012,137,3.088,138,3.227,149,2.508,150,2.442,152,1.639,176,3.56,178,2.195,180,1.946,233,2.692,242,2.442,270,1.115,282,2.073,284,1.68,305,1.567,306,2.073,310,4.229,322,3.227,323,3.088,366,3.227,447,1.599,455,3.768,484,3.768,485,3.768,486,3.382,487,3.768,488,3.768,497,3.788,503,3.227,504,5.307,505,3.382,521,4.329,529,3.088,578,2.563,607,1.809,1203,4.329,1237,4.017,1238,4.017,1239,4.017,1242,6.098,1243,4.748,1244,6.098,1245,6.098,1246,6.098,1247,5.383,1248,6.068,1249,5.383,1250,4.748,1251,5.134,1252,4.017,1253,4.017,1254,4.748,1255,5.383,1256,4.748,1257,5.383,1258,4.748,1259,4.329,1260,4.329,1261,4.017,1262,4.329,1263,4.329,1264,4.748,1265,4.748]],["title/injectables/JwtRefreshGuard.html",[305,0.999,458,3.272]],["body/injectables/JwtRefreshGuard.html",[3,0.187,4,0.125,5,0.113,10,0.243,15,0.323,16,0.009,17,0.181,20,0.125,21,0.007,22,0.007,23,0.342,28,1.088,35,2.574,40,1.939,44,0.394,52,2.307,55,1.144,71,2.097,115,2.046,124,4.67,125,1.996,132,4.185,133,1.813,136,1.054,162,2.222,176,3.709,180,1.813,242,2.506,284,1.75,305,1.609,306,2.16,314,3.362,458,5.269,484,3.925,485,3.925,486,3.524,487,3.925,488,3.925,503,3.362,505,3.524,542,3.739,560,3.524,561,3.088,670,4.185,1216,6.215,1219,6.215,1220,6.227,1221,4.511,1222,5.677,1224,6.215,1225,6.227,1227,7.154,1228,4.511,1229,4.185,1230,4.946,1231,4.946,1232,4.946,1233,4.946,1234,4.946,1235,4.946,1236,4.946,1237,4.185,1238,4.185,1239,4.185,1240,4.946,1241,4.946,1266,4.946,1267,7.06,1268,5.608,1269,5.608,1270,4.185]],["title/injectables/JwtRefreshStrategy.html",[305,0.999,498,3.069]],["body/injectables/JwtRefreshStrategy.html",[3,0.125,4,0.125,5,0.113,10,0.243,12,1.372,15,0.323,16,0.009,17,0.19,20,0.125,21,0.007,22,0.007,23,0.342,28,1.088,44,0.394,52,1.548,55,1.144,71,2.097,115,2.046,117,1.75,119,5.362,125,1.996,133,1.44,136,1.054,137,3.218,138,3.362,150,1.991,176,3.709,178,2.286,180,1.813,233,2.743,242,2.506,270,1.161,284,1.75,305,1.609,306,2.16,423,4.185,447,1.665,455,3.925,484,3.925,485,3.925,486,3.524,487,3.925,488,3.925,498,4.942,503,3.362,505,3.524,516,4.946,521,4.511,578,2.67,607,1.857,630,3.709,1203,4.511,1237,4.185,1238,4.185,1239,4.185,1242,6.215,1244,6.215,1245,6.215,1246,6.215,1248,6.227,1250,4.946,1251,5.269,1252,4.185,1253,4.185,1254,4.946,1256,4.946,1258,4.946,1259,4.511,1260,4.511,1261,4.185,1262,4.511,1263,4.511,1265,4.946,1270,5.767,1271,4.946,1272,5.608,1273,5.608,1274,5.608]],["title/injectables/LocalAuthGuard.html",[305,0.999,461,3.272]],["body/injectables/LocalAuthGuard.html",[3,0.152,4,0.152,5,0.137,16,0.009,17,0.188,20,0.152,21,0.008,22,0.008,23,0.415,71,2.357,136,1.278,305,1.808,306,2.619,461,5.923,503,4.076,505,4.273,1217,5.47,1228,5.47,1275,5.998,1276,7.936,1277,5.075]],["title/injectables/LocalStrategy.html",[305,0.999,499,3.069]],["body/injectables/LocalStrategy.html",[3,0.117,4,0.117,5,0.105,10,0.227,14,1.163,15,0.309,16,0.009,17,0.195,20,0.117,21,0.007,22,0.007,23,0.319,28,1.04,44,0.377,52,2.064,53,2.275,55,1.094,71,2.005,115,1.957,117,2.108,120,2.727,121,2.53,125,1.909,133,1.343,136,0.983,138,5.179,140,4.206,147,3.66,148,4.206,149,2.462,150,1.856,152,2.056,153,1.808,176,3.459,178,2.132,180,1.734,233,2.655,242,2.397,258,2.014,260,2.014,270,1.083,282,2.014,305,1.538,306,2.014,325,2.072,327,2.196,447,1.553,455,3.66,464,5.265,465,4.206,499,4.727,503,3.135,505,3.286,529,3,536,2.905,561,2.88,562,4.612,607,1.776,943,5.142,1244,4.206,1245,5.431,1246,6.357,1251,5.039,1253,3.903,1259,4.206,1260,4.206,1261,3.903,1262,4.206,1263,4.206,1277,5.581,1278,4.612,1279,6.752,1280,5.229,1281,5.229,1282,5.229,1283,5.229,1284,4.206,1285,6.752,1286,5.229,1287,5.229,1288,5.229,1289,5.229,1290,5.229,1291,3.903,1292,5.229,1293,5.229]],["title/injectables/LoggingInterceptor.html",[305,0.999,1294,3.272]],["body/injectables/LoggingInterceptor.html",[3,0.125,4,0.125,5,0.112,10,0.243,15,0.323,16,0.009,17,0.186,20,0.125,21,0.007,22,0.007,23,0.342,28,1.087,44,0.394,55,1.143,113,4.178,115,2.044,117,1.748,121,2.73,124,3.703,125,1.994,133,1.437,136,1.053,138,4.629,139,2.098,146,4.938,147,3.919,148,4.503,152,2.667,153,1.936,169,4.665,180,1.437,305,1.607,306,2.157,423,4.178,486,4.852,1222,5.674,1224,6.211,1229,4.178,1261,5.264,1291,4.178,1294,5.264,1295,4.938,1296,7.053,1297,5.599,1298,5.599,1299,7.053,1300,8.106,1301,5.599,1302,7.053,1303,7.053,1304,5.599,1305,5.599,1306,4.938,1307,5.599,1308,7.053,1309,7.053,1310,5.599,1311,5.599,1312,5.599,1313,7.053,1314,7.053,1315,5.599,1316,5.599]],["title/classes/LoginInput.html",[23,0.268,434,3.272]],["body/classes/LoginInput.html",[3,0.142,4,0.142,5,0.128,10,0.276,11,1.032,14,1.177,15,0.35,16,0.009,17,0.17,20,0.142,21,0.008,22,0.008,23,0.467,25,0.933,27,3.659,36,1.032,44,0.427,59,1.538,61,0.839,64,2.509,65,1.941,429,6.105,434,5.702,536,2.904,623,4.904,814,3.52,943,5.14,961,5.726,963,4.759,1317,6.377,1318,6.377,1319,6.377,1320,6.377,1321,5.625]],["title/controllers/NewsController.html",[228,1.689,1322,3.272]],["body/controllers/NewsController.html",[3,0.076,4,0.076,5,0.069,10,0.148,12,2.03,14,1.104,15,0.407,16,0.009,17,0.177,20,0.076,21,0.005,22,0.005,23,0.209,28,1.082,36,0.949,44,0.392,46,4.836,55,1.138,61,0.45,115,1.459,117,1.068,120,1.248,121,1.612,125,1.986,133,1.803,135,1.885,136,0.643,149,1.836,150,1.788,152,2.138,153,2.796,166,2.815,170,2.461,180,1.803,216,2.192,228,1.318,230,1.318,232,1.964,233,3.023,242,2.87,243,3.582,244,1.964,246,3.164,247,1.964,248,1.964,249,4.214,250,4.704,251,1.964,252,3.777,253,1.577,254,1.577,255,1.964,256,2.128,257,1.964,258,1.318,259,3.748,260,1.94,261,1.747,262,1.885,263,1.248,264,1.318,277,4.029,278,1.986,279,3.395,280,4.029,282,2.705,325,2.782,327,2.948,436,4.412,437,4.209,463,2.052,471,4.209,474,4.209,561,2.773,578,3.709,608,1.697,828,3.95,860,3.95,867,3.95,868,2.052,1017,2.395,1020,2.554,1021,4.182,1022,5.481,1025,3.748,1026,2.263,1029,2.554,1032,2.554,1033,2.481,1035,2.15,1036,2.263,1037,4.14,1038,1.885,1039,2.15,1049,3.754,1053,2.554,1054,4.182,1057,2.554,1060,2.554,1322,3.758,1323,3.019,1324,5.27,1325,5.27,1326,5.27,1327,5.27,1328,5.27,1329,3.019,1330,3.422,1331,3.019,1332,5.907,1333,3.422,1334,3.019,1335,3.422,1336,3.019,1337,3.422,1338,3.019,1339,3.422,1340,3.952,1341,3.019,1342,3.019,1343,3.422,1344,3.422,1345,3.422,1346,3.422,1347,3.019,1348,3.422,1349,6.589,1350,3.019,1351,3.422,1352,3.019,1353,3.422,1354,3.019,1355,3.422,1356,3.019,1357,3.422]],["title/modules/NewsModule.html",[284,1.369,404,3.069]],["body/modules/NewsModule.html",[3,0.137,4,0.137,5,0.123,16,0.009,17,0.191,20,0.137,21,0.008,22,0.008,23,0.375,136,1.155,230,2.877,284,2.512,286,2.829,287,2.829,288,3.025,289,3.025,290,2.829,291,3.965,292,3.025,297,4.155,298,3.679,299,3.025,300,3.025,302,3.812,303,3.382,404,6.321,497,4.805,508,4.062,1068,4.299,1322,6.007,1340,5.771,1341,5.417,1358,5.417,1359,5.417,1360,6.141,1361,6.141,1362,6.141]],["title/classes/NewsResponseDto.html",[23,0.268,868,2.628]],["body/classes/NewsResponseDto.html",[3,0.068,4,0.176,5,0.062,7,2.871,10,0.133,11,0.626,12,1.889,14,1.253,15,0.392,16,0.009,17,0.149,20,0.139,21,0.005,22,0.005,23,0.43,25,0.448,28,1.086,36,1.119,37,3.616,40,3.063,41,1.935,42,2.069,44,0.463,46,4.787,56,2.618,59,1.67,60,2.47,61,0.403,63,3.009,64,2.865,65,0.932,66,1.69,67,1.213,68,1.213,71,0.909,79,1.836,87,2.607,88,0.749,162,2.47,170,0.932,223,4.249,238,2.962,270,0.634,593,1.336,594,0.845,749,2.989,750,2.989,752,3.419,763,2.215,764,3.624,767,3.364,768,3.364,771,2.542,778,3.183,784,2.783,799,4.175,801,3.738,807,2.742,808,2.783,813,2.005,822,2.495,828,1.835,829,2.143,830,4.999,831,4.999,832,4.999,834,5.626,843,5.626,844,3.458,845,2.285,848,4.173,849,2.285,857,2.143,858,4.173,859,3.458,860,1.835,861,4.173,862,4.173,863,4.173,864,2.285,865,2.285,866,4.173,867,1.835,868,2.778,869,2.285,870,3.458,871,2.662,872,3.458,873,3.208,874,3.458,875,3.513,972,2.463,974,2.463,984,2.285,1363,3.062,1364,3.062,1365,3.062,1366,3.062,1367,4.634,1368,3.062,1369,3.062,1370,3.062,1371,3.062,1372,3.062,1373,3.062,1374,3.062,1375,3.062,1376,3.062,1377,3.062,1378,3.062,1379,3.062,1380,3.062,1381,3.062,1382,3.062,1383,3.062,1384,3.062,1385,3.062,1386,3.062]],["title/classes/NewsSearchInput.html",[23,0.268,860,2.628]],["body/classes/NewsSearchInput.html",[3,0.076,4,0.169,5,0.069,7,2.898,10,0.148,11,0.681,12,1.719,14,1.253,15,0.375,16,0.009,17,0.157,20,0.147,21,0.005,22,0.005,23,0.449,25,0.501,28,1.132,36,0.891,40,3.037,41,2.042,42,2.049,44,0.368,46,4.721,53,1.698,56,2.51,59,1.688,60,2.546,61,0.45,63,3.062,64,2.904,65,1.043,66,2.562,67,1.357,68,1.357,71,1.497,79,1.996,87,2.658,88,0.838,106,1.263,162,2.368,178,2.055,223,4.046,238,3.166,270,0.709,559,2.572,593,1.204,594,0.945,749,2.668,750,2.668,752,3.051,763,2.783,764,3.664,767,3.279,768,3.279,769,1.966,771,2.437,778,3.051,784,2.668,799,4.087,801,3.584,807,2.47,808,2.668,813,2.181,822,2.668,828,2.054,829,2.398,830,4.462,831,4.462,832,4.462,834,5.483,843,5.483,844,3.761,845,2.557,848,4.462,849,2.557,857,2.398,858,4.462,859,3.761,860,3.021,861,4.462,862,4.462,863,4.462,864,2.557,865,2.557,866,4.462,867,2.054,868,2.054,869,2.557,870,2.557,871,1.631,872,2.557,873,1.966,874,2.557,875,2.153,951,2.775,1070,2.572,1071,2.572,1072,4.445,1077,3.333,1078,3.333,1079,3.333,1080,3.333,1081,2.398,1082,3.167,1083,2.398,1387,3.426,1388,3.426,1389,3.426]],["title/injectables/NewsService.html",[305,0.999,1340,2.9]],["body/injectables/NewsService.html",[3,0.074,4,0.074,5,0.066,10,0.143,12,2.099,14,1.113,15,0.332,16,0.01,17,0.176,20,0.074,21,0.005,22,0.005,23,0.3,28,1.117,30,3.436,44,0.405,46,4.583,53,2.655,55,1.176,88,0.809,101,3.948,115,1.422,117,1.532,120,1.79,121,2.074,123,2.816,125,2.051,133,1.777,136,0.621,149,1.79,150,1.742,152,2.507,153,2.667,162,2.567,166,2.799,180,1.928,223,2.703,233,3.045,242,2.847,258,1.273,260,1.273,263,1.205,264,1.273,278,1.388,282,3.035,305,1.118,306,1.273,309,1.981,310,3.699,317,1.981,322,1.981,323,1.897,325,2.742,327,2.906,330,2.916,338,4.149,542,3.101,560,2.077,578,3.672,605,1.388,608,1.114,642,1.82,763,2.742,764,2.697,807,2.593,828,3.884,860,3.884,867,3.884,868,1.981,871,1.574,1025,3.307,1070,2.505,1071,2.505,1091,2.467,1092,2.314,1093,3.084,1094,2.314,1095,2.314,1096,1.897,1097,1.981,1098,2.077,1099,2.314,1101,3.436,1102,2.186,1103,4.709,1104,2.186,1105,2.186,1106,3.872,1107,3.246,1108,2.314,1109,2.314,1110,3.436,1111,2.314,1112,2.314,1114,3.663,1115,2.467,1116,2.467,1117,2.314,1118,2.314,1122,4.098,1123,4.835,1125,3.663,1126,3.663,1134,2.314,1135,2.467,1136,2.314,1137,2.467,1138,2.467,1139,2.467,1324,5.164,1325,4.329,1326,5.164,1327,4.329,1328,5.164,1329,2.916,1331,4.329,1334,2.916,1336,4.329,1338,2.916,1340,3.246,1342,2.916,1347,2.916,1350,2.916,1352,2.916,1354,2.916,1356,2.916,1390,2.916,1391,3.305,1392,3.305,1393,3.305,1394,3.305,1395,3.305,1396,3.305,1397,3.305,1398,3.305,1399,5.854,1400,5.854,1401,5.854,1402,3.305,1403,4.908,1404,3.305,1405,4.908,1406,4.908,1407,3.305]],["title/classes/OpportunityApiResponse.html",[23,0.268,618,1.689]],["body/classes/OpportunityApiResponse.html",[3,0.097,4,0.097,5,0.087,10,0.187,11,0.804,15,0.385,16,0.009,17,0.188,20,0.196,21,0.006,22,0.006,23,0.539,25,0.633,34,1.764,36,0.804,39,1.536,41,1.528,42,1.565,44,0.332,48,1.578,50,1.536,52,1.194,59,1.724,61,0.569,106,1.085,139,1.621,174,1.621,216,2.753,256,1.971,266,2.358,267,1.536,270,1.517,278,2.494,318,2.468,319,1.714,355,3.175,428,1.764,447,1.285,456,2.113,457,2.005,587,1.667,588,3.134,589,1.994,591,3.937,593,1.751,594,1.194,595,2.406,596,1.817,597,2.406,598,1.817,599,2.522,600,1.817,601,2.058,602,1.817,603,1.994,604,1.994,605,1.817,606,3.872,607,1.565,608,1.458,609,2.06,610,1.667,611,1.667,612,1.667,613,1.667,614,1.667,615,1.667,616,1.667,617,1.667,618,2.292,619,1.667,620,1.667,621,1.764,622,1.667,1408,4.327,1409,4.327]],["title/classes/OpportunityArrayApiResponse.html",[23,0.268,619,1.689]],["body/classes/OpportunityArrayApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.722,61,0.568,106,1.083,139,1.619,170,1.316,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.75,594,1.193,595,2.404,596,1.815,597,2.404,598,1.815,599,2.521,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,1.665,613,1.665,614,1.665,615,1.665,616,1.665,617,1.665,618,1.665,619,2.29,620,1.665,621,1.762,622,1.665,678,2.48,1410,4.322,1411,4.322]],["title/controllers/OpportunityController.html",[228,1.689,1412,3.272]],["body/controllers/OpportunityController.html",[3,0.077,4,0.077,5,0.069,10,0.149,12,2.032,14,1.105,15,0.407,16,0.009,17,0.178,20,0.077,21,0.005,22,0.005,23,0.21,28,1.084,36,0.951,44,0.393,48,2.846,55,1.141,61,0.453,115,1.466,117,1.075,120,1.255,121,1.619,125,1.991,133,1.807,135,1.896,136,0.647,149,1.844,150,1.796,152,2.143,153,2.8,166,2.817,170,2.465,180,1.807,216,2.197,228,1.326,230,1.326,232,1.975,233,3.026,242,2.874,243,3.594,244,1.975,246,3.178,247,1.975,248,1.975,249,4.223,250,4.71,251,1.975,252,3.782,253,1.586,254,1.586,255,1.975,256,2.133,257,1.975,258,1.326,259,3.756,260,1.948,261,1.757,262,1.896,263,1.255,264,1.326,277,4.039,278,1.991,279,3.4,280,4.039,282,2.711,325,2.789,327,2.956,425,3.036,436,4.423,437,4.22,463,2.064,471,4.22,474,4.22,561,2.785,578,3.716,599,1.13,608,1.704,725,3.345,876,3.961,903,3.961,905,3.961,1017,2.41,1020,2.569,1021,4.197,1022,5.493,1025,3.756,1026,2.277,1029,2.569,1032,2.569,1033,2.492,1035,2.163,1036,2.277,1037,4.152,1038,1.896,1039,2.163,1049,3.767,1053,2.569,1054,4.197,1057,2.569,1060,2.569,1332,6.277,1412,3.775,1413,3.036,1414,5.995,1415,5.995,1416,5.288,1417,5.288,1418,5.288,1419,5.288,1420,3.442,1421,3.442,1422,3.036,1423,3.442,1424,3.036,1425,3.442,1426,3.036,1427,3.442,1428,3.036,1429,3.442,1430,3.345,1431,3.036,1432,3.036,1433,3.442,1434,3.442,1435,3.442,1436,3.442,1437,3.036,1438,3.442,1439,6.608,1440,3.442,1441,3.442,1442,3.036,1443,3.442,1444,3.036,1445,3.442,1446,3.036,1447,3.442]],["title/modules/OpportunityModule.html",[284,1.369,405,3.069]],["body/modules/OpportunityModule.html",[3,0.137,4,0.137,5,0.123,16,0.009,17,0.191,20,0.137,21,0.008,22,0.008,23,0.375,136,1.155,230,2.877,284,2.512,286,2.829,287,2.829,288,3.025,289,3.025,290,2.829,291,3.965,292,3.025,297,4.155,298,3.679,299,3.025,300,3.025,302,3.812,303,3.382,405,6.321,497,4.805,508,4.062,1068,4.299,1412,6.007,1430,5.771,1431,5.417,1448,5.417,1449,5.417,1450,6.141,1451,6.141,1452,6.141]],["title/classes/OpportunityResponseDto.html",[23,0.268,599,1.44]],["body/classes/OpportunityResponseDto.html",[3,0.056,4,0.056,5,0.05,7,2.92,10,0.108,11,0.535,12,1.777,14,1.268,15,0.405,16,0.009,17,0.152,20,0.125,21,0.004,22,0.004,23,0.396,25,0.366,28,1.248,36,1.121,37,3.445,40,2.849,41,2.215,42,2.319,44,0.464,48,3.005,55,0.907,56,2.065,59,1.651,60,2.742,61,0.329,63,3.124,64,2.936,65,0.761,66,1.444,67,0.99,68,0.99,71,0.742,72,2.195,79,2.693,80,2.342,87,2.607,88,0.612,89,2.195,91,1.865,170,0.761,270,0.518,279,3.048,536,1.986,593,1.175,594,0.69,599,1.3,607,1.471,748,3.345,749,2.722,750,2.722,751,3.656,752,3.113,753,4.352,754,3.572,755,1.886,756,4.627,757,3.656,758,4.226,761,3.345,763,1.949,764,2.989,767,3.146,768,3.146,771,2.281,772,2.856,775,3.354,778,2.856,783,2.856,784,2.497,789,1.116,799,2.756,807,2.547,808,2.497,813,1.714,814,2.578,815,1.276,816,1.276,817,2.195,818,1.276,820,2.021,821,2.51,822,2.195,876,1.498,877,1.75,878,4.551,879,2.956,898,1.865,899,1.865,903,1.498,904,1.865,905,1.498,906,1.865,907,3.671,972,2.011,974,2.011,976,2.205,978,2.205,980,3.493,982,2.205,984,2.956,986,4.338,992,2.205,995,2.205,997,2.205,1000,2.205,1005,2.205,1453,2.5,1454,2.5,1455,2.5,1456,2.5,1457,2.5,1458,2.5,1459,2.5,1460,2.5,1461,2.5,1462,2.5,1463,2.5,1464,2.5,1465,2.5,1466,2.5,1467,2.5,1468,2.5,1469,2.5,1470,2.5,1471,2.5,1472,2.5]],["title/classes/OpportunitySearchInput.html",[23,0.268,903,2.628]],["body/classes/OpportunitySearchInput.html",[3,0.065,4,0.065,5,0.059,7,2.939,10,0.127,11,0.604,12,1.605,14,1.268,15,0.394,16,0.009,17,0.161,20,0.136,21,0.005,22,0.005,23,0.423,25,0.427,28,0.689,36,0.822,40,2.806,41,2.25,42,2.305,44,0.34,48,2.959,53,1.506,55,0.88,56,1.877,59,1.676,60,2.797,61,0.384,63,3.172,64,2.972,65,0.889,66,2.392,67,1.157,68,1.157,71,1.328,72,2.424,79,1.771,80,2.586,87,2.672,88,0.715,89,1.995,106,1.121,178,1.823,270,0.605,279,2.905,536,1.928,559,2.282,593,1.068,594,0.806,599,0.959,607,1.428,748,3.188,749,2.424,750,2.424,751,3.256,752,2.772,753,4.148,754,3.351,755,1.391,756,4.564,757,3.256,758,4.148,761,3.188,763,2.599,764,3.188,767,3.088,768,3.088,771,2.215,772,2.772,775,3.256,778,2.772,783,2.772,784,2.424,789,1.303,799,2.676,807,2.28,808,2.424,813,1.935,814,2.804,815,1.491,816,1.491,817,1.995,818,1.491,820,2.282,821,2.772,822,2.424,876,1.751,877,2.044,878,4.054,879,3.337,898,2.18,899,2.18,903,2.68,904,2.18,905,1.751,906,2.18,907,2.18,951,2.462,1070,2.282,1071,2.282,1075,2.349,1077,2.957,1078,2.957,1079,2.957,1080,2.957,1081,2.044,1082,2.809,1083,2.044,1473,2.576,1474,2.92,1475,2.92]],["title/injectables/OpportunityService.html",[305,0.999,1430,2.9]],["body/injectables/OpportunityService.html",[3,0.069,4,0.069,5,0.062,10,0.133,12,2.076,14,1.093,15,0.323,16,0.01,17,0.172,20,0.069,21,0.005,22,0.005,23,0.284,28,1.088,31,3.259,44,0.395,53,2.765,55,1.145,88,0.754,115,1.349,117,1.453,120,1.698,121,2.002,123,2.671,125,1.997,133,1.724,136,0.579,149,1.698,150,1.653,152,2.47,153,2.724,162,2.478,166,2.767,180,1.883,223,2.564,233,3.012,242,2.797,258,1.187,260,1.187,263,1.123,264,1.187,278,1.899,282,2.978,305,1.061,306,1.187,309,1.847,310,3.613,317,1.847,322,1.847,323,1.768,325,2.661,327,2.82,332,2.717,338,4.026,542,2.973,560,1.936,578,3.596,599,1.011,605,1.293,608,1.891,642,3.699,725,3.712,748,3.738,761,3.48,763,2.661,764,2.586,807,2.517,871,1.467,876,3.75,903,3.75,905,3.75,1025,3.193,1033,2.294,1070,2.376,1071,2.376,1091,2.299,1092,2.156,1093,2.925,1094,2.156,1095,2.156,1096,1.768,1097,1.847,1098,1.936,1099,2.156,1101,3.259,1102,2.037,1103,4.514,1104,2.037,1105,2.037,1106,3.712,1107,3.079,1108,2.156,1109,2.156,1110,3.259,1111,2.156,1112,2.156,1114,3.475,1115,2.299,1116,2.299,1117,2.156,1118,2.156,1122,3.929,1123,4.668,1125,3.475,1126,3.475,1127,4.514,1133,4.514,1134,2.156,1135,2.299,1136,2.156,1137,2.299,1138,2.299,1139,2.299,1332,6.337,1416,4.95,1417,4.95,1418,4.95,1419,4.95,1422,2.717,1424,2.717,1426,2.717,1428,2.717,1430,3.079,1432,2.717,1437,2.717,1442,2.717,1444,2.717,1446,2.717,1476,2.717,1477,5.612,1478,3.08,1479,3.08,1480,3.08,1481,3.08,1482,3.08,1483,3.08,1484,3.08,1485,3.08,1486,3.08,1487,5.612,1488,5.612,1489,5.612,1490,3.08,1491,3.08,1492,4.656,1493,3.08,1494,4.656,1495,4.656,1496,3.08]],["title/classes/OrganizationApiResponse.html",[23,0.268,616,1.689]],["body/classes/OrganizationApiResponse.html",[3,0.097,4,0.097,5,0.087,10,0.187,11,0.804,15,0.385,16,0.009,17,0.188,20,0.196,21,0.006,22,0.006,23,0.539,25,0.633,34,1.764,36,0.804,39,1.536,41,1.528,42,1.565,44,0.332,48,1.578,50,1.536,52,1.194,59,1.724,61,0.569,106,1.085,139,1.621,174,1.621,216,2.753,256,1.971,266,2.358,267,1.536,270,1.517,278,2.494,318,2.468,319,1.714,355,3.175,428,1.764,447,1.285,456,2.113,457,2.005,587,1.667,588,3.134,589,1.994,591,3.937,593,1.751,594,1.194,595,2.406,596,1.817,597,2.522,598,1.817,599,2.406,600,1.817,601,2.058,602,1.817,603,1.994,604,1.994,605,1.817,606,3.872,607,1.565,608,1.458,609,2.06,610,1.667,611,1.667,612,1.667,613,1.667,614,1.667,615,1.667,616,2.292,617,1.667,618,1.667,619,1.667,620,1.667,621,1.764,622,1.667,1497,4.327,1498,4.327]],["title/classes/OrganizationArrayApiResponse.html",[23,0.268,617,1.689]],["body/classes/OrganizationArrayApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.722,61,0.568,106,1.083,139,1.619,170,1.316,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.75,594,1.193,595,2.404,596,1.815,597,2.521,598,1.815,599,2.404,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,1.665,613,1.665,614,1.665,615,1.665,616,1.665,617,2.29,618,1.665,619,1.665,620,1.665,621,1.762,622,1.665,678,2.48,1499,4.322,1500,4.322]],["title/controllers/OrganizationController.html",[228,1.689,1501,3.272]],["body/controllers/OrganizationController.html",[3,0.076,4,0.076,5,0.068,10,0.147,12,2.027,14,1.101,15,0.407,16,0.009,17,0.18,20,0.076,21,0.005,22,0.005,23,0.207,28,1.078,36,0.946,44,0.391,50,2.76,55,1.135,61,0.447,66,1.238,67,1.345,68,1.345,115,1.451,117,1.06,120,1.238,121,1.603,125,1.979,133,1.797,135,1.87,136,0.638,149,1.826,150,1.778,152,2.131,153,2.918,166,2.811,170,2.457,180,1.797,216,2.185,228,1.308,230,1.308,232,1.948,233,3.019,242,2.865,243,3.565,244,1.948,246,3.146,247,1.948,248,1.948,249,4.202,250,4.696,251,1.948,252,3.771,253,1.564,254,1.564,255,1.948,256,2.122,257,1.948,258,1.308,259,3.738,260,1.929,261,1.733,262,1.87,263,1.238,264,1.308,277,4.016,278,1.979,279,3.389,280,4.016,282,2.696,325,2.773,327,2.939,436,4.398,437,4.196,463,2.036,471,4.196,474,4.196,561,2.757,578,3.701,597,1.115,608,1.687,908,3.935,932,3.935,937,3.935,1017,2.377,1020,2.534,1021,4.163,1022,5.466,1025,3.738,1026,2.246,1029,2.534,1032,2.534,1033,2.467,1035,2.134,1036,2.246,1037,4.125,1038,1.87,1039,2.134,1049,3.737,1053,2.534,1054,4.163,1057,2.534,1060,2.534,1501,3.737,1502,2.995,1503,7.379,1504,5.947,1505,5.246,1506,5.246,1507,5.947,1508,5.246,1509,3.396,1510,3.396,1511,2.995,1512,3.396,1513,2.995,1514,3.396,1515,3.396,1516,3.396,1517,2.995,1518,3.396,1519,3.934,1520,2.995,1521,2.995,1522,3.396,1523,3.396,1524,3.396,1525,3.396,1526,6.564,1527,3.396,1528,6.564,1529,3.396,1530,3.396,1531,3.396,1532,3.396,1533,3.396]],["title/modules/OrganizationModule.html",[284,1.369,406,3.069]],["body/modules/OrganizationModule.html",[3,0.134,4,0.134,5,0.121,16,0.009,17,0.19,20,0.134,21,0.007,22,0.007,23,0.368,136,1.133,230,2.843,284,2.491,286,2.776,287,2.776,288,2.968,289,2.968,290,2.776,291,3.932,292,3.932,297,4.136,298,3.636,299,2.968,300,2.968,302,3.768,303,3.317,406,6.334,497,4.783,508,3.985,1068,4.217,1501,5.956,1519,6.01,1520,5.314,1534,5.314,1535,5.314,1536,5.314,1537,6.024,1538,6.024,1539,6.024]],["title/classes/OrganizationResponseDto.html",[23,0.268,597,1.44]],["body/classes/OrganizationResponseDto.html",[3,0.061,4,0.061,5,0.055,7,2.901,10,0.118,11,0.571,12,1.955,14,1.252,15,0.39,16,0.009,17,0.157,20,0.131,21,0.004,22,0.004,23,0.41,25,0.397,28,1.245,36,1.092,37,3.463,40,3.08,41,2.238,42,2.323,44,0.451,50,2.869,53,1.424,55,1.235,56,2.459,59,1.644,60,2.637,61,0.357,63,3.074,64,2.764,65,0.827,66,1.541,67,1.076,68,1.076,71,0.807,72,2.316,75,3.873,79,2.056,80,3.454,82,2.027,87,2.522,88,0.665,89,2.316,91,2.027,106,1.468,170,0.827,270,0.562,536,2.645,593,1.24,594,0.75,597,1.388,607,1.54,628,3.803,629,3.803,664,2.328,748,3.433,749,2.832,750,2.832,755,3.199,761,3.433,763,2.056,767,3.237,768,3.676,771,2.957,772,3.702,783,2.989,784,2.613,789,2.832,790,2.534,807,2.628,808,2.613,813,2.534,814,2.391,815,2.649,816,1.386,817,2.316,818,1.386,820,2.989,821,2.649,822,2.316,908,1.628,909,1.901,910,4.735,911,4.735,919,5.413,925,5.413,926,4.37,932,1.628,933,3.873,934,3.873,935,3.432,936,3.873,937,1.628,938,1.796,939,3.632,984,4.735,1164,2.395,1540,2.716,1541,2.716,1542,2.716,1543,2.716,1544,2.716,1545,2.716,1546,2.716,1547,2.716,1548,2.716,1549,2.716,1550,2.716,1551,2.716,1552,2.716,1553,2.716,1554,2.716,1555,2.716,1556,2.716,1557,2.716,1558,2.716,1559,2.716]],["title/classes/OrganizationSearchInput.html",[23,0.268,932,2.628]],["body/classes/OrganizationSearchInput.html",[3,0.069,4,0.069,5,0.062,7,2.918,10,0.134,11,0.63,12,1.85,14,1.252,15,0.372,16,0.009,17,0.164,20,0.14,21,0.005,22,0.005,23,0.432,25,0.452,28,0.719,36,0.846,40,3.058,41,2.251,42,2.305,44,0.35,50,2.799,53,2.11,55,1.254,56,2.36,59,1.667,60,2.698,61,0.406,63,3.122,64,2.819,65,0.94,66,2.452,67,1.224,68,1.224,71,1.385,72,2.509,75,3.718,79,1.848,80,3.599,87,2.589,88,0.756,89,2.082,106,1.685,178,1.902,270,0.64,536,2.51,559,2.381,593,1.115,594,0.852,597,1.014,607,1.478,628,3.37,629,3.37,664,2.569,748,3.258,749,2.509,750,2.509,755,3.202,761,3.258,763,2.664,767,3.156,768,3.623,771,2.883,772,3.609,783,2.869,784,2.509,789,3.001,790,2.797,807,2.347,808,2.509,813,2.71,814,2.59,815,2.869,816,1.577,817,2.082,818,1.577,820,2.869,821,2.869,822,2.509,908,1.852,909,2.162,910,4.195,911,4.195,919,5.277,925,5.277,926,4.195,932,2.797,933,4.195,934,4.195,935,3.718,936,4.195,937,1.852,938,2.043,939,2.162,951,2.569,1070,2.381,1071,2.381,1075,2.484,1077,3.086,1078,3.086,1079,3.086,1080,3.086,1081,2.162,1082,2.931,1083,2.162,1473,2.724,1560,3.089,1561,3.089]],["title/injectables/OrganizationService.html",[305,0.999,1519,2.9]],["body/injectables/OrganizationService.html",[3,0.067,4,0.067,5,0.061,10,0.131,12,2.069,14,1.088,15,0.321,16,0.01,17,0.171,20,0.067,21,0.005,22,0.005,23,0.28,28,1.079,32,3.208,44,0.391,50,2.782,53,2.781,55,1.246,88,0.738,115,1.328,117,1.43,120,1.671,121,1.981,123,2.629,125,1.981,133,1.709,136,0.567,149,1.671,150,1.627,152,2.458,153,2.71,162,2.452,166,2.757,180,1.87,223,2.523,233,3.001,242,2.782,258,1.162,260,1.162,263,1.1,264,1.162,278,1.882,282,2.96,305,1.044,306,1.162,309,1.808,310,3.587,317,1.808,322,1.808,323,1.731,325,2.637,327,2.794,338,3.989,542,2.935,560,1.895,578,3.573,597,0.99,605,1.267,608,1.016,642,4.01,748,3.721,755,3.336,761,3.457,763,2.637,807,2.493,871,1.436,908,3.71,932,3.71,937,3.71,939,3.879,1025,3.159,1033,2.257,1070,2.339,1071,2.339,1091,2.251,1092,2.112,1093,2.879,1094,2.112,1095,2.112,1096,1.731,1097,1.808,1098,1.895,1099,2.112,1101,3.208,1102,1.995,1104,1.995,1105,1.995,1106,3.665,1107,3.031,1108,2.112,1109,2.112,1110,3.208,1111,2.112,1112,2.112,1114,3.42,1115,2.251,1116,2.251,1117,2.112,1118,2.112,1122,3.879,1123,4.618,1125,3.42,1126,3.42,1127,4.457,1133,4.457,1134,2.112,1135,2.251,1136,2.112,1137,3.42,1138,2.251,1139,2.251,1503,4.887,1505,4.887,1506,4.887,1508,4.887,1511,2.661,1513,2.661,1517,2.661,1519,3.031,1521,2.661,1562,2.661,1563,5.541,1564,5.541,1565,3.017,1566,3.017,1567,3.017,1568,3.017,1569,3.017,1570,3.017,1571,3.017,1572,3.017,1573,3.017,1574,3.017,1575,5.541,1576,3.017,1577,4.582,1578,3.017,1579,5.541,1580,3.017,1581,5.541,1582,5.541,1583,4.582,1584,3.017,1585,4.582,1586,3.017,1587,3.017,1588,3.017,1589,4.582,1590,3.017,1591,3.017]],["title/classes/PaginationParamsDto.html",[23,0.268,66,1.599]],["body/classes/PaginationParamsDto.html",[3,0.127,4,0.127,5,0.115,7,2.283,10,0.247,11,0.964,15,0.392,16,0.009,17,0.174,20,0.127,21,0.007,22,0.007,23,0.475,25,0.834,28,1.257,36,0.964,44,0.398,53,2.748,60,2.492,61,0.75,63,2.764,65,1.735,66,2.601,79,2.826,88,1.395,106,2.045,178,3.326,559,3.64,951,4.492,1070,3.973,1071,3.973,1077,5.396,1078,4.717,1079,5.396,1082,5.126,1592,6.866,1593,5.027,1594,5.699,1595,5.699,1596,6.866,1597,7.785,1598,5.699,1599,7.132,1600,7.132,1601,5.323]],["title/injectables/PrismaService.html",[305,0.999,310,2.16]],["body/injectables/PrismaService.html",[3,0.147,4,0.147,5,0.132,10,0.285,16,0.009,17,0.174,20,0.147,21,0.008,22,0.008,23,0.401,44,0.367,71,2.31,113,4.903,115,2.254,133,1.687,136,1.235,233,2.941,282,2.53,305,1.772,306,2.53,310,3.831,1097,3.938,1602,6.859,1603,5.794,1604,7.307,1605,8.862,1606,6.569,1607,6.569]],["title/classes/RefreshTokenInput.html",[23,0.268,442,3.272]],["body/classes/RefreshTokenInput.html",[3,0.148,4,0.148,5,0.133,10,0.287,11,1.055,14,1.084,15,0.303,16,0.009,17,0.174,20,0.148,21,0.008,22,0.008,23,0.477,25,0.968,27,3.798,36,0.894,44,0.37,59,1.469,61,0.87,65,2.015,430,5.497,442,5.83,445,5.83,447,2.32,623,4.683,961,5.468,1608,6.619,1609,6.619]],["title/classes/RegisterApiResponse.html",[23,0.268,620,1.689]],["body/classes/RegisterApiResponse.html",[3,0.097,4,0.097,5,0.087,10,0.187,11,0.804,15,0.385,16,0.009,17,0.188,20,0.196,21,0.006,22,0.006,23,0.539,25,0.633,34,1.764,36,0.804,39,1.536,41,1.528,42,1.565,44,0.332,48,1.578,50,1.536,52,1.194,59,1.724,61,0.569,106,1.085,139,1.621,174,1.621,216,2.753,256,1.971,266,2.358,267,1.536,270,1.517,278,2.494,318,2.468,319,1.714,355,3.175,428,1.764,447,1.285,456,2.415,457,2.005,587,1.667,588,3.134,589,1.994,591,3.937,593,1.751,594,1.194,595,2.406,596,1.817,597,2.406,598,1.817,599,2.406,600,1.817,601,2.058,602,1.817,603,1.994,604,1.994,605,1.817,606,3.872,607,1.565,608,1.458,609,2.06,610,1.667,611,1.667,612,1.667,613,1.667,614,1.667,615,1.667,616,1.667,617,1.667,618,1.667,619,1.667,620,2.292,621,1.764,622,1.667,1610,4.327,1611,4.327]],["title/classes/RegisterInput.html",[23,0.268,265,2.9]],["body/classes/RegisterInput.html",[3,0.125,4,0.125,5,0.112,10,0.242,11,0.951,13,4.622,14,1.215,15,0.39,16,0.009,17,0.172,18,4.084,20,0.125,21,0.007,22,0.007,23,0.43,25,0.816,27,3.202,35,2.567,36,1.094,44,0.476,52,1.54,55,1.25,59,1.569,60,1.786,61,0.734,64,2.658,65,1.699,123,3.202,178,2.275,238,2.956,265,4.655,267,3.072,536,2.737,539,4.165,559,2.848,567,5.253,623,5.187,814,3.243,942,6.202,943,4.845,944,5.754,945,4.922,951,3.073,955,4.922,961,5.667,962,4.489,963,4.165,964,4.489,966,5.662,1321,4.922,1612,5.581,1613,5.581,1614,5.581,1615,5.581,1616,4.922,1617,5.581,1618,5.581,1619,5.581,1620,5.581,1621,5.581]],["title/classes/RegisterOutput.html",[23,0.268,456,1.557]],["body/classes/RegisterOutput.html",[3,0.12,4,0.12,5,0.108,10,0.234,11,0.931,12,1.858,13,4.551,14,1.228,15,0.398,16,0.009,17,0.169,18,4.021,20,0.12,21,0.007,22,0.007,23,0.421,25,0.79,35,2.513,36,1.175,40,1.867,44,0.486,55,1.231,59,1.651,61,0.71,87,2.741,88,1.321,99,3.237,104,6.41,106,1.728,170,1.644,267,3.118,456,2.447,536,2.696,539,4.03,567,4.03,623,5.264,871,3.615,873,4.356,942,6.107,944,5.666,1622,5.399,1623,4.762,1624,5.399,1625,5.399,1626,5.399,1627,5.399,1628,5.399,1629,4.762,1630,5.399]],["title/classes/RequestContext.html",[23,0.268,166,1.44]],["body/classes/RequestContext.html",[3,0.133,4,0.133,5,0.12,10,0.259,11,0.993,14,1.203,15,0.38,16,0.009,17,0.164,20,0.133,21,0.007,22,0.007,23,0.365,25,0.875,44,0.464,52,2.196,164,5.262,166,2.414,170,2.526,175,4.465,263,3.106,266,2.37,270,1.239,355,3.14,366,4.406,447,1.777,529,4.762,771,3.244,1631,6.357,1632,5.277,1633,7.956,1634,5.983,1635,5.983,1636,5.983,1637,5.983,1638,5.983,1639,5.983,1640,5.983,1641,5.983,1642,5.983]],["title/classes/ResponseMetadata.html",[23,0.268,591,1.957]],["body/classes/ResponseMetadata.html",[3,0.095,4,0.095,5,0.086,10,0.185,11,0.797,15,0.384,16,0.009,17,0.187,20,0.195,21,0.006,22,0.006,23,0.538,25,0.625,28,1.123,34,1.743,36,0.797,39,1.517,41,1.871,42,1.917,44,0.33,48,1.558,50,1.517,52,1.18,59,1.718,61,0.562,106,1.479,139,1.601,174,2.211,216,2.717,256,1.958,266,2.338,267,1.517,270,1.509,278,2.461,318,2.455,319,1.693,355,3.173,428,1.743,447,1.269,456,2.095,457,1.988,587,1.646,588,3.114,589,1.969,591,3.93,593,1.742,594,1.18,595,2.393,596,1.795,597,2.393,598,1.795,599,2.393,600,1.795,601,2.04,602,1.795,603,1.969,604,1.969,605,1.795,606,3.859,607,1.917,608,2.277,609,3.218,610,1.646,611,1.646,612,1.646,613,1.646,614,1.646,615,1.646,616,1.646,617,1.646,618,1.646,619,1.646,620,1.646,621,1.743,622,1.646,678,3.386,1643,4.274,1644,4.274]],["title/guards/RolesGuard.html",[1645,3.527,1646,3.272]],["body/guards/RolesGuard.html",[3,0.129,4,0.129,5,0.117,10,0.251,13,4.324,15,0.33,16,0.009,17,0.183,18,3.074,20,0.129,21,0.007,22,0.007,23,0.354,28,1.111,35,2.63,44,0.403,52,1.991,53,2.644,55,1.169,113,4.331,115,2.09,117,1.812,124,3.839,125,2.04,133,1.49,136,1.091,152,2.196,162,2.299,180,2.015,305,1.643,314,4.324,423,4.331,446,4.331,539,4.331,542,3.074,1219,6.604,1221,5.802,1222,5.747,1306,5.119,1646,5.384,1647,5.804,1648,5.119,1649,5.804,1650,8.607,1651,5.804,1652,5.804,1653,4.668,1654,4.668,1655,5.804,1656,7.849,1657,5.804,1658,5.804,1659,5.804,1660,5.804,1661,5.804,1662,5.804,1663,5.804]],["title/modules/SharedModule.html",[284,1.369,297,2.088]],["body/modules/SharedModule.html",[3,0.128,4,0.128,5,0.115,16,0.009,17,0.196,20,0.128,21,0.007,22,0.007,23,0.35,110,5.339,136,1.077,137,3.286,284,2.435,286,2.639,287,2.639,288,2.822,289,2.822,290,2.639,291,3.844,292,3.844,297,4.254,298,3.524,299,2.822,300,2.822,302,3.652,310,4.448,323,3.286,391,6.32,1096,3.286,1294,5.339,1653,4.607,1664,5.052,1665,5.052,1666,5.052,1667,5.727,1668,5.727,1669,7.154,1670,7.154,1671,7.154,1672,4.607,1673,5.727,1674,5.727,1675,5.727,1676,5.727,1677,5.727,1678,5.727,1679,5.727,1680,7.154,1681,7.154]],["title/classes/TagApiResponse.html",[23,0.268,612,1.689]],["body/classes/TagApiResponse.html",[3,0.097,4,0.097,5,0.087,10,0.187,11,0.804,15,0.385,16,0.009,17,0.188,20,0.196,21,0.006,22,0.006,23,0.539,25,0.633,34,1.764,36,0.804,39,1.536,41,1.528,42,1.565,44,0.332,48,1.578,50,1.536,52,1.194,59,1.724,61,0.569,106,1.085,139,1.621,174,1.621,216,2.753,256,1.971,266,2.358,267,1.536,270,1.517,278,2.494,318,2.468,319,1.714,355,3.175,428,1.764,447,1.285,456,2.113,457,2.005,587,1.667,588,3.134,589,1.994,591,3.937,593,1.836,594,1.194,595,2.406,596,1.817,597,2.406,598,1.817,599,2.406,600,1.817,601,2.058,602,1.817,603,1.994,604,1.994,605,1.817,606,3.872,607,1.565,608,1.458,609,2.06,610,1.667,611,1.667,612,2.292,613,1.667,614,1.667,615,1.667,616,1.667,617,1.667,618,1.667,619,1.667,620,1.667,621,1.764,622,1.667,1682,4.327,1683,4.327]],["title/classes/TagArrayApiResponse.html",[23,0.268,613,1.689]],["body/classes/TagArrayApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.722,61,0.568,106,1.083,139,1.619,170,1.316,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.835,594,1.193,595,2.404,596,1.815,597,2.404,598,1.815,599,2.404,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,1.665,613,2.29,614,1.665,615,1.665,616,1.665,617,1.665,618,1.665,619,1.665,620,1.665,621,1.762,622,1.665,678,2.48,1684,4.322,1685,4.322]],["title/controllers/TagController.html",[228,1.689,1686,3.272]],["body/controllers/TagController.html",[3,0.092,4,0.092,5,0.083,10,0.179,15,0.405,16,0.009,17,0.188,20,0.092,21,0.006,22,0.006,23,0.252,24,4.751,28,1.023,34,1.685,36,0.897,44,0.371,55,1.076,61,0.543,69,4.751,70,4.751,115,1.67,117,1.29,120,1.507,121,1.845,125,1.877,133,1.704,135,2.275,136,0.777,149,2.102,150,2.046,152,2.021,153,2.706,162,2.284,166,2.767,170,2.382,180,1.704,216,2.072,228,1.592,230,1.592,232,2.371,233,2.954,242,2.778,243,3.455,244,2.371,246,3.622,247,2.371,248,2.371,249,4.121,250,4.607,251,2.371,252,3.7,253,1.904,254,1.904,255,2.371,256,1.924,257,2.371,258,1.592,259,3.666,260,2.22,261,2.109,262,2.275,263,1.507,264,1.592,268,2.596,270,0.856,277,3.809,278,1.877,279,3.286,280,3.809,282,2.557,314,2.477,325,2.63,327,2.787,436,3.622,437,3.979,463,2.477,471,3.979,474,3.979,561,3.174,578,3.42,593,0.987,608,2.42,807,3.118,1017,2.892,1025,3.994,1026,2.733,1035,2.596,1036,2.733,1037,3.622,1038,2.275,1039,2.596,1049,2.596,1686,4.302,1687,3.645,1688,5.855,1689,5.855,1690,6.638,1691,3.645,1692,4.132,1693,4.132,1694,3.645,1695,4.132,1696,4.132,1697,6.336,1698,4.132,1699,4.132,1700,4.391,1701,3.645,1702,5.084,1703,4.132,1704,4.132,1705,4.132,1706,5.764,1707,3.645,1708,4.132,1709,4.132,1710,4.132,1711,4.132,1712,4.132,1713,4.132,1714,3.645,1715,5.764,1716,4.132]],["title/classes/TagOutputDto.html",[23,0.268,593,1.048]],["body/classes/TagOutputDto.html",[3,0.117,4,0.117,5,0.105,10,0.227,11,0.914,12,1.833,14,1.098,15,0.403,16,0.009,17,0.151,20,0.117,21,0.007,22,0.007,23,0.457,25,0.767,26,6.208,28,1.042,29,5.242,30,5.242,31,5.242,32,5.242,33,5.589,34,3.054,35,3.212,36,1.19,44,0.492,62,5.027,63,2.402,64,2.459,65,1.597,87,2.768,88,1.284,99,3.144,105,4.219,107,3.914,108,3.914,109,3.914,593,1.617,799,4.131,857,5.539,871,3.566,873,4.297,875,4.706,1717,6.765,1718,4.626,1719,5.245,1720,5.245,1721,6.765,1722,8.19,1723,4.626,1724,4.626,1725,4.219,1726,4.626]],["title/classes/TagSearchInput.html",[23,0.268,70,2.9]],["body/classes/TagSearchInput.html",[3,0.1,4,0.1,5,0.09,7,2.568,10,0.194,11,0.824,14,0.962,15,0.396,16,0.009,17,0.155,20,0.155,21,0.006,22,0.006,23,0.423,24,2.965,25,0.656,26,5.745,27,2.572,28,1.342,29,5.205,30,5.205,31,5.205,32,5.205,33,5.549,34,3.492,35,3.232,36,1.129,38,6.86,39,2.165,40,2.774,41,2.174,42,2.11,44,0.467,46,3.357,48,2.223,50,2.165,52,1.683,53,2.505,55,0.727,56,1.882,59,1.543,60,2.627,61,0.59,62,4.809,63,3.093,64,2.743,65,1.365,66,2.836,67,1.776,68,1.776,69,2.965,70,4.033,71,1.811,79,2.416,106,1.528,178,2.486,559,3.112,951,3.357,954,3.954,1070,3.112,1071,3.112,1077,4.033,1078,4.033,1079,4.033,1080,4.033,1081,3.138,1082,3.831,1083,3.138,1727,8.023,1728,4.483,1729,4.483,1730,4.483,1731,4.483,1732,3.954]],["title/modules/TagsModule.html",[284,1.369,407,3.069]],["body/modules/TagsModule.html",[3,0.138,4,0.138,5,0.124,16,0.009,17,0.187,20,0.138,21,0.008,22,0.008,23,0.377,136,1.161,230,2.886,284,2.518,286,2.845,287,2.845,288,3.041,289,3.041,290,2.845,291,3.974,292,3.974,297,4.16,298,3.691,299,3.041,300,3.041,302,3.824,303,3.4,407,6.29,1686,6.02,1700,6.029,1701,5.446,1733,5.446,1734,5.446,1735,6.174,1736,5.446,1737,6.174,1738,6.174]],["title/injectables/TagsService.html",[305,0.999,1700,2.9]],["body/injectables/TagsService.html",[3,0.079,4,0.079,5,0.071,10,0.153,15,0.367,16,0.01,17,0.182,20,0.079,21,0.005,22,0.005,23,0.314,24,4.419,28,1.029,29,4.253,30,4.253,31,2.466,32,4.253,33,4.534,34,2.897,39,1.251,44,0.373,46,1.94,48,1.284,50,1.251,52,0.972,53,2.811,55,1.083,69,4.699,70,4.419,88,0.862,115,1.49,117,1.605,120,1.876,121,2.138,125,1.889,133,1.56,136,0.662,149,1.876,150,1.826,152,2.478,153,2.457,166,2.673,180,2.181,223,2.832,233,3.037,242,2.634,258,1.357,260,1.357,263,1.284,264,1.357,268,2.213,270,0.729,278,0.996,282,2.951,305,1.172,306,1.357,309,2.112,310,3.774,317,2.112,322,2.112,323,2.021,325,2.407,327,2.551,338,3.642,578,3.181,593,0.842,608,1.733,807,2.871,871,2.449,1025,3.41,1070,1.798,1071,1.798,1092,2.466,1093,3.817,1094,2.466,1095,2.466,1096,2.021,1097,2.112,1098,2.213,1099,2.466,1101,3.6,1102,3.402,1104,3.402,1105,3.402,1106,5.068,1107,3.402,1108,2.466,1109,2.466,1110,3.6,1111,2.466,1112,2.466,1117,3.6,1118,3.6,1688,4.537,1689,5.359,1691,4.537,1694,3.107,1697,6.544,1700,3.402,1702,4.537,1707,3.107,1714,3.107,1739,3.107,1740,6.075,1741,3.522,1742,3.522,1743,3.522,1744,3.522,1745,3.522,1746,3.522,1747,7.419,1748,5.143,1749,3.522,1750,6.68,1751,5.143,1752,5.143,1753,3.522,1754,3.522,1755,3.522]],["title/interfaces/TypeMapping.html",[0,2.628,701,2.755]],["body/interfaces/TypeMapping.html",[0,2.507,2,3.364,3,0.093,4,0.093,5,0.084,14,1.224,15,0.413,16,0.01,17,0.19,20,0.161,21,0.006,22,0.006,23,0.463,25,0.612,35,1.525,44,0.234,55,0.678,59,1.605,60,1.861,61,0.55,71,1.242,106,1.675,128,3.652,133,1.074,136,0.786,139,2.503,152,1.77,159,2.927,161,2.766,164,2.766,169,2.766,171,2.927,172,2.628,173,2.766,174,1.567,178,1.705,180,1.492,184,2.766,192,2.628,216,1.305,252,1.927,253,2.678,254,1.927,256,2.092,266,2.303,267,1.485,270,1.495,278,1.644,318,2.251,319,1.657,355,2.977,447,1.242,456,2.064,457,1.958,587,2.239,593,1.596,594,1.154,595,2.194,596,1.756,597,2.194,598,1.756,599,2.194,600,1.756,601,2.01,602,1.756,607,1.529,610,2.239,611,2.239,612,2.239,613,2.239,614,2.239,615,2.239,616,2.239,617,2.239,618,2.239,619,2.239,620,2.239,622,2.239,643,2.766,675,4.419,676,3.484,677,2.507,688,3.121,689,3.121,690,3.121,691,3.121,692,3.121,693,2.927,694,2.927,695,2.766,696,4.768,697,4.338,698,3.121,699,3.121,700,3.121,701,4.198,702,3.652,703,3.121,704,3.121,705,2.766,706,2.927,707,4.069,708,2.927,709,2.927,710,2.927,711,2.927,712,2.766,713,2.927,714,5.388,715,4.338,716,3.121,717,2.927,718,3.121,719,3.121,720,4.338,721,4.338,722,3.121,723,4.069,724,4.338,725,2.766,726,3.121,727,3.121,728,3.121,729,3.121,730,2.927,1756,4.182,1757,4.182]],["title/classes/UpdateEventDto.html",[23,0.268,823,2.628]],["body/classes/UpdateEventDto.html",[3,0.05,4,0.05,5,0.045,7,2.917,10,0.097,11,0.488,12,1.509,14,1.266,15,0.405,16,0.009,17,0.145,20,0.117,21,0.004,22,0.004,23,0.377,25,0.326,28,1.362,35,1.662,36,1.114,37,3.204,39,2.886,40,2.831,41,2.242,42,2.336,44,0.461,53,1.218,55,0.85,56,2.201,59,1.638,60,2.767,61,0.293,62,2.167,63,3.138,64,2.929,65,0.679,66,1.318,67,0.884,68,0.884,71,0.663,72,2.339,79,2.91,80,2.742,87,2.604,88,0.546,89,1.613,170,0.679,270,0.462,279,3.084,536,1.861,593,0.864,594,0.616,595,0.733,607,1.378,664,1.991,746,1.337,747,1.562,748,3.22,749,2.571,750,2.571,751,3.453,752,2.94,753,4.189,754,3.172,755,3.22,756,4.488,757,3.453,758,4.054,759,4.299,760,4.299,761,3.22,762,4.299,763,2.282,764,2.841,765,1.476,767,3.018,768,3.018,769,1.28,771,2.137,772,2.675,775,3.142,776,1.665,778,2.675,781,4.299,783,2.675,784,2.339,789,2.752,790,2.732,791,1.665,792,1.665,799,3.332,801,3.142,803,2.167,807,2.158,808,2.339,813,2.268,814,2.415,815,2.326,816,1.139,817,1.613,818,1.139,819,1.337,820,2.326,821,2.326,822,2.034,823,2.167,824,3.912,825,1.665,826,1.562,827,1.665,883,1.665,1758,2.231,1759,2.231,1760,2.231,1761,2.231,1762,1.968,1763,2.231,1764,2.231,1765,1.794,1766,2.231,1767,4.02,1768,2.231,1769,2.231,1770,2.231,1771,2.231,1772,1.968,1773,2.231,1774,2.231,1775,1.968,1776,2.231,1777,2.231,1778,2.231,1779,2.231,1780,2.231,1781,2.231,1782,2.231,1783,1.968,1784,2.231,1785,2.231]],["title/classes/UpdateNewsDto.html",[23,0.268,867,2.628]],["body/classes/UpdateNewsDto.html",[3,0.071,4,0.177,5,0.064,7,2.879,10,0.137,11,0.641,12,1.746,14,1.256,15,0.385,16,0.009,17,0.152,20,0.141,21,0.005,22,0.005,23,0.436,25,0.463,28,1.334,36,1.072,37,3.184,40,3.066,41,1.954,42,2.086,44,0.443,46,4.788,56,2.661,59,1.675,60,2.492,61,0.416,63,3.024,64,2.877,65,0.963,66,1.731,67,1.253,68,1.253,71,0.939,79,2.511,87,2.622,88,0.774,162,2.511,170,0.963,223,4.287,238,3.02,270,0.655,593,1.135,594,0.873,749,3.031,750,3.031,752,3.467,763,2.691,764,3.654,767,3.397,768,3.397,769,1.814,771,2.584,778,3.235,784,2.828,799,4.104,801,3.799,803,1.895,807,2.545,808,2.828,813,2.054,822,2.544,828,1.895,829,2.213,830,5.069,831,5.069,832,5.069,834,5.681,843,5.681,844,3.543,845,2.36,848,4.255,849,2.36,857,2.213,858,4.255,859,3.543,860,1.895,861,4.255,862,4.255,863,4.255,864,2.36,865,2.36,866,4.255,867,2.846,868,1.895,869,2.36,870,2.36,871,1.505,872,2.36,873,1.814,874,2.36,875,1.987,883,2.36,1786,3.162,1787,3.162,1788,3.162,1789,3.162,1790,3.162,1791,3.162,1792,3.162,1793,3.162,1794,3.162,1795,3.162,1796,3.162,1797,3.162,1798,3.162,1799,3.162,1800,3.162,1801,3.162,1802,3.162]],["title/classes/UpdateOpportunityDto.html",[23,0.268,905,2.628]],["body/classes/UpdateOpportunityDto.html",[3,0.057,4,0.057,5,0.051,7,2.923,10,0.11,11,0.543,12,1.601,14,1.27,15,0.404,16,0.009,17,0.153,20,0.126,21,0.004,22,0.004,23,0.4,25,0.373,28,1.253,36,1.109,37,3.26,40,2.838,41,2.221,42,2.319,44,0.458,48,2.992,55,0.917,56,2.092,59,1.654,60,2.749,61,0.335,63,3.13,64,2.941,65,0.776,66,1.467,67,1.01,68,1.01,71,0.757,72,2.524,79,2.812,80,2.372,87,2.616,88,0.624,89,1.795,170,0.776,270,0.528,279,3.067,536,2.008,593,0.961,594,0.703,599,0.837,607,1.487,748,3.366,749,2.748,750,2.748,751,3.691,752,3.142,753,4.379,754,3.603,755,1.214,756,4.65,757,3.691,758,4.255,761,3.366,763,2.439,764,3.014,765,1.686,767,3.168,768,3.168,769,1.463,771,2.306,772,2.887,775,3.391,776,1.902,778,2.887,781,3.718,783,2.887,784,2.524,789,1.138,799,2.786,803,2.411,807,2.307,808,2.524,813,1.74,814,2.606,815,1.301,816,1.301,817,1.795,818,1.301,820,2.053,821,2.543,822,2.223,835,2.05,876,1.528,877,1.784,878,4.595,879,3.002,898,1.902,899,1.902,903,1.528,904,1.902,905,2.411,906,1.902,907,1.902,1762,2.248,1765,2.05,1767,4.394,1772,2.248,1775,2.248,1783,2.248,1803,2.549,1804,2.549,1805,2.549,1806,2.549,1807,2.549,1808,2.549,1809,2.549,1810,2.549,1811,2.549,1812,2.549,1813,2.549,1814,2.549,1815,2.549,1816,2.549,1817,2.549,1818,2.549,1819,2.549]],["title/classes/UpdateOrganizationDto.html",[23,0.268,937,2.628]],["body/classes/UpdateOrganizationDto.html",[3,0.061,4,0.061,5,0.055,7,2.903,10,0.118,11,0.574,12,1.867,14,1.253,15,0.388,16,0.009,17,0.157,20,0.131,21,0.004,22,0.004,23,0.411,25,0.4,28,1.27,36,1.081,37,3.332,40,3.082,41,2.247,42,2.325,44,0.447,50,2.839,53,1.431,55,1.237,56,2.467,59,1.645,60,2.64,61,0.359,63,3.077,64,2.766,65,0.832,66,1.549,67,1.083,68,1.083,71,0.812,72,2.622,75,3.886,79,2.328,80,3.461,82,2.04,87,2.525,88,0.669,89,1.896,106,1.473,170,0.832,270,0.566,536,2.65,593,1.015,594,0.754,597,0.897,607,1.545,628,3.815,629,3.815,664,2.339,748,3.44,749,2.84,750,2.84,755,3.461,761,3.44,763,2.521,765,1.807,767,3.244,768,3.68,769,2.437,771,2.964,772,3.71,783,2.999,784,2.622,789,3.006,790,3.123,791,2.04,792,2.04,803,2.546,807,2.384,808,2.622,813,2.542,814,2.4,815,2.659,816,1.395,817,1.896,818,1.395,820,2.999,821,2.659,822,2.325,883,2.04,908,1.638,909,1.913,910,4.749,911,4.749,919,5.425,925,5.425,926,4.385,927,2.41,932,1.638,933,3.888,934,3.888,935,3.446,936,3.888,937,2.546,938,1.807,939,1.913,1765,2.198,1820,2.733,1821,2.733,1822,2.733,1823,2.733,1824,2.733,1825,2.733,1826,2.733,1827,2.733,1828,2.733,1829,2.733,1830,2.733,1831,2.733,1832,2.733,1833,2.733,1834,2.733,1835,2.733]],["title/classes/UpdateUserInput.html",[23,0.268,1836,3.069]],["body/classes/UpdateUserInput.html",[3,0.141,4,0.141,5,0.127,10,0.273,11,1.026,14,1.173,15,0.347,16,0.009,17,0.169,20,0.141,21,0.008,22,0.008,23,0.464,25,0.923,27,3.619,36,1.026,44,0.424,55,1.32,60,2.606,61,0.83,63,2.891,64,2.674,65,1.92,941,6.077,943,5.116,949,5.564,951,3.474,961,5.699,962,5.074,963,4.708,964,5.074,966,5.074,1033,4.011,1616,5.564,1732,5.564,1836,5.313,1837,6.308,1838,6.308]],["title/classes/UserAccessTokenClaims.html",[23,0.268,529,2.516]],["body/classes/UserAccessTokenClaims.html",[3,0.118,4,0.118,5,0.106,10,0.229,11,0.918,12,1.941,14,1.25,15,0.396,16,0.009,17,0.152,20,0.168,21,0.007,22,0.007,23,0.484,25,0.772,35,2.892,36,1.17,44,0.484,59,1.412,61,0.694,87,2.853,88,1.291,99,3.163,106,1.323,108,3.938,366,5.035,430,3.49,447,2.597,457,1.778,529,3.897,536,2.666,583,3.938,623,5.242,624,5.257,625,5.257,626,5.257,627,5.257,628,4.502,629,4.502,630,3.49,1623,4.654,1629,4.654,1725,4.244,1839,5.277,1840,5.277,1841,5.277,1842,5.277]],["title/injectables/UserAclService.html",[305,0.999,1843,3.069]],["body/injectables/UserAclService.html",[1,5.97,3,0.117,4,0.117,5,0.105,9,5.73,10,0.227,11,0.913,15,0.343,16,0.009,17,0.187,18,4.336,19,3.666,20,0.117,21,0.007,22,0.007,23,0.32,28,1.041,35,2.465,44,0.457,52,2.385,55,1.096,71,2.007,115,1.959,117,2.336,123,3.005,125,1.911,133,1.735,136,0.985,178,2.756,180,1.345,213,3.909,238,2.774,305,1.54,306,2.017,355,2.337,362,3.909,370,3.666,559,3.45,607,1.377,631,6.256,633,6.975,634,5.962,635,5.962,636,5.962,637,3.909,639,5.585,640,4.619,642,2.884,643,3.464,644,4.619,645,4.619,646,4.619,647,5.962,648,5.902,650,4.212,656,4.619,1033,2.58,1080,4.95,1097,3.139,1253,3.909,1843,4.731,1844,6.601,1845,4.619,1846,6.759,1847,5.237,1848,6.759,1849,5.237,1850,5.237,1851,5.237,1852,5.237,1853,5.237,1854,5.237,1855,5.237,1856,5.237,1857,5.237,1858,4.619,1859,6.759,1860,6.759,1861,5.237,1862,5.237,1863,5.237,1864,5.237,1865,5.237]],["title/classes/UserApiResponse.html",[23,0.268,610,1.689]],["body/classes/UserApiResponse.html",[3,0.097,4,0.097,5,0.087,10,0.187,11,0.804,15,0.385,16,0.009,17,0.188,20,0.196,21,0.006,22,0.006,23,0.539,25,0.633,34,1.764,36,0.804,39,1.536,41,1.528,42,1.565,44,0.332,48,1.578,50,1.536,52,1.194,59,1.724,61,0.569,106,1.085,139,1.621,174,1.621,216,2.753,256,1.971,266,2.358,267,1.536,270,1.517,278,2.494,318,2.588,319,1.714,355,3.175,428,1.764,447,1.285,456,2.113,457,2.005,587,1.667,588,3.134,589,1.994,591,3.937,593,1.751,594,1.194,595,2.406,596,1.817,597,2.406,598,1.817,599,2.406,600,1.817,601,2.058,602,1.817,603,1.994,604,1.994,605,1.817,606,3.872,607,1.565,608,1.458,609,2.06,610,2.292,611,1.667,612,1.667,613,1.667,614,1.667,615,1.667,616,1.667,617,1.667,618,1.667,619,1.667,620,1.667,621,1.764,622,1.667,1866,4.327,1867,4.327]],["title/classes/UserArrayApiResponse.html",[23,0.268,611,1.689]],["body/classes/UserArrayApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.722,61,0.568,106,1.083,139,1.619,170,1.316,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.587,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.75,594,1.193,595,2.404,596,1.815,597,2.404,598,1.815,599,2.404,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,2.29,612,1.665,613,1.665,614,1.665,615,1.665,616,1.665,617,1.665,618,1.665,619,1.665,620,1.665,621,1.762,622,1.665,678,2.48,1868,4.322,1869,4.322]],["title/controllers/UserController.html",[228,1.689,1870,3.272]],["body/controllers/UserController.html",[3,0.08,4,0.08,5,0.072,10,0.154,12,1.824,13,2.138,15,0.402,16,0.01,17,0.19,18,1.889,19,2.496,20,0.08,21,0.005,22,0.005,23,0.218,28,1.035,36,0.908,44,0.375,52,2.308,55,1.089,61,0.469,66,2.45,67,1.413,68,1.413,106,1.868,115,1.504,117,1.113,120,1.3,121,1.661,125,1.9,133,1.725,135,1.964,136,0.67,149,1.892,150,1.842,152,2.046,153,2.778,166,2.772,170,2.399,175,3.873,180,1.725,210,4.577,216,2.097,228,1.373,230,1.373,232,2.046,233,2.969,238,2.749,242,2.798,243,3.111,244,2.046,247,2.046,248,2.046,249,4.097,250,4.61,251,2.046,252,3.543,253,1.643,254,1.643,255,2.046,256,2.069,257,2.046,258,1.373,259,3.644,260,1.999,261,1.82,262,1.964,263,1.3,264,1.373,268,2.241,270,0.738,277,3.855,278,1.9,279,3.309,280,3.855,282,2.588,314,2.138,318,1.201,320,3.667,325,2.662,327,2.821,436,4.222,437,4.028,451,4.703,463,2.138,471,3.111,474,4.028,549,5.74,561,2.858,567,2.661,571,3.145,572,3.145,608,1.748,1025,3.644,1026,2.358,1033,3.014,1035,2.241,1036,3.432,1037,3.844,1038,1.964,1039,2.241,1049,3.261,1054,3.632,1136,3.632,1169,3.873,1646,3.873,1836,4.703,1870,3.873,1871,3.145,1872,6.118,1873,6.118,1874,5.396,1875,5.396,1876,3.566,1877,3.566,1878,3.566,1879,3.566,1880,3.566,1881,3.566,1882,3.145,1883,4.577,1884,3.566,1885,3.566,1886,3.566,1887,3.566,1888,3.145,1889,5.927,1890,3.566,1891,3.566,1892,3.566,1893,3.566,1894,3.566,1895,4.577,1896,3.145,1897,3.566,1898,3.566,1899,3.566,1900,3.566,1901,6.118,1902,3.566,1903,3.566,1904,3.566,1905,3.145,1906,3.566,1907,3.566,1908,3.566,1909,5.189,1910,5.189,1911,5.189,1912,3.566,1913,5.189,1914,3.566,1915,3.566,1916,3.566,1917,3.145,1918,3.566]],["title/modules/UserModule.html",[284,1.369,408,2.9]],["body/modules/UserModule.html",[3,0.131,4,0.131,5,0.118,16,0.009,17,0.193,20,0.131,21,0.007,22,0.007,23,0.359,136,1.106,230,2.802,284,2.465,286,2.71,287,2.71,288,2.898,289,2.898,290,2.71,291,3.89,292,3.89,297,4.112,298,3.583,299,2.898,300,2.898,302,3.713,303,3.239,320,5.431,408,6.015,497,4.755,508,3.89,1068,4.117,1843,6.045,1870,5.893,1896,5.188,1919,5.188,1920,5.188,1921,5.188,1922,5.882,1923,5.882,1924,5.882,1925,5.882,1926,5.882]],["title/classes/UserOutput.html",[23,0.268,318,1.477]],["body/classes/UserOutput.html",[3,0.116,4,0.116,5,0.105,10,0.226,11,0.91,12,1.826,14,1.257,15,0.403,16,0.009,17,0.15,20,0.116,21,0.007,22,0.007,23,0.411,25,0.762,35,2.877,36,1.189,44,0.492,59,1.666,61,0.685,87,2.765,88,1.274,99,3.121,104,6.098,105,4.187,107,3.885,108,3.885,109,3.885,318,2.268,366,5.017,536,2.649,624,5.224,625,5.224,626,5.224,627,5.224,628,4.474,629,4.474,871,3.553,873,4.282,941,6.612,1718,4.592,1723,4.592,1724,4.592,1725,4.187,1726,4.592,1927,8.171,1928,5.206]],["title/classes/UserRefreshTokenClaims.html",[23,0.268,630,2.9]],["body/classes/UserRefreshTokenClaims.html",[3,0.137,4,0.137,5,0.123,10,0.266,11,1.009,12,2.049,14,1.237,15,0.281,16,0.009,17,0.167,20,0.18,21,0.008,22,0.008,23,0.511,25,0.898,35,2.723,44,0.343,59,1.513,61,0.808,87,2.832,88,1.503,99,3.681,106,1.872,366,4.825,430,4.062,447,2.218,457,2.069,529,3.524,536,2.18,583,4.583,623,4.477,624,4.299,625,4.299,626,4.299,627,4.299,628,3.681,629,3.681,630,4.94,1929,6.141]],["title/injectables/UserService.html",[305,0.999,320,2.628]],["body/injectables/UserService.html",[3,0.08,4,0.08,5,0.072,10,0.156,12,1.888,14,1.163,15,0.362,16,0.01,17,0.18,20,0.08,21,0.005,22,0.005,23,0.319,28,1.217,44,0.442,52,2.064,53,2.663,55,1.281,88,0.882,106,2.1,115,1.515,117,1.632,120,1.906,121,2.161,125,2.235,133,1.981,136,0.677,149,1.906,150,1.856,152,2.183,153,2.897,162,2.438,166,2.911,180,1.981,205,5.428,233,3.137,242,3.027,258,1.388,260,1.388,263,1.314,264,1.388,268,3.285,270,0.746,282,2.601,305,1.191,306,1.388,309,2.16,310,3.801,314,2.16,317,4.298,318,2.415,320,3.134,322,2.16,323,2.067,325,3.057,327,3.239,338,4.625,451,5.4,536,2.397,537,4.95,542,3.26,549,2.689,578,1.715,608,1.214,642,1.984,935,2.383,940,5.039,943,3.285,944,4.593,1033,1.775,1070,3.141,1071,3.141,1122,3.66,1264,4.612,1601,2.689,1836,4.726,1874,5.428,1875,5.428,1882,3.178,1888,3.178,1889,5.428,1895,5.428,1905,3.178,1917,3.178,1930,3.178,1931,6.154,1932,5.228,1933,6.154,1934,5.228,1935,6.154,1936,3.603,1937,3.603,1938,3.603,1939,5.228,1940,3.603,1941,3.603,1942,3.603,1943,5.228,1944,3.603,1945,3.603,1946,3.603,1947,3.603,1948,3.603,1949,3.603,1950,5.228,1951,3.178,1952,3.603,1953,3.603,1954,3.603,1955,5.228,1956,3.603,1957,3.603,1958,3.603,1959,3.603,1960,6.154,1961,5.228,1962,3.603,1963,3.603,1964,3.603,1965,3.603,1966,5.228,1967,3.603]],["title/coverage.html",[1968,5.297]],["body/coverage.html",[0,2.362,1,1.738,5,0.05,6,2.191,13,1.489,15,0.37,16,0.009,21,0.004,22,0.004,23,0.555,24,1.643,26,3.902,27,4.036,66,0.906,69,1.643,70,1.643,72,1.108,73,3.169,89,1.108,96,1.738,97,2.191,98,1.854,99,4.065,110,1.854,111,2.191,112,2.191,121,0.795,126,3.169,141,1.998,143,1.854,147,1.738,162,0.984,166,0.815,228,2.859,229,1.854,231,2.191,252,1.144,253,1.144,254,1.144,256,2.432,259,1.268,261,1.268,263,0.906,265,1.643,267,1.399,271,1.643,290,1.144,305,1.901,307,2.191,310,1.224,318,0.837,320,1.489,339,1.854,340,2.191,344,1.643,352,2.191,420,2.191,426,1.854,427,2.191,429,1.854,434,1.854,442,1.854,445,1.854,447,1.656,456,0.882,457,0.837,458,1.854,461,1.854,464,1.561,497,1.368,498,1.738,499,1.738,504,1.738,523,2.191,529,1.425,587,0.957,588,3.65,589,3.65,591,1.108,593,0.593,595,0.815,597,0.815,599,0.815,601,0.859,610,0.957,611,0.957,612,0.957,613,0.957,614,0.957,615,0.957,616,0.957,617,0.957,618,0.957,619,0.957,620,0.957,622,0.957,623,4.065,630,1.643,631,1.854,632,2.191,637,1.854,642,1.368,648,1.854,665,1.998,675,1.643,676,4.065,677,4.065,695,1.643,696,3.82,701,1.561,705,1.643,732,2.191,733,2.191,746,1.489,747,3.902,789,1.108,817,1.108,819,1.489,823,1.489,828,1.489,829,3.902,860,1.489,867,1.489,868,1.489,876,1.489,877,3.902,903,1.489,905,1.489,908,1.489,909,3.902,932,1.489,937,1.489,940,1.854,941,3.655,951,3.07,1008,1.854,1009,2.191,1033,1.224,1038,1.368,1040,1.643,1082,5.854,1084,2.191,1093,1.561,1096,1.425,1098,1.561,1140,3.169,1155,1.854,1156,3.169,1172,1.854,1173,2.191,1180,1.643,1185,1.998,1201,2.191,1216,3.169,1217,3.169,1242,3.169,1243,2.191,1266,2.191,1270,1.854,1271,2.191,1275,2.191,1277,1.854,1278,2.191,1294,1.854,1295,2.191,1322,1.854,1323,2.191,1340,1.643,1390,2.191,1412,1.854,1413,2.191,1430,1.643,1476,2.191,1501,1.854,1502,2.191,1519,1.643,1562,2.191,1592,2.191,1593,2.191,1602,2.191,1603,2.191,1631,3.655,1632,2.191,1645,1.998,1646,1.854,1648,2.191,1654,1.998,1672,1.998,1686,1.854,1687,2.191,1700,1.643,1739,2.191,1836,1.738,1843,1.738,1844,2.191,1845,2.191,1870,1.854,1871,2.191,1930,2.191,1968,2.191,1969,2.484,1970,2.484,1971,2.484,1972,3.475,1973,8.44,1974,8.897,1975,2.191,1976,6.78,1977,7.245,1978,8.679,1979,4.32,1980,6.079,1981,3.475,1982,7.245,1983,6.079,1984,6.469,1985,2.484,1986,2.484,1987,2.484,1988,3.475,1989,2.191,1990,5.575,1991,3.94,1992,2.484,1993,2.484,1994,2.484,1995,3.94,1996,3.475,1997,3.475,1998,8.013,1999,5.575,2000,2.484,2001,2.484,2002,3.94,2003,3.94,2004,2.191,2005,2.191,2006,4.32,2007,2.191,2008,2.191,2009,4.484,2010,2.191,2011,2.191,2012,2.191,2013,2.191,2014,2.191,2015,3.939,2016,2.191,2017,2.191,2018,3.169,2019,2.191,2020,1.998,2021,5.25,2022,5.25,2023,2.191,2024,1.998,2025,2.191,2026,2.191,2027,2.191,2028,2.191,2029,2.191,2030,2.484,2031,2.191,2032,2.191,2033,2.191,2034,2.191,2035,2.191,2036,2.191,2037,3.939,2038,2.191,2039,1.998,2040,2.484,2041,2.484,2042,2.484,2043,2.484]],["title/dependencies.html",[287,2.432,2044,3.221]],["body/dependencies.html",[16,0.009,21,0.008,22,0.008,23,0.46,61,0.819,65,1.896,88,1.524,136,1.171,137,3.574,140,5.01,211,5.494,256,1.805,287,2.87,316,4.649,380,5.494,503,3.734,604,2.87,621,2.54,1097,3.734,1229,4.649,1251,6.044,1252,4.649,1284,5.01,1653,5.01,1951,5.494,2045,8.098,2046,6.229,2047,6.229,2048,6.229,2049,6.229,2050,6.229,2051,6.229,2052,6.229,2053,6.229,2054,6.229,2055,6.229,2056,6.229,2057,6.229,2058,6.229,2059,6.229,2060,6.229,2061,6.229,2062,6.229,2063,6.229,2064,5.494,2065,6.229,2066,6.229,2067,6.229,2068,6.229,2069,6.229,2070,6.229,2071,6.229,2072,6.229]],["title/miscellaneous/enumerations.html",[2073,2.189,2074,4.657]],["body/miscellaneous/enumerations.html",[9,5.813,10,0.286,16,0.009,18,4.133,21,0.008,22,0.008,52,2.153,178,3.681,238,4.133,639,4.931,642,4.297,1021,5.462,1033,3.844,1858,6.882,1883,7.324,2073,3.96,2074,5.827,2075,6.607,2076,6.607,2077,6.607,2078,7.803,2079,6.607]],["title/miscellaneous/functions.html",[2073,2.189,2080,4.657]],["body/miscellaneous/functions.html",[10,0.251,14,1.138,15,0.386,16,0.009,21,0.007,22,0.007,23,0.353,28,1.263,55,1.329,125,2.319,128,5.48,133,2.166,138,4.698,139,2.167,147,5.039,166,1.899,174,2.697,180,1.485,254,3.317,256,2.086,290,3.611,370,4.049,676,3.468,677,4.315,696,3.635,706,4.049,707,5.039,708,4.049,709,4.049,710,4.049,711,4.049,712,3.826,713,4.049,1096,3.319,1134,4.049,1291,4.317,1631,4.317,1988,5.102,1989,6.349,2021,4.317,2022,5.372,2023,6.349,2036,5.102,2073,3.468,2080,5.102,2081,7.199,2082,4.653,2083,4.653,2084,4.653,2085,5.784,2086,7.199,2087,7.199,2088,5.784,2089,5.784,2090,8.201,2091,5.784,2092,5.784,2093,5.784,2094,5.784,2095,5.784,2096,5.784,2097,5.784,2098,7.837,2099,5.784,2100,5.784,2101,5.784,2102,5.784]],["title/index.html",[10,0.158,2103,3.651,2104,3.651]],["body/index.html",[16,0.008,21,0.008,22,0.008,2105,5.798,2106,6.358]],["title/modules.html",[286,2.767]],["body/modules.html",[16,0.008,21,0.008,22,0.008,285,4.497,286,2.96,297,3.059,391,4.497,397,4.794,401,4.497,402,4.497,403,4.497,404,4.497,405,4.497,406,4.497,407,4.497,408,4.249,2107,9.159,2108,9.159,2109,9.159,2110,9.159]],["title/overview.html",[2111,5.297]],["body/overview.html",[2,3.489,16,0.009,21,0.006,22,0.006,25,0.635,121,2.605,230,1.671,271,5.382,284,1.354,285,5.802,286,1.999,287,1.999,288,2.137,289,2.137,290,1.999,291,2.137,292,2.137,293,3.826,294,3.826,295,3.826,296,3.826,297,4.254,298,2.937,299,2.137,300,2.137,306,1.671,310,4.009,320,4.878,344,4.505,391,5.957,392,3.826,393,3.826,394,3.826,397,6.773,398,3.826,399,3.826,400,3.826,401,6.177,402,5.887,403,5.696,404,5.887,405,5.887,406,5.957,407,5.802,408,5.771,464,4.28,494,3.826,495,3.826,497,4.564,498,4.768,499,4.768,935,2.869,1040,4.505,1064,3.826,1066,3.826,1180,4.505,1190,3.826,1191,3.826,1340,4.505,1358,3.826,1359,3.826,1430,4.505,1448,3.826,1449,3.826,1519,5.382,1534,3.826,1535,3.826,1536,3.826,1601,3.237,1645,3.489,1664,3.826,1665,3.826,1666,3.826,1700,5.382,1733,3.826,1734,3.826,1736,3.826,1843,4.768,1919,3.826,1920,3.826,1921,3.826,2111,3.826,2112,4.338,2113,4.338,2114,4.338,2115,4.338]],["title/properties.html",[11,0.713,2044,3.221]],["body/properties.html",[7,2.274,11,0.96,16,0.009,21,0.008,22,0.008,2064,6.267,2105,5.715,2106,6.267,2116,7.105,2117,7.105]],["title/miscellaneous/typealiases.html",[2073,2.189,2118,5.279]],["body/miscellaneous/typealiases.html",[10,0.251,14,0.805,15,0.412,16,0.009,21,0.007,22,0.007,26,4.063,27,4.139,35,2.116,39,2.06,46,3.196,48,2.116,50,2.06,52,1.602,69,4.771,106,1.455,256,2.09,637,5.384,639,4.331,648,5.384,650,5.802,665,5.802,670,4.331,671,5.119,676,3.479,677,4.324,694,4.063,695,4.771,696,4.533,754,3.196,1996,5.119,1997,6.923,2009,4.668,2011,6.363,2012,6.363,2015,4.668,2018,5.802,2020,5.802,2021,4.331,2022,6.514,2024,5.802,2025,6.363,2026,6.363,2027,6.363,2028,6.363,2029,6.363,2037,4.668,2039,5.802,2073,3.479,2082,6.313,2083,6.923,2084,4.668,2119,5.804,2120,7.213,2121,5.119,2122,5.119,2123,5.804,2124,8.894]],["title/miscellaneous/variables.html",[2073,2.189,2125,4.657]],["body/miscellaneous/variables.html",[7,2.323,9,4.311,10,0.129,12,1.348,13,4.185,14,1.103,15,0.364,16,0.01,18,2.918,21,0.005,22,0.005,28,0.46,41,1.168,42,1.196,52,1.256,53,2.445,55,0.998,123,3.161,126,4.953,128,2.859,138,4.185,139,1.705,141,3.659,152,2.601,153,1.573,155,4.859,157,3.395,162,2.183,165,4.013,166,0.981,178,3.593,180,1.792,192,2.859,213,2.23,233,1.615,238,2.41,242,1.061,256,1.318,259,2.322,261,1.525,278,1.286,282,2.122,318,1.533,366,2.727,370,3.184,428,1.218,445,2.23,446,4.596,451,2.092,456,1.061,457,1.007,486,2.859,504,3.184,536,1.615,537,3.659,542,2.41,549,2.23,559,4.423,587,1.151,593,1.087,595,1.494,597,1.494,599,1.494,601,1.033,607,1.619,610,1.151,611,1.151,612,1.151,613,1.151,614,1.151,615,1.151,616,1.151,617,1.151,618,1.151,619,1.151,620,1.151,622,1.151,624,3.184,625,3.184,626,3.184,627,3.184,676,1.791,677,2.727,693,4.639,701,1.878,702,3.462,705,3.009,712,1.976,717,2.092,723,2.092,730,2.092,754,1.645,943,2.859,1025,2.322,1035,1.878,1093,2.859,1096,2.61,1098,2.859,1102,3.644,1104,1.976,1105,1.976,1106,1.976,1107,3.009,1185,5.615,1222,3.184,1252,3.395,1270,3.395,1277,3.395,1284,2.403,1291,2.23,1596,2.636,1601,2.23,1604,2.636,1631,2.23,1654,3.659,1672,4.431,1972,2.636,1975,4.013,1979,2.636,1981,2.636,2004,2.636,2005,4.013,2006,2.636,2007,4.013,2008,4.013,2009,2.403,2010,5.432,2013,2.636,2014,2.636,2015,3.659,2016,4.013,2017,4.013,2018,3.659,2019,4.013,2020,2.403,2021,2.23,2022,3.395,2024,2.403,2031,2.636,2032,2.636,2033,4.013,2034,4.013,2035,4.013,2037,2.403,2038,4.013,2039,2.403,2073,1.791,2082,2.403,2083,2.403,2084,2.403,2105,2.403,2121,4.013,2122,4.013,2125,2.636,2126,2.988,2127,2.988,2128,2.988,2129,5.509,2130,4.549,2131,2.988,2132,2.988,2133,4.549,2134,5.509,2135,2.988,2136,2.988,2137,6.981,2138,2.988,2139,2.988,2140,4.549,2141,2.988,2142,2.988,2143,2.988,2144,2.988,2145,2.988,2146,2.988,2147,2.988,2148,4.549,2149,2.988,2150,6.158,2151,2.988,2152,4.549,2153,2.988,2154,4.549,2155,2.988,2156,2.988,2157,2.988,2158,2.988,2159,2.988,2160,2.988,2161,2.988,2162,4.549,2163,2.988,2164,4.549,2165,2.988,2166,2.988,2167,2.988,2168,2.988,2169,2.988,2170,5.509,2171,2.988,2172,6.981,2173,2.988,2174,2.988,2175,2.988,2176,2.988,2177,2.988,2178,2.988,2179,2.988,2180,4.549,2181,4.549,2182,2.988,2183,2.988,2184,2.988,2185,2.988,2186,2.988,2187,2.988,2188,2.988,2189,2.988,2190,2.988,2191,2.988,2192,4.549,2193,2.988,2194,2.988,2195,2.988,2196,2.988,2197,2.988,2198,2.988,2199,2.988,2200,2.988,2201,4.549,2202,2.988,2203,2.988,2204,2.988,2205,2.988,2206,2.988,2207,5.509,2208,2.988,2209,4.549,2210,2.988,2211,2.988,2212,4.549,2213,2.988,2214,2.988,2215,2.988,2216,2.988,2217,2.988,2218,2.988,2219,2.988,2220,2.988,2221,4.549,2222,4.549,2223,2.988,2224,4.549,2225,2.988,2226,2.988,2227,2.988,2228,2.988,2229,2.988,2230,2.988,2231,4.549,2232,2.988,2233,2.988,2234,2.988,2235,2.988,2236,2.988,2237,6.158,2238,2.988,2239,2.988,2240,2.988,2241,2.988,2242,2.988,2243,2.988]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1082,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"coverage.html":{}}}],["0.14.1",{"_index":2058,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2066,"title":{},"body":{"dependencies.html":{}}}],["0.4.2",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2062,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1974,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1976,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1978,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1977,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":849,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["01t00:00:00.000z",{"_index":865,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["01t00:00:00.000z'})@isdatestring",{"_index":850,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["04",{"_index":845,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["1",{"_index":935,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["1'})@expose",{"_index":1555,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["1'})@isoptional()@isstring",{"_index":927,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["1.0.0",{"_index":2064,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["1/1",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1601,"title":{},"body":{"classes/PaginationParamsDto.html":{},"injectables/UserService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":951,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterInput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["100)@isalphanumeric",{"_index":956,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["100)@isstring",{"_index":1616,"title":{},"body":{"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["11.0.0",{"_index":2047,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":2045,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":2048,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":2071,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2112,"title":{},"body":{"overview.html":{}}}],["12345",{"_index":1166,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["12345})@expose",{"_index":1160,"title":{},"body":{"classes/ImagekitAuthParams.html":{}}}],["15t00:00:00.000z",{"_index":864,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["15t00:00:00.000z'})@isdatestring",{"_index":846,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["17.13.3",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":2115,"title":{},"body":{"overview.html":{}}}],["20",{"_index":2113,"title":{},"body":{"overview.html":{}}}],["2025",{"_index":844,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["3.17.0",{"_index":2072,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":2046,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["5551234567",{"_index":80,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["5551234567'})@expose",{"_index":91,"title":{},"body":{"classes/AddressResponse.html":{},"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OrganizationResponseDto.html":{}}}],["5551234567'})@isoptional",{"_index":765,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["5551234567'})@isoptional()@isstring",{"_index":82,"title":{},"body":{"classes/AddressInput.html":{},"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["5551234567'})@validatenested({each",{"_index":791,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["58",{"_index":2114,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2068,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["7.8.2",{"_index":2069,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["9\\s]/g",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{}}}],["abcd",{"_index":825,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["abcd'})@isstring()@expose",{"_index":988,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["ability",{"_index":644,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["above",{"_index":206,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["acceptable",{"_index":1640,"title":{},"body":{"classes/RequestContext.html":{}}}],["acceptedlanguage",{"_index":182,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["access",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseAclService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["account",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["acl",{"_index":639,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acl.service",{"_index":1926,"title":{},"body":{"modules/UserModule.html":{}}}],["acl.service.ts",{"_index":1845,"title":{},"body":{"injectables/UserAclService.html":{},"coverage.html":{}}}],["acl.service.ts:10",{"_index":1847,"title":{},"body":{"injectables/UserAclService.html":{}}}],["acl.service.ts:21",{"_index":1849,"title":{},"body":{"injectables/UserAclService.html":{}}}],["aclrule",{"_index":637,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["aclrule.actions.includes(action",{"_index":668,"title":{},"body":{"classes/BaseAclService.html":{}}}],["aclrule.actions.includes(action.manage",{"_index":669,"title":{},"body":{"classes/BaseAclService.html":{}}}],["aclrule.rulecallback",{"_index":672,"title":{},"body":{"classes/BaseAclService.html":{}}}],["aclrule.rulecallback(resource",{"_index":674,"title":{},"body":{"classes/BaseAclService.html":{}}}],["aclrules",{"_index":634,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["aclrules.foreach((aclrule",{"_index":666,"title":{},"body":{"classes/BaseAclService.html":{}}}],["action",{"_index":9,"title":{},"body":{"interfaces/Actor.html":{},"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["action.constant",{"_index":652,"title":{},"body":{"classes/BaseAclService.html":{}}}],["action.manage",{"_index":1857,"title":{},"body":{"injectables/UserAclService.html":{}}}],["action.read",{"_index":1861,"title":{},"body":{"injectables/UserAclService.html":{}}}],["action.update",{"_index":1862,"title":{},"body":{"injectables/UserAclService.html":{}}}],["actions",{"_index":647,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["actor",{"_index":1,"title":{"interfaces/Actor.html":{}},"body":{"interfaces/Actor.html":{},"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"coverage.html":{}}}],["actor.constant",{"_index":653,"title":{},"body":{"classes/BaseAclService.html":{}}}],["actor.id",{"_index":1865,"title":{},"body":{"injectables/UserAclService.html":{}}}],["actor.roles.foreach((actorrole",{"_index":657,"title":{},"body":{"classes/BaseAclService.html":{}}}],["actorrole",{"_index":663,"title":{},"body":{"classes/BaseAclService.html":{}}}],["add",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["added",{"_index":217,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["addevent",{"_index":1011,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["addevent(ctx",{"_index":1016,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["additional",{"_index":215,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["additionalinfo",{"_index":609,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["addnews",{"_index":1324,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["addnews(ctx",{"_index":1329,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["addopportunity",{"_index":1477,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["addopportunity(ctx",{"_index":1479,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["addopportutnity",{"_index":1415,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["addopportutnity(ctx",{"_index":1420,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["addorg",{"_index":1504,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["addorg(ctx",{"_index":1509,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["addorganization",{"_index":1563,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["addorganization(ctx",{"_index":1566,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["address",{"_index":748,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["addressinput",{"_index":72,"title":{"classes/AddressInput.html":{}},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["addressresponse",{"_index":89,"title":{"classes/AddressResponse.html":{}},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["addtag",{"_index":1688,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["addtag(ctx",{"_index":1691,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["addtagdto",{"_index":24,"title":{"classes/AddTagDto.html":{}},"body":{"classes/AddTagDto.html":{},"controllers/TagController.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["admin",{"_index":238,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AuthService.html":{},"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateNewsDto.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["admin'})@isstring",{"_index":837,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["admin'})@isstring()@expose",{"_index":1365,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["admin'})@isstring()@isoptional",{"_index":1788,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["adminanalyticsoutput",{"_index":96,"title":{"classes/AdminAnalyticsOutput.html":{}},"body":{"classes/AdminAnalyticsOutput.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"coverage.html":{}}}],["algorithm",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{}}}],["algorithms",{"_index":1258,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["alias",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2119,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":110,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["allowed",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":658,"title":{},"body":{"classes/BaseAclService.html":{}}}],["analytics",{"_index":98,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"coverage.html":{}}}],["analytics/analytics.module",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["analyticscontroller",{"_index":229,"title":{"controllers/AnalyticsController.html":{}},"body":{"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"coverage.html":{}}}],["analyticsmodule",{"_index":285,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["analyticsservice",{"_index":271,"title":{"injectables/AnalyticsService.html":{}},"body":{"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"coverage.html":{},"overview.html":{}}}],["api",{"_index":256,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"controllers/EventsController.html":{},"classes/ImagekitApiResponse.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api'})@apiresponse({status",{"_index":436,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["api.exception",{"_index":145,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["api.exception.ts",{"_index":733,"title":{},"body":{"classes/BaseApiException.html":{},"coverage.html":{}}}],["api.exception.ts:4",{"_index":736,"title":{},"body":{"classes/BaseApiException.html":{}}}],["api.exception.ts:5",{"_index":735,"title":{},"body":{"classes/BaseApiException.html":{}}}],["apibearerauth",{"_index":1037,"title":{},"body":{"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":249,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":59,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["apiproperty()@expose",{"_index":1927,"title":{},"body":{"classes/UserOutput.html":{}}}],["apiproperty()@isarray()@arraynotempty()@isenum(role",{"_index":953,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apiproperty()@isboolean",{"_index":947,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apiproperty()@isnotempty()@isemail()@maxlength(100",{"_index":945,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{}}}],["apiproperty()@isnotempty()@isstring()@length(6",{"_index":950,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apiproperty()@isnotempty()@length(6",{"_index":955,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{}}}],["apiproperty()@isnotempty()@maxlength(100)@isstring",{"_index":1614,"title":{},"body":{"classes/RegisterInput.html":{}}}],["apiproperty()@isoptional()@isarray",{"_index":1473,"title":{},"body":{"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{}}}],["apiproperty()@isoptional()@isstring",{"_index":1075,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{}}}],["apiproperty()@maxlength(200)@isstring",{"_index":1619,"title":{},"body":{"classes/RegisterInput.html":{}}}],["apiproperty({description",{"_index":37,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/GalleryInput.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["apiproperty({required",{"_index":1072,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{}}}],["apiproperty({type",{"_index":678,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["apipropertyoptional",{"_index":60,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterInput.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{}}}],["apipropertyoptional()@isoptional()@isnotempty()@isstring",{"_index":948,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apipropertyoptional()@isoptional()@isnotempty()@length(6",{"_index":1838,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apipropertyoptional()@isoptional()@isnotempty()@maxlength(100)@isstring",{"_index":1837,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apipropertyoptional()@isoptional()@isstring",{"_index":1727,"title":{},"body":{"classes/TagSearchInput.html":{}}}],["apipropertyoptional({description",{"_index":79,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["apipropertyoptional({type",{"_index":681,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["apipropertytype",{"_index":695,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apiquery",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiresponse",{"_index":250,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apiresponseof${typename.replace",{"_index":722,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["apisortingquery",{"_index":2017,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":251,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apitags(\"analytics",{"_index":273,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["apitags(\"events",{"_index":1043,"title":{},"body":{"controllers/EventsController.html":{}}}],["apitags(\"imagekit",{"_index":1182,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["apitags(\"news",{"_index":1343,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags(\"opportunities",{"_index":1433,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["apitags(\"organizations",{"_index":1522,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apitags(\"tags",{"_index":1703,"title":{},"body":{"controllers/TagController.html":{}}}],["apitags(\"users",{"_index":1897,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('auth",{"_index":466,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":350,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["app.controller",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":345,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_env",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_filter",{"_index":1670,"title":{},"body":{"modules/SharedModule.html":{}}}],["app_interceptor",{"_index":1671,"title":{},"body":{"modules/SharedModule.html":{}}}],["app_port",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":339,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicationdeadline",{"_index":878,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["appliedfiltersinput",{"_index":1104,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["applogger",{"_index":121,"title":{"injectables/AppLogger.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["apploggermodule",{"_index":391,"title":{"modules/AppLoggerModule.html":{}},"body":{"modules/AppLoggerModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["applydecorators",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applyfilters",{"_index":1093,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":397,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":344,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arguments",{"_index":1240,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["argumentshost",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array",{"_index":723,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(type",{"_index":715,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["arraynotempty",{"_index":958,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["article",{"_index":866,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["article'})@isstring()@expose",{"_index":1375,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["article'})@isstring()@isoptional",{"_index":1792,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["article'})@isurl",{"_index":841,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["asdasd",{"_index":938,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["asdasd'})@expose",{"_index":1164,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/OrganizationResponseDto.html":{}}}],["assigns",{"_index":1262,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["async",{"_index":233,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["at'})@expose",{"_index":1367,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["at'})@isoptional()@expose",{"_index":1369,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["auth",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/variables.html":{}}}],["auth.guard",{"_index":463,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":1217,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":1223,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:22",{"_index":1226,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.strategy",{"_index":508,"title":{},"body":{"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{}}}],["auth.strategy.ts",{"_index":1243,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"coverage.html":{}}}],["auth.strategy.ts:14",{"_index":1247,"title":{},"body":{"injectables/JwtAuthStrategy.html":{}}}],["auth.strategy.ts:27",{"_index":1249,"title":{},"body":{"injectables/JwtAuthStrategy.html":{}}}],["auth/auth.module",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/constants/role.constant",{"_index":19,"title":{},"body":{"interfaces/Actor.html":{},"classes/BaseAclService.html":{},"classes/CreateUserInput.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{}}}],["auth/decorators/role.decorator",{"_index":1893,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/dtos/auth",{"_index":266,"title":{},"body":{"controllers/AnalyticsController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["auth/guards/jwt",{"_index":1039,"title":{},"body":{"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["auth/guards/roles.guard",{"_index":1894,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/strategies/jwt",{"_index":1068,"title":{},"body":{"modules/EventsModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{}}}],["authcontroller",{"_index":426,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":1230,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard",{"_index":1228,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard(strategy_jwt_auth",{"_index":1218,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(strategy_jwt_refresh",{"_index":1267,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["authguard(strategy_local",{"_index":1276,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":401,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":464,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":476,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authtokenapiresponse",{"_index":587,"title":{"classes/AuthTokenApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authtokenoutput",{"_index":457,"title":{"classes/AuthTokenOutput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":1259,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["availablefilters",{"_index":1105,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["availablefilters[key",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avoid",{"_index":2096,"title":{},"body":{"miscellaneous/functions.html":{}}}],["avoids",{"_index":709,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["await",{"_index":282,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":2106,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backward",{"_index":691,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["banner",{"_index":767,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["banner.jpg",{"_index":822,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["banner.jpg'})@expose",{"_index":1542,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["banner.jpg'})@isoptional()@isstring",{"_index":773,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["banner.jpg'})@isstring",{"_index":835,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["banner.jpg'})@isstring()@expose",{"_index":974,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["banner.jpg'})@isstring()@isoptional",{"_index":883,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["bannerimageid",{"_index":749,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["bannerimageurl",{"_index":750,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["base",{"_index":603,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiException.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["baseaclservice",{"_index":631,"title":{"classes/BaseAclService.html":{}},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"coverage.html":{}}}],["baseaclservice:10",{"_index":1851,"title":{},"body":{"injectables/UserAclService.html":{}}}],["baseaclservice:15",{"_index":1850,"title":{},"body":{"injectables/UserAclService.html":{}}}],["baseaclservice:28",{"_index":1852,"title":{},"body":{"injectables/UserAclService.html":{}}}],["baseapierrorobject",{"_index":675,"title":{"classes/BaseApiErrorObject.html":{}},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{}}}],["baseapierrorresponse",{"_index":252,"title":{"classes/BaseApiErrorResponse.html":{}},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"interfaces/TypeMapping.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["baseapierrorresponse})@httpcode(httpstatus.ok)@useguards(jwtrefreshguard)@useinterceptors(classserializerinterceptor",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{}}}],["baseapierrorresponse})@httpcode(httpstatus.ok)@useguards(localauthguard)@useinterceptors(classserializerinterceptor",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{}}}],["baseapierrorresponse})@useguards(jwtauthguard",{"_index":1884,"title":{},"body":{"controllers/UserController.html":{}}}],["baseapierrorresponse})@useinterceptors(classserializerinterceptor",{"_index":1891,"title":{},"body":{"controllers/UserController.html":{}}}],["baseapiexception",{"_index":143,"title":{"classes/BaseApiException.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiException.html":{},"coverage.html":{}}}],["baseapiexception.name",{"_index":741,"title":{},"body":{"classes/BaseApiException.html":{}}}],["baseapiresponse",{"_index":253,"title":{"classes/BaseApiResponse.html":{}},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"interfaces/TypeMapping.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["based",{"_index":176,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["bcrypt",{"_index":1951,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["being",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["below",{"_index":186,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["body",{"_index":243,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":35,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"guards/RolesGuard.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":290,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["boundary",{"_index":1238,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["breakthrough",{"_index":861,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["breakthrough'})@isstring",{"_index":855,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["breakthrough'})@isstring()@expose",{"_index":1384,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["breakthrough'})@isstring()@isoptional",{"_index":1801,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["browse",{"_index":2110,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2107,"title":{},"body":{"modules.html":{}}}],["by'})@isstring",{"_index":779,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{}}}],["by'})@isstring()@expose",{"_index":978,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["by'})@isstring()@isoptional",{"_index":1762,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["call",{"_index":1232,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["callback",{"_index":671,"title":{},"body":{"classes/BaseAclService.html":{},"miscellaneous/typealiases.html":{}}}],["called",{"_index":327,"title":{},"body":{"injectables/AnalyticsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["callhandler",{"_index":1300,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calling",{"_index":737,"title":{},"body":{"classes/BaseApiException.html":{}}}],["canactivate",{"_index":1219,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":1221,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"guards/RolesGuard.html":{}}}],["cando",{"_index":636,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["cando(role",{"_index":646,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["candoaction",{"_index":655,"title":{},"body":{"classes/BaseAclService.html":{}}}],["case",{"_index":189,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{}}}],["cases",{"_index":187,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exception",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["categories",{"_index":207,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["change",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["characters",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chaudhary",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":213,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":74,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{}}}],["class",{"_index":23,"title":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{}},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":25,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"overview.html":{}}}],["classname",{"_index":721,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["classserializerinterceptor",{"_index":244,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["clgf7xhig0000qof3m53ibdz1",{"_index":869,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["clgf7xhig0000qof3m53ibdz1'})@isstring()@expose",{"_index":1371,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["cluster_analyticsmodule",{"_index":293,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_exports",{"_index":295,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_imports",{"_index":296,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_providers",{"_index":294,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_apploggermodule",{"_index":392,"title":{},"body":{"modules/AppLoggerModule.html":{},"overview.html":{}}}],["cluster_apploggermodule_exports",{"_index":394,"title":{},"body":{"modules/AppLoggerModule.html":{},"overview.html":{}}}],["cluster_apploggermodule_providers",{"_index":393,"title":{},"body":{"modules/AppLoggerModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":494,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":496,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":495,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":1064,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":1065,"title":{},"body":{"modules/EventsModule.html":{}}}],["cluster_eventsmodule_providers",{"_index":1066,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_imagekitmodule",{"_index":1190,"title":{},"body":{"modules/ImagekitModule.html":{},"overview.html":{}}}],["cluster_imagekitmodule_imports",{"_index":1192,"title":{},"body":{"modules/ImagekitModule.html":{}}}],["cluster_imagekitmodule_providers",{"_index":1191,"title":{},"body":{"modules/ImagekitModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1358,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1360,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1359,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_opportunitymodule",{"_index":1448,"title":{},"body":{"modules/OpportunityModule.html":{},"overview.html":{}}}],["cluster_opportunitymodule_imports",{"_index":1450,"title":{},"body":{"modules/OpportunityModule.html":{}}}],["cluster_opportunitymodule_providers",{"_index":1449,"title":{},"body":{"modules/OpportunityModule.html":{},"overview.html":{}}}],["cluster_organizationmodule",{"_index":1534,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_exports",{"_index":1535,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_imports",{"_index":1537,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["cluster_organizationmodule_providers",{"_index":1536,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1664,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1666,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1667,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sharedmodule_providers",{"_index":1665,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":1733,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_exports",{"_index":1734,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_imports",{"_index":1735,"title":{},"body":{"modules/TagsModule.html":{}}}],["cluster_tagsmodule_providers",{"_index":1736,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1919,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1921,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1922,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1920,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cm92hbrpe00049kz8bwoaz1rh",{"_index":906,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["cm92hbrpe00049kz8bwoaz1rh'})@isstring()@expose",{"_index":1462,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["cms",{"_index":2117,"title":{},"body":{"properties.html":{}}}],["code",{"_index":926,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["company",{"_index":821,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["company'})@expose",{"_index":1544,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["company'})@isstring",{"_index":785,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["company'})@isstring()@expose",{"_index":982,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["company'})@isstring()@isoptional",{"_index":1765,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["compare",{"_index":1949,"title":{},"body":{"injectables/UserService.html":{}}}],["compare(pass",{"_index":1956,"title":{},"body":{"injectables/UserService.html":{}}}],["compatibility",{"_index":692,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["compatible",{"_index":708,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["completed",{"_index":1316,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["conditions",{"_index":2093,"title":{},"body":{"miscellaneous/functions.html":{}}}],["config",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":1669,"title":{},"body":{"modules/SharedModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":1679,"title":{},"body":{"modules/SharedModule.html":{}}}],["configmoduleoptions",{"_index":1672,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configs/module",{"_index":1673,"title":{},"body":{"modules/SharedModule.html":{}}}],["configservice",{"_index":119,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["configservice.get(\"jwt.publickey",{"_index":1257,"title":{},"body":{"injectables/JwtAuthStrategy.html":{}}}],["configservice.get('jwt.privatekey",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt.publickey",{"_index":516,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["configuration",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":1286,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["connect",{"_index":1125,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["console.log(\"==tags",{"_index":1749,"title":{},"body":{"injectables/TagsService.html":{}}}],["console.log(\"body",{"_index":1062,"title":{},"body":{"controllers/EventsController.html":{}}}],["console.log(\"res",{"_index":333,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["console.log(\"super",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":152,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":142,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constants/role.constant",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"guards/RolesGuard.html":{}}}],["constants/strategy.constant",{"_index":505,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["constructor",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseApiException.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(applogger",{"_index":1297,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["constructor(authservice",{"_index":1280,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(config",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(configservice",{"_index":1203,"title":{},"body":{"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["constructor(logger",{"_index":309,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AppService.html":{},"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["constructor(message",{"_index":734,"title":{},"body":{"classes/BaseApiException.html":{}}}],["constructor(private",{"_index":423,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{}}}],["constructor(reflector",{"_index":1649,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(userservice",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["contact",{"_index":775,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["contact@techinnovations.com",{"_index":934,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["contact@techinnovations.com'})@expose",{"_index":1546,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["contact@techinnovations.com'})@isemail",{"_index":916,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["contact@techinnovations.com'})@isemail()@isoptional",{"_index":1824,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["contactemail",{"_index":751,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["contains",{"_index":1111,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["context",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.decorator",{"_index":262,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["context.decorator.ts",{"_index":2035,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.dto",{"_index":264,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["context.dto.ts",{"_index":1632,"title":{},"body":{"classes/RequestContext.html":{},"coverage.html":{}}}],["context.dto.ts:11",{"_index":1637,"title":{},"body":{"classes/RequestContext.html":{}}}],["context.dto.ts:4",{"_index":1635,"title":{},"body":{"classes/RequestContext.html":{}}}],["context.dto.ts:6",{"_index":1636,"title":{},"body":{"classes/RequestContext.html":{}}}],["context.dto.ts:8",{"_index":1634,"title":{},"body":{"classes/RequestContext.html":{}}}],["context.getclass",{"_index":1659,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1658,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1306,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getresponse",{"_index":1311,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["context/req",{"_index":261,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context/request",{"_index":263,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RequestContext.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["context/util",{"_index":148,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{}}}],["context/util/index.ts",{"_index":2036,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["contextname",{"_index":386,"title":{},"body":{"injectables/AppLogger.html":{}}}],["contributed",{"_index":778,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["contributedby",{"_index":752,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["controller",{"_index":228,"title":{"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller(\"analytics",{"_index":274,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["controller(\"events",{"_index":1044,"title":{},"body":{"controllers/EventsController.html":{}}}],["controller(\"imagekit",{"_index":1183,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["controller(\"news",{"_index":1344,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller(\"opportunities",{"_index":1434,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["controller(\"organizations",{"_index":1523,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["controller(\"tags",{"_index":1704,"title":{},"body":{"controllers/TagController.html":{}}}],["controller(\"users",{"_index":1898,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('auth",{"_index":467,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":230,"title":{},"body":{"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"controllers/TagController.html":{},"modules/TagsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controllers/analytics.controller",{"_index":304,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["controllers/auth.controller",{"_index":506,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers/events.controller",{"_index":1069,"title":{},"body":{"modules/EventsModule.html":{}}}],["controllers/news.controller",{"_index":1362,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers/opportunities.controller",{"_index":1452,"title":{},"body":{"modules/OpportunityModule.html":{}}}],["controllers/organization.controller",{"_index":1539,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["controllers/tags.controller",{"_index":1738,"title":{},"body":{"modules/TagsModule.html":{}}}],["controllers/user.controller",{"_index":1924,"title":{},"body":{"modules/UserModule.html":{}}}],["cost",{"_index":753,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["count",{"_index":608,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/ImagekitApiResponse.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["country",{"_index":75,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["coverage",{"_index":1968,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":642,"title":{},"body":{"classes/BaseAclService.html":{},"classes/CreateUserInput.html":{},"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/UserAclService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["created",{"_index":870,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["createdat",{"_index":871,"title":{},"body":{"classes/CreateNewsDto.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"injectables/TagsService.html":{},"classes/UpdateNewsDto.html":{},"classes/UserOutput.html":{}}}],["createeventdto",{"_index":746,"title":{"classes/CreateEventDto.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["createlogger",{"_index":378,"title":{},"body":{"injectables/AppLogger.html":{}}}],["createnewsdto",{"_index":828,"title":{"classes/CreateNewsDto.html":{}},"body":{"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/UpdateNewsDto.html":{},"coverage.html":{}}}],["createopportunitydto",{"_index":876,"title":{"classes/CreateOpportunityDto.html":{}},"body":{"classes/CreateOpportunityDto.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/UpdateOpportunityDto.html":{},"coverage.html":{}}}],["createorganizationdto",{"_index":908,"title":{"classes/CreateOrganizationDto.html":{}},"body":{"classes/CreateOrganizationDto.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrequestcontext",{"_index":147,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrequestcontext(req",{"_index":167,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["createrequestcontext(request",{"_index":1291,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":1260,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["createsearchkey",{"_index":1098,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createsearchkey(string(filter",{"_index":1108,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["createuser",{"_index":1931,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(ctx",{"_index":1937,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserinput",{"_index":940,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creation",{"_index":193,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["credential",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{}}}],["ctx",{"_index":153,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":156,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":158,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.user",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx.user!.id",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["current",{"_index":2098,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custom",{"_index":670,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"miscellaneous/typealiases.html":{}}}],["customapiresponse",{"_index":724,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["customdecorator",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard",{"_index":239,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["dashboard')@apioperation({summary",{"_index":237,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["data",{"_index":278,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/ImagekitApiResponse.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["data'})@apiresponse({status",{"_index":240,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["database_url",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":799,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["date'})@expose",{"_index":1377,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["date'})@isoptional",{"_index":1794,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["date().toisostring",{"_index":163,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{}}}],["date.now",{"_index":1309,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["debug",{"_index":353,"title":{},"body":{"injectables/AppLogger.html":{}}}],["debug(ctx",{"_index":360,"title":{},"body":{"injectables/AppLogger.html":{}}}],["declarations",{"_index":289,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":728,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["decorators",{"_index":36,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{}}}],["decorators/role.decorator",{"_index":1655,"title":{},"body":{"guards/RolesGuard.html":{}}}],["default",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiResponse.html":{},"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterInput.html":{},"classes/TagSearchInput.html":{},"injectables/UserAclService.html":{},"miscellaneous/variables.html":{}}}],["default(\"development",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":1077,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{}}}],["defaultstrategy",{"_index":512,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":44,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{}}}],["definition",{"_index":694,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/typealiases.html":{}}}],["delete",{"_index":1021,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"miscellaneous/enumerations.html":{}}}],["delete(\"/:id",{"_index":1057,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["deleted",{"_index":874,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["deletedat",{"_index":875,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateNewsDto.html":{}}}],["deleteevent",{"_index":1012,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["deleteevent(ctx",{"_index":1019,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["deletemany",{"_index":1137,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["deletenews",{"_index":1325,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["deletenews(ctx",{"_index":1331,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["deleteopportunity",{"_index":1416,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["deleteopportunity(ctx",{"_index":1422,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["deleteorganization",{"_index":1505,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["deleteorganization(ctx",{"_index":1511,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["dependencies",{"_index":287,"title":{"dependencies.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1118,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["desc\").required",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":173,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["development",{"_index":226,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["dictionary",{"_index":698,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["direction",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":485,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["disabled",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["discuss",{"_index":1638,"title":{},"body":{"classes/RequestContext.html":{}}}],["documentation",{"_index":1969,"title":{},"body":{"coverage.html":{}}}],["draft",{"_index":827,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["dto/events.dto",{"_index":1042,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["dto/news.dto",{"_index":1342,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["dto/opportunities.dto",{"_index":1432,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["dto/organization.dto",{"_index":1521,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["dto/tags",{"_index":1702,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["dtos/admin",{"_index":269,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{}}}],["dtos/auth",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["dtos/user",{"_index":1895,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["duration",{"_index":879,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["each",{"_index":664,"title":{},"body":{"classes/BaseAclService.html":{},"classes/CreateEventDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["elments",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elsewhere",{"_index":1139,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["email",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/LocalStrategy.html":{},"classes/LoginInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":1134,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"miscellaneous/functions.html":{}}}],["endpoint",{"_index":1169,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"controllers/UserController.html":{}}}],["endpoint'})@expose",{"_index":1195,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["ensures",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2074,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":1227,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["error",{"_index":192,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["error('resource",{"_index":673,"title":{},"body":{"classes/BaseAclService.html":{}}}],["error(ctx",{"_index":363,"title":{},"body":{"injectables/AppLogger.html":{}}}],["error.message",{"_index":219,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["errorname",{"_index":171,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["eslint",{"_index":484,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["eslint/explicit",{"_index":1237,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["eslint/no",{"_index":489,"title":{},"body":{"controllers/AuthController.html":{}}}],["establish",{"_index":1234,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["event",{"_index":39,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AuthTokenApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/typealiases.html":{}}}],["event.id",{"_index":1130,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventapiresponse",{"_index":614,"title":{"classes/EventApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventarrayapiresponse",{"_index":615,"title":{"classes/EventArrayApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventcount",{"_index":100,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"injectables/AnalyticsService.html":{},"injectables/EventsService.html":{}}}],["eventgallery",{"_index":826,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{}}}],["eventresponsedto",{"_index":595,"title":{"classes/EventResponseDto.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":1010,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["events/dto/events.dto",{"_index":596,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["events/events.module",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["eventscontroller",{"_index":1008,"title":{"controllers/EventsController.html":{}},"body":{"controllers/EventsController.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["eventsmodule",{"_index":402,"title":{"modules/EventsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventssearchinput",{"_index":819,"title":{"classes/EventsSearchInput.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["eventsservice",{"_index":1040,"title":{"injectables/EventsService.html":{}},"body":{"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"coverage.html":{},"overview.html":{}}}],["eventupdate",{"_index":1131,"title":{},"body":{"injectables/EventsService.html":{}}}],["example",{"_index":40,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterOutput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["except",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exception",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiException.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["exception.constructor.name",{"_index":196,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.details",{"_index":200,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getresponse",{"_index":201,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":195,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.localizedmessage",{"_index":198,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.localizedmessage[acceptedlanguage",{"_index":199,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message",{"_index":197,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.stack",{"_index":202,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter",{"_index":1676,"title":{},"body":{"modules/SharedModule.html":{}}}],["exceptions.filter.ts",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:17",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:26",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions/base",{"_index":144,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["excludeextraneousvalues",{"_index":338,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["executioncontext",{"_index":1222,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":1965,"title":{},"body":{"injectables/UserService.html":{}}}],["expire",{"_index":1157,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["expiresin",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiry",{"_index":1159,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["explode",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":292,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["expose",{"_index":87,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenOutput.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["expose()@apiproperty",{"_index":104,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenOutput.html":{},"classes/RegisterOutput.html":{},"classes/UserOutput.html":{}}}],["expose()@apiproperty({example",{"_index":1627,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["express",{"_index":140,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["extends",{"_index":71,"title":{},"body":{"classes/AddTagDto.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/PrismaService.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"injectables/UserAclService.html":{}}}],["extractjwt",{"_index":1250,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1255,"title":{},"body":{"injectables/JwtAuthStrategy.html":{}}}],["extractjwt.frombodyfield('refreshtoken",{"_index":1274,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["false",{"_index":41,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseAclService.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/variables.html":{}}}],["false})@expose",{"_index":984,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OrganizationResponseDto.html":{}}}],["false})@isoptional",{"_index":803,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["false})@isoptional()@expose",{"_index":1000,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["false})@isoptional()@isboolean",{"_index":43,"title":{},"body":{"classes/AddTagDto.html":{}}}],["false})@isoptional()@isemail",{"_index":776,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["false})@isoptional()@isemail()@expose",{"_index":976,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["false})@isoptional()@isstring",{"_index":781,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["false})@isoptional()@isstring()@expose",{"_index":980,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["false})@isstring()@expose",{"_index":997,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["false})@isstring()@isoptional",{"_index":769,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["false})@isstring()@isoptional()@expose",{"_index":972,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["falsy",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fellows",{"_index":899,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":1106,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["filter.filter",{"_index":1095,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["filter.filter.ts",{"_index":2022,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filters/all",{"_index":1675,"title":{},"body":{"modules/SharedModule.html":{}}}],["find",{"_index":659,"title":{},"body":{"classes/BaseAclService.html":{}}}],["findbyid",{"_index":1932,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(ctx",{"_index":1939,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusername",{"_index":1933,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusername(ctx",{"_index":1941,"title":{},"body":{"injectables/UserService.html":{}}}],["folder",{"_index":1171,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{}}}],["folder'})@expose",{"_index":1197,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["foractor",{"_index":635,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["format",{"_index":754,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["format'})@isstring",{"_index":890,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["forwarded",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarded_for_token_header",{"_index":2007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":1122,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/UserService.html":{}}}],["full",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullname",{"_index":624,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/variables.html":{}}}],["fulltextoperatormap",{"_index":2038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fulltextoperatormap[operator",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":696,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["function).name",{"_index":718,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["functions",{"_index":2080,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gallery",{"_index":755,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["galleryinput",{"_index":789,"title":{"classes/GalleryInput.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["galleryresponse",{"_index":817,"title":{"classes/GalleryResponse.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["gender",{"_index":627,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/variables.html":{}}}],["generation",{"_index":713,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["generic",{"_index":704,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["generics",{"_index":711,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["get(\"/:id",{"_index":1053,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["get(\"/:type",{"_index":1709,"title":{},"body":{"controllers/TagController.html":{}}}],["get(\"/admin",{"_index":276,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["get(\":id",{"_index":1912,"title":{},"body":{"controllers/UserController.html":{}}}],["get(\"me",{"_index":1900,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin",{"_index":236,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["getadminanalytics",{"_index":234,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["getadminanalytics(ctx",{"_index":235,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["getadmindashboardanalytics",{"_index":308,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["getadmindashboardanalytics(ctx",{"_index":312,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["getauthparamas",{"_index":1174,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["getauthparamas(ctx",{"_index":1175,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["getauthparams",{"_index":1202,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["getauthparams(ctx",{"_index":1205,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["getauthtoken",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthtoken(ctx",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["getevents",{"_index":1013,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["getevents(ctx",{"_index":1024,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["gethello",{"_index":341,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello(@reqcontext",{"_index":347,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello(ctx",{"_index":342,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmyprofile",{"_index":1872,"title":{},"body":{"controllers/UserController.html":{}}}],["getmyprofile(ctx",{"_index":1876,"title":{},"body":{"controllers/UserController.html":{}}}],["getnews",{"_index":1326,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["getnews(ctx",{"_index":1334,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["getoneevent",{"_index":1014,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["getoneevent(ctx",{"_index":1028,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["getonenews",{"_index":1327,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["getonenews(ctx",{"_index":1336,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["getoneopportunity",{"_index":1417,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["getoneopportunity(ctx",{"_index":1424,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["getoneorganization",{"_index":1506,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["getoneorganization(ctx",{"_index":1513,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["getopportunities",{"_index":1418,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["getopportunities(ctx",{"_index":1426,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["getorganizations",{"_index":1564,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getorganizations(ctx",{"_index":1570,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getorgs",{"_index":1507,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["getorgs(ctx",{"_index":1515,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["getschemapath",{"_index":688,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["getschemapath(type[0",{"_index":727,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["gettags",{"_index":1689,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["gettags(ctx",{"_index":1694,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["gettagsbytype",{"_index":1740,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettagsbytype(ctx",{"_index":1744,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettagstype",{"_index":1690,"title":{},"body":{"controllers/TagController.html":{}}}],["gettagstype(ctx",{"_index":1696,"title":{},"body":{"controllers/TagController.html":{}}}],["getting",{"_index":2103,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1873,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(ctx",{"_index":1879,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid",{"_index":1934,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(ctx",{"_index":1943,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":1874,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getusers(ctx",{"_index":1882,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["given",{"_index":660,"title":{},"body":{"classes/BaseAclService.html":{}}}],["green",{"_index":898,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["guard",{"_index":1645,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1647,"title":{},"body":{"guards/RolesGuard.html":{}}}],["guards/jwt",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":462,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":1220,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["handlerequest(err",{"_index":1225,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["hasactionpermission",{"_index":667,"title":{},"body":{"classes/BaseAclService.html":{}}}],["hasedpw",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hash",{"_index":1950,"title":{},"body":{"injectables/UserService.html":{}}}],["hash(input.password",{"_index":1967,"title":{},"body":{"injectables/UserService.html":{}}}],["hash(pass",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":179,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hello",{"_index":348,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["here",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["himself",{"_index":1859,"title":{},"body":{"injectables/UserAclService.html":{}}}],["host",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":154,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":245,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":472,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiException.html":{}}}],["https://cloud.google.com/apis/design/errors",{"_index":214,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://example.com/news",{"_index":834,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["https://example.com/org",{"_index":772,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["httpstatus",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["httpstatus.created",{"_index":479,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpstatus.internal_server_error",{"_index":208,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.not_found",{"_index":1913,"title":{},"body":{"controllers/UserController.html":{}}}],["httpstatus.ok",{"_index":280,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["httpstatus.unauthorized",{"_index":471,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["iamges",{"_index":790,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["iapplyfiltersinput",{"_index":2024,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iapplyfiltersoutput",{"_index":2025,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iavailablefilters",{"_index":2026,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iavailablefiltersinput",{"_index":2027,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iavailablefiltersoutput",{"_index":2028,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":12,"title":{},"body":{"interfaces/Actor.html":{},"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["id'})@isstring",{"_index":1145,"title":{},"body":{"classes/GalleryInput.html":{}}}],["id.middleware.ts",{"_index":2033,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["id/request",{"_index":2032,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["idefaultfilters",{"_index":2029,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":1970,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":808,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["ikauthparams",{"_index":1167,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{}}}],["ikconfig",{"_index":1188,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["image",{"_index":768,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["imagekit",{"_index":621,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"dependencies.html":{}}}],["imagekit.controller",{"_index":1194,"title":{},"body":{"modules/ImagekitModule.html":{}}}],["imagekit.dto",{"_index":1179,"title":{},"body":{"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{}}}],["imagekit.service",{"_index":1181,"title":{},"body":{"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{}}}],["imagekit/imagekit.dto",{"_index":602,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["imagekit/imagekit.module",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["imagekit_endpoint",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagekit_pub_key",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagekit_pvt_key",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagekitapiresponse",{"_index":622,"title":{"classes/ImagekitApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imagekitauthparams",{"_index":1155,"title":{"classes/ImagekitAuthParams.html":{}},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"coverage.html":{}}}],["imagekitcontroller",{"_index":1172,"title":{"controllers/ImagekitController.html":{}},"body":{"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"coverage.html":{}}}],["imagekitmodule",{"_index":403,"title":{"modules/ImagekitModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagekitModule.html":{},"modules.html":{},"overview.html":{}}}],["imagekitresponsedto",{"_index":601,"title":{"classes/ImagekitResponseDto.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imagekitservice",{"_index":1180,"title":{"injectables/ImagekitService.html":{}},"body":{"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"injectables/ImagekitService.html":{},"coverage.html":{},"overview.html":{}}}],["implements",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":302,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{}}}],["inc",{"_index":933,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["inc.'})@expose",{"_index":1552,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["inc.'})@isstring",{"_index":923,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["inc.'})@isstring()@isoptional",{"_index":1830,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["include",{"_index":1114,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["incoming",{"_index":2090,"title":{},"body":{"miscellaneous/functions.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1756,"title":{},"body":{"interfaces/TypeMapping.html":{}}}],["indicates",{"_index":38,"title":{},"body":{"classes/AddTagDto.html":{},"classes/TagSearchInput.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{}}}],["inherited",{"_index":1080,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{},"injectables/UserAclService.html":{}}}],["inject",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":305,"title":{"injectables/AnalyticsService.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AnalyticsService.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":306,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["innovations",{"_index":820,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["innovations'})@isstring",{"_index":810,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["innovations'})@isstring()@expose",{"_index":1005,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["innovations'})@isstring()@isoptional",{"_index":1783,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["input",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["input.dto",{"_index":268,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["input.dto.ts",{"_index":27,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateUserInput.html":{},"classes/LoginInput.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterInput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["input.dto.ts:14",{"_index":1320,"title":{},"body":{"classes/LoginInput.html":{}}}],["input.dto.ts:16",{"_index":1732,"title":{},"body":{"classes/TagSearchInput.html":{},"classes/UpdateUserInput.html":{}}}],["input.dto.ts:17",{"_index":1615,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:21",{"_index":1731,"title":{},"body":{"classes/TagSearchInput.html":{}}}],["input.dto.ts:22",{"_index":1620,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:23",{"_index":949,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["input.dto.ts:26",{"_index":1730,"title":{},"body":{"classes/TagSearchInput.html":{}}}],["input.dto.ts:28",{"_index":1617,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:29",{"_index":957,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["input.dto.ts:31",{"_index":1728,"title":{},"body":{"classes/TagSearchInput.html":{}}}],["input.dto.ts:34",{"_index":1612,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:35",{"_index":952,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["input.dto.ts:36",{"_index":1729,"title":{},"body":{"classes/TagSearchInput.html":{}}}],["input.dto.ts:37",{"_index":1618,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:38",{"_index":1613,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:41",{"_index":954,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/TagSearchInput.html":{}}}],["input.dto.ts:47",{"_index":946,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["input.dto.ts:51",{"_index":58,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateUserInput.html":{}}}],["input.dto.ts:60",{"_index":54,"title":{},"body":{"classes/AddTagDto.html":{}}}],["input.dto.ts:69",{"_index":51,"title":{},"body":{"classes/AddTagDto.html":{}}}],["input.dto.ts:7",{"_index":1609,"title":{},"body":{"classes/RefreshTokenInput.html":{}}}],["input.dto.ts:78",{"_index":45,"title":{},"body":{"classes/AddTagDto.html":{}}}],["input.dto.ts:87",{"_index":47,"title":{},"body":{"classes/AddTagDto.html":{}}}],["input.dto.ts:9",{"_index":1318,"title":{},"body":{"classes/LoginInput.html":{}}}],["input.dto.ts:96",{"_index":49,"title":{},"body":{"classes/AddTagDto.html":{}}}],["input.isaccountdisabled",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["input.password",{"_index":1966,"title":{},"body":{"injectables/UserService.html":{}}}],["input.replace(/[^a",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input.roles",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["insensitive",{"_index":1110,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["instanceof",{"_index":194,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["intercept",{"_index":1296,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":1299,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptors/logging.interceptor",{"_index":1677,"title":{},"body":{"modules/SharedModule.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Actor.html":{},"interfaces/TypeMapping.html":{}},"body":{"interfaces/Actor.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Actor.html":{},"interfaces/TypeMapping.html":{},"overview.html":{}}}],["internal",{"_index":203,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["internalexception",{"_index":209,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["invalid",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["ip",{"_index":1633,"title":{},"body":{"classes/RequestContext.html":{}}}],["isaccountdisabled",{"_index":942,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{}}}],["isaccountverified",{"_index":626,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/variables.html":{}}}],["isalphanumeric",{"_index":959,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isarray",{"_index":813,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["isboolean",{"_index":62,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["isboolean()@expose",{"_index":1722,"title":{},"body":{"classes/TagOutputDto.html":{}}}],["isdate",{"_index":857,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateNewsDto.html":{}}}],["isdate()@expose",{"_index":1717,"title":{},"body":{"classes/TagOutputDto.html":{}}}],["isdatestring",{"_index":858,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["isdraft",{"_index":824,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["isemail",{"_index":814,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/LoginInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["isenum",{"_index":960,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isenum(role",{"_index":965,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["iseventtag",{"_index":29,"title":{},"body":{"classes/AddTagDto.html":{},"injectables/EventsService.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{}}}],["isnewstag",{"_index":30,"title":{},"body":{"classes/AddTagDto.html":{},"injectables/NewsService.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{}}}],["isnotempty",{"_index":961,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginInput.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["isnotempty()@apiproperty",{"_index":1608,"title":{},"body":{"classes/RefreshTokenInput.html":{}}}],["isnotempty()@apiproperty()@isemail()@maxlength(200",{"_index":1317,"title":{},"body":{"classes/LoginInput.html":{}}}],["isnotempty()@apiproperty()@isstring",{"_index":1319,"title":{},"body":{"classes/LoginInput.html":{}}}],["isnumber",{"_index":1597,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["isopportunitytag",{"_index":31,"title":{},"body":{"classes/AddTagDto.html":{},"injectables/OpportunityService.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{}}}],["isoptional",{"_index":63,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{}}}],["isoptional()@isdate()@expose",{"_index":1719,"title":{},"body":{"classes/TagOutputDto.html":{}}}],["isorganizationtag",{"_index":32,"title":{},"body":{"classes/AddTagDto.html":{},"injectables/OrganizationService.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{}}}],["ispromood",{"_index":224,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["isstring",{"_index":64,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterInput.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{}}}],["isstring()@expose",{"_index":1721,"title":{},"body":{"classes/TagOutputDto.html":{}}}],["issuperadmin",{"_index":625,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/variables.html":{}}}],["isurl",{"_index":859,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["isuseritself",{"_index":1846,"title":{},"body":{"injectables/UserAclService.html":{}}}],["isuseritself(resource",{"_index":1848,"title":{},"body":{"injectables/UserAclService.html":{}}}],["isusertag",{"_index":33,"title":{},"body":{"classes/AddTagDto.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{}}}],["item",{"_index":1332,"title":{},"body":{"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["item.id",{"_index":1494,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["items",{"_index":725,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"interfaces/TypeMapping.html":{}}}],["ja",{"_index":183,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["joi",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["joi.number().required",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid(\"asc",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(json.stringify(socials",{"_index":1127,"title":{},"body":{"injectables/EventsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["jwt",{"_index":1252,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_access_token_exp_in_sec",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_private_key_base64",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_public_key_base64",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_refresh_token_exp_in_sec",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":1038,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtauthstrategy",{"_index":497,"title":{"injectables/JwtAuthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"modules/EventsModule.html":{},"injectables/JwtAuthStrategy.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":1254,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["jwtmodule",{"_index":501,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":513,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":458,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["jwtrefreshstrategy",{"_index":498,"title":{"injectables/JwtRefreshStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":315,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{}}}],["keeping",{"_index":690,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["key",{"_index":702,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":1621,"title":{},"body":{"classes/RegisterInput.html":{}}}],["kumar",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["language",{"_index":177,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["later",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["leading",{"_index":783,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["legend",{"_index":288,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":962,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["length(6",{"_index":964,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["level",{"_index":2095,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limit",{"_index":1070,"title":{},"body":{"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["line",{"_index":487,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["link",{"_index":801,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{}}}],["list",{"_index":1883,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["literal",{"_index":2124,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":1284,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["localauthguard",{"_index":461,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localized",{"_index":181,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["localizedmessage",{"_index":184,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["localstrategy",{"_index":499,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":756,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["location'})@isstring",{"_index":794,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{}}}],["location'})@isstring()@expose",{"_index":992,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["location'})@isstring()@isoptional",{"_index":1772,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["locationtype",{"_index":757,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["log",{"_index":354,"title":{},"body":{"injectables/AppLogger.html":{}}}],["log(ctx",{"_index":365,"title":{},"body":{"injectables/AppLogger.html":{}}}],["logger",{"_index":120,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logger.service",{"_index":396,"title":{},"body":{"modules/AppLoggerModule.html":{}}}],["logger/logger.module",{"_index":1678,"title":{},"body":{"modules/SharedModule.html":{}}}],["logger/logger.service",{"_index":146,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["logging",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["logginginterceptor",{"_index":1294,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["logic",{"_index":1231,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["login",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginInput.html":{},"coverage.html":{}}}],["login(ctx",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logininput",{"_index":434,"title":{"classes/LoginInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginInput.html":{},"coverage.html":{}}}],["logo",{"_index":919,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["logo.jpg",{"_index":936,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["logo.jpg'})@expose",{"_index":1550,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["logo.jpg'})@isstring",{"_index":921,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["logo.jpg'})@isstring()@isoptional",{"_index":1828,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["logoimageid",{"_index":910,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["logoimageurl",{"_index":911,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["made",{"_index":1910,"title":{},"body":{"controllers/UserController.html":{}}}],["make",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["male",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manage",{"_index":2078,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["management",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapping",{"_index":697,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["maps",{"_index":699,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["match",{"_index":205,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/UserService.html":{}}}],["matching",{"_index":22,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":963,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["maxlength(100",{"_index":966,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["maxlength(200",{"_index":1321,"title":{},"body":{"classes/LoginInput.html":{},"classes/RegisterInput.html":{}}}],["maybe",{"_index":1138,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["merges",{"_index":2091,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mergewithand",{"_index":2023,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mergewithand(current",{"_index":2089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mergewithand(wherebuilder",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":172,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["meta",{"_index":216,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"controllers/EventsController.html":{},"classes/ImagekitApiResponse.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":604,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"dependencies.html":{}}}],["method",{"_index":1261,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{}}}],["methods",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["min",{"_index":1598,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["min(0",{"_index":1599,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["miscellaneous",{"_index":2073,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1959,"title":{},"body":{"injectables/UserService.html":{}}}],["mode",{"_index":223,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateNewsDto.html":{},"injectables/EventsService.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"classes/UpdateNewsDto.html":{}}}],["module",{"_index":284,"title":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["module/prisma.service",{"_index":323,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"modules/SharedModule.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["module/prisma.service.ts",{"_index":1603,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["module/prisma.service.ts:6",{"_index":1606,"title":{},"body":{"injectables/PrismaService.html":{}}}],["modules",{"_index":286,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["move",{"_index":1641,"title":{},"body":{"classes/RequestContext.html":{}}}],["mukesh",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mukezhz@gmail.com",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":55,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":700,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["nch",{"_index":2105,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["nchadmin@mailinator.com",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":2100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestinterceptor",{"_index":1302,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":136,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"controllers/TagController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":137,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1653,"title":{},"body":{"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":316,"title":{},"body":{"injectables/AnalyticsService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":503,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":61,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"dependencies.html":{}}}],["new",{"_index":162,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/CreateNewsDto.html":{},"injectables/EventsService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"classes/UpdateNewsDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newref",{"_index":2087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["news",{"_index":46,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateNewsDto.html":{},"miscellaneous/typealiases.html":{}}}],["news.id",{"_index":1405,"title":{},"body":{"injectables/NewsService.html":{}}}],["news/news.module",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["newscontroller",{"_index":1322,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":101,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"injectables/AnalyticsService.html":{},"injectables/NewsService.html":{}}}],["newslink",{"_index":830,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["newsmodule",{"_index":404,"title":{"modules/NewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{}}}],["newsresponsedto",{"_index":868,"title":{"classes/NewsResponseDto.html":{}},"body":{"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/UpdateNewsDto.html":{},"coverage.html":{}}}],["newssearchinput",{"_index":860,"title":{"classes/NewsSearchInput.html":{}},"body":{"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/UpdateNewsDto.html":{},"coverage.html":{}}}],["newsservice",{"_index":1340,"title":{"injectables/NewsService.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"coverage.html":{},"overview.html":{}}}],["next",{"_index":486,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["next.handle().pipe",{"_index":1310,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["non",{"_index":703,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["normal",{"_index":1911,"title":{},"body":{"controllers/UserController.html":{}}}],["notacceptableexception(\"invalid",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notacceptableexception(error.message",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":210,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/UserController.html":{}}}],["notfoundexception",{"_index":1091,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["notfoundexception(\"event",{"_index":1121,"title":{},"body":{"injectables/EventsService.html":{}}}],["notfoundexception(\"news",{"_index":1401,"title":{},"body":{"injectables/NewsService.html":{}}}],["notfoundexception(\"opportunity",{"_index":1489,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["notfoundexception(\"organization",{"_index":1582,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["now",{"_index":1308,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["null",{"_index":366,"title":{},"body":{"injectables/AppLogger.html":{},"classes/AuthTokenOutput.html":{},"injectables/JwtAuthStrategy.html":{},"classes/RequestContext.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":106,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["number})@isnumber()@isoptional()@min(0)@transform",{"_index":1078,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{}}}],["obj",{"_index":2088,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":607,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(customapiresponse",{"_index":729,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["object.entries(appliedfiltersinput",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":1224,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LoggingInterceptor.html":{}}}],["offset",{"_index":1071,"title":{},"body":{"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["oldref",{"_index":2086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["one",{"_index":1022,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["online",{"_index":863,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["online'})@isstring",{"_index":839,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["online'})@isstring()@expose",{"_index":1373,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["online'})@isstring()@isoptional",{"_index":1790,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["onmoduleinit",{"_index":1605,"title":{},"body":{"injectables/PrismaService.html":{}}}],["op",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openapi",{"_index":707,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["operator",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operators",{"_index":2039,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["opportunities",{"_index":1414,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["opportunity",{"_index":48,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AuthTokenApiResponse.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/typealiases.html":{}}}],["opportunity/dto/opportunities.dto",{"_index":600,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["opportunity/opportunities.module",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["opportunityapiresponse",{"_index":618,"title":{"classes/OpportunityApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opportunityarrayapiresponse",{"_index":619,"title":{"classes/OpportunityArrayApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opportunitycontroller",{"_index":1412,"title":{"controllers/OpportunityController.html":{}},"body":{"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"coverage.html":{}}}],["opportunitycount",{"_index":102,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"injectables/AnalyticsService.html":{}}}],["opportunitygallery",{"_index":907,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["opportunitymodule",{"_index":405,"title":{"modules/OpportunityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OpportunityModule.html":{},"modules.html":{},"overview.html":{}}}],["opportunityresponsedto",{"_index":599,"title":{"classes/OpportunityResponseDto.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opportunitysearchinput",{"_index":903,"title":{"classes/OpportunitySearchInput.html":{}},"body":{"classes/CreateOpportunityDto.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/UpdateOpportunityDto.html":{},"coverage.html":{}}}],["opportunityservice",{"_index":1430,"title":{"injectables/OpportunityService.html":{}},"body":{"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"injectables/OpportunityService.html":{},"coverage.html":{},"overview.html":{}}}],["option",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiException.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":1674,"title":{},"body":{"modules/SharedModule.html":{}}}],["options.ts",{"_index":2005,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderby",{"_index":1117,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["org",{"_index":1589,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["org.id",{"_index":1591,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization",{"_index":50,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AuthTokenApiResponse.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/typealiases.html":{}}}],["organization.id",{"_index":1588,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization/dto/organization.dto",{"_index":598,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["organization/organization.module",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["organizationapiresponse",{"_index":616,"title":{"classes/OrganizationApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationarrayapiresponse",{"_index":617,"title":{"classes/OrganizationArrayApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationcontroller",{"_index":1501,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationcount",{"_index":1577,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organizationgallery",{"_index":939,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{}}}],["organizationmodule",{"_index":406,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationresponsedto",{"_index":597,"title":{"classes/OrganizationResponseDto.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizations",{"_index":1503,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["organizationsearchinput",{"_index":932,"title":{"classes/OrganizationSearchInput.html":{}},"body":{"classes/CreateOrganizationDto.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["organizationservice",{"_index":1519,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"overview.html":{}}}],["organizer",{"_index":758,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["organizer'})@isstring",{"_index":797,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{}}}],["organizer'})@isstring()@expose",{"_index":995,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["organizer'})@isstring()@isoptional",{"_index":1775,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["orgwherequery",{"_index":1575,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["original",{"_index":221,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["otherwise",{"_index":2099,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":300,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["output.dto",{"_index":270,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["output.dto.ts",{"_index":99,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenOutput.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{}}}],["output.dto.ts:11",{"_index":109,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenOutput.html":{},"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:13",{"_index":1626,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["output.dto.ts:15",{"_index":105,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:16",{"_index":1840,"title":{},"body":{"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:17",{"_index":1630,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["output.dto.ts:19",{"_index":108,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/TagOutputDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:21",{"_index":1628,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["output.dto.ts:22",{"_index":1839,"title":{},"body":{"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:23",{"_index":1723,"title":{},"body":{"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:25",{"_index":1623,"title":{},"body":{"classes/RegisterOutput.html":{},"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:27",{"_index":1724,"title":{},"body":{"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:28",{"_index":1841,"title":{},"body":{"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:29",{"_index":1625,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["output.dto.ts:31",{"_index":1725,"title":{},"body":{"classes/TagOutputDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:33",{"_index":1622,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["output.dto.ts:34",{"_index":1842,"title":{},"body":{"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:35",{"_index":1718,"title":{},"body":{"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:37",{"_index":1629,"title":{},"body":{"classes/RegisterOutput.html":{},"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:39",{"_index":1726,"title":{},"body":{"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:41",{"_index":1929,"title":{},"body":{"classes/UserRefreshTokenClaims.html":{}}}],["output.dto.ts:43",{"_index":1928,"title":{},"body":{"classes/UserOutput.html":{}}}],["output.dto.ts:44",{"_index":1720,"title":{},"body":{"classes/TagOutputDto.html":{}}}],["output.dto.ts:7",{"_index":107,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenOutput.html":{},"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:9",{"_index":1624,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["overview",{"_index":2111,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrites",{"_index":2097,"title":{},"body":{"miscellaneous/functions.html":{}}}],["package",{"_index":2044,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginationparamsdto",{"_index":66,"title":{"classes/PaginationParamsDto.html":{}},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["paginationparamsdto:14",{"_index":1081,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{}}}],["paginationparamsdto:24",{"_index":1083,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{}}}],["param",{"_index":1035,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["param(\"id",{"_index":1054,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/UserController.html":{}}}],["param(\"type",{"_index":1710,"title":{},"body":{"controllers/TagController.html":{}}}],["parameter",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiException.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1185,"title":{},"body":{"controllers/ImagekitController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["params'})@apiresponse({status",{"_index":1177,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["params.decorator.ts",{"_index":2018,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["params.dto",{"_index":68,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"controllers/UserController.html":{}}}],["params.dto.ts",{"_index":1593,"title":{},"body":{"classes/PaginationParamsDto.html":{},"coverage.html":{}}}],["params.dto.ts:14",{"_index":1594,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["params.dto.ts:24",{"_index":1595,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["params.join",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parent",{"_index":738,"title":{},"body":{"classes/BaseApiException.html":{}}}],["parseint(value",{"_index":1600,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["pass",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":1251,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":502,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":511,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1244,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1279,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":1285,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":943,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/LocalStrategy.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passwordfield",{"_index":1289,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":1036,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["patch(\"/:id",{"_index":1060,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["patch(\":id",{"_index":1916,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":1890,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":159,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["payload",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["payload.sub",{"_index":1265,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["perfoming",{"_index":8,"title":{},"body":{"interfaces/Actor.html":{}}}],["perform",{"_index":645,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["permission",{"_index":665,"title":{},"body":{"classes/BaseAclService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionactions",{"_index":2011,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodule",{"_index":2012,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissions",{"_index":2010,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["phone",{"_index":925,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["phonecountrycode",{"_index":628,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["phonenumber",{"_index":629,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["plaintoclass",{"_index":317,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["plaintoclass(authtokenoutput",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["plaintoclass(eventresponsedto",{"_index":1128,"title":{},"body":{"injectables/EventsService.html":{}}}],["plaintoclass(newsresponsedto",{"_index":1403,"title":{},"body":{"injectables/NewsService.html":{}}}],["plaintoclass(opportunityresponsedto",{"_index":1492,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["plaintoclass(organizationresponsedto",{"_index":1585,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["plaintoclass(registeroutput",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["plaintoclass(tagoutputdto",{"_index":1755,"title":{},"body":{"injectables/TagsService.html":{}}}],["plaintoclass(useroutput",{"_index":1960,"title":{},"body":{"injectables/UserService.html":{}}}],["plaintoinstance",{"_index":1092,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["plaintoinstance(eventresponsedto",{"_index":1119,"title":{},"body":{"injectables/EventsService.html":{}}}],["plaintoinstance(newsresponsedto",{"_index":1399,"title":{},"body":{"injectables/NewsService.html":{}}}],["plaintoinstance(opportunityresponsedto",{"_index":1487,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["plaintoinstance(organizationresponsedto",{"_index":1579,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["plaintoinstance(tagoutputdto",{"_index":1752,"title":{},"body":{"injectables/TagsService.html":{}}}],["please",{"_index":212,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["portal",{"_index":862,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["portal'})@isstring",{"_index":852,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["portal'})@isstring()@expose",{"_index":1381,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["portal'})@isstring()@isoptional",{"_index":1798,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["post",{"_index":246,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{}}}],["post('login",{"_index":469,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apioperation({summary",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":478,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apioperation({summary",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{}}}],["postcode",{"_index":76,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{}}}],["prefix",{"_index":232,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["prevent",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma",{"_index":1096,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"modules/SharedModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma.user.createmany",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":1097,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":1604,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismaservice",{"_index":310,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AnalyticsService.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"modules/SharedModule.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":149,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["privatekey",{"_index":517,"title":{},"body":{"modules/AuthModule.html":{},"injectables/ImagekitService.html":{}}}],["prod",{"_index":222,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["production",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":904,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["program'})@isstring",{"_index":900,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["promise",{"_index":242,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":328,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["proper",{"_index":706,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"injectables/AppLogger.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"properties.html":{}}}],["property",{"_index":693,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":633,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["provide",{"_index":1680,"title":{},"body":{"modules/SharedModule.html":{}}}],["providers",{"_index":291,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["pub",{"_index":1168,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["public",{"_index":355,"title":{},"body":{"injectables/AppLogger.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["publickey",{"_index":515,"title":{},"body":{"modules/AuthModule.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{}}}],["publicurl",{"_index":1141,"title":{},"body":{"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{}}}],["published",{"_index":843,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["publisheddate",{"_index":831,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["publishedyear",{"_index":832,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["query",{"_index":1025,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["query.limit",{"_index":1907,"title":{},"body":{"controllers/UserController.html":{}}}],["query.offset",{"_index":1908,"title":{},"body":{"controllers/UserController.html":{}}}],["read",{"_index":1858,"title":{},"body":{"injectables/UserAclService.html":{},"miscellaneous/enumerations.html":{}}}],["readonly",{"_index":150,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["record",{"_index":174,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/functions.html":{}}}],["records",{"_index":1135,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["ref",{"_index":726,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["refactor",{"_index":185,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["reference",{"_index":211,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["reflect",{"_index":2065,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1650,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{},"classes/RefreshTokenInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresh.guard",{"_index":460,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh.guard.ts",{"_index":1266,"title":{},"body":{"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["refresh.guard.ts:13",{"_index":1268,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["refresh.guard.ts:22",{"_index":1269,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["refresh.strategy",{"_index":509,"title":{},"body":{"modules/AuthModule.html":{}}}],["refresh.strategy.ts",{"_index":1271,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"coverage.html":{}}}],["refresh.strategy.ts:13",{"_index":1272,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh.strategy.ts:23",{"_index":1273,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refreshtoken",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/RefreshTokenInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["refreshtoken(ctx",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtokeninput",{"_index":442,"title":{"classes/RefreshTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/RefreshTokenInput.html":{},"coverage.html":{}}}],["register",{"_index":267,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{}}}],["register(ctx",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerapiresponse",{"_index":620,"title":{"classes/RegisterApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registereduser",{"_index":481,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerinput",{"_index":265,"title":{"classes/RegisterInput.html":{}},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterInput.html":{},"coverage.html":{}}}],["registerlocal",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerlocal(ctx",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeroutput",{"_index":456,"title":{"classes/RegisterOutput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registration",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{}}}],["registrationdeadline",{"_index":759,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["registrationlink",{"_index":760,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["remove",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req",{"_index":155,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["req.header(request_id_token_header",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers[request_id_token_header",{"_index":165,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["req.query.sort",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url",{"_index":160,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["req.user",{"_index":1263,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["reqcontext",{"_index":259,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":138,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":1307,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request_id_token_header",{"_index":141,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requestcontext",{"_index":166,"title":{"classes/RequestContext.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RequestContext.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["requestid",{"_index":164,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/RequestContext.html":{},"interfaces/TypeMapping.html":{}}}],["requestidmiddleware",{"_index":2034,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["requestidtoken",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":42,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseAclService.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/variables.html":{}}}],["requiredroles",{"_index":1656,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1660,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":157,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"miscellaneous/variables.html":{}}}],["res)[0",{"_index":334,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["res)[1",{"_index":335,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["res)[2",{"_index":336,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["res)[3",{"_index":337,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["res.set(request_id_token_header",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.status(statuscode).json",{"_index":227,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["resdata",{"_index":1314,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["reset",{"_index":299,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resource",{"_index":656,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["resource.id",{"_index":1864,"title":{},"body":{"injectables/UserAclService.html":{}}}],["response",{"_index":139,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"injectables/LoggingInterceptor.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":257,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["response.dto.ts",{"_index":677,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["response.dto.ts:115",{"_index":686,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:118",{"_index":683,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:121",{"_index":682,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:124",{"_index":680,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:127",{"_index":679,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:130",{"_index":684,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:133",{"_index":685,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:136",{"_index":687,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:141",{"_index":731,"title":{},"body":{"classes/BaseApiErrorResponse.html":{}}}],["response.dto.ts:33",{"_index":744,"title":{},"body":{"classes/BaseApiResponse.html":{}}}],["response.dto.ts:36",{"_index":745,"title":{},"body":{"classes/BaseApiResponse.html":{}}}],["response.dto.ts:49",{"_index":1757,"title":{},"body":{"interfaces/TypeMapping.html":{}}}],["response.statuscode",{"_index":1312,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["responsemetadata",{"_index":591,"title":{"classes/ResponseMetadata.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{}}}],["responses",{"_index":606,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["responses.dto",{"_index":689,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["responses.dto.ts",{"_index":589,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{}}}],["responses.dto.ts:102",{"_index":1411,"title":{},"body":{"classes/OpportunityArrayApiResponse.html":{}}}],["responses.dto.ts:108",{"_index":590,"title":{},"body":{"classes/AuthTokenApiResponse.html":{}}}],["responses.dto.ts:111",{"_index":592,"title":{},"body":{"classes/AuthTokenApiResponse.html":{}}}],["responses.dto.ts:116",{"_index":1610,"title":{},"body":{"classes/RegisterApiResponse.html":{}}}],["responses.dto.ts:119",{"_index":1611,"title":{},"body":{"classes/RegisterApiResponse.html":{}}}],["responses.dto.ts:125",{"_index":1153,"title":{},"body":{"classes/ImagekitApiResponse.html":{}}}],["responses.dto.ts:128",{"_index":1154,"title":{},"body":{"classes/ImagekitApiResponse.html":{}}}],["responses.dto.ts:14",{"_index":1644,"title":{},"body":{"classes/ResponseMetadata.html":{}}}],["responses.dto.ts:17",{"_index":1643,"title":{},"body":{"classes/ResponseMetadata.html":{}}}],["responses.dto.ts:23",{"_index":1866,"title":{},"body":{"classes/UserApiResponse.html":{}}}],["responses.dto.ts:26",{"_index":1867,"title":{},"body":{"classes/UserApiResponse.html":{}}}],["responses.dto.ts:31",{"_index":1868,"title":{},"body":{"classes/UserArrayApiResponse.html":{}}}],["responses.dto.ts:34",{"_index":1869,"title":{},"body":{"classes/UserArrayApiResponse.html":{}}}],["responses.dto.ts:40",{"_index":1682,"title":{},"body":{"classes/TagApiResponse.html":{}}}],["responses.dto.ts:43",{"_index":1683,"title":{},"body":{"classes/TagApiResponse.html":{}}}],["responses.dto.ts:48",{"_index":1684,"title":{},"body":{"classes/TagArrayApiResponse.html":{}}}],["responses.dto.ts:51",{"_index":1685,"title":{},"body":{"classes/TagArrayApiResponse.html":{}}}],["responses.dto.ts:57",{"_index":967,"title":{},"body":{"classes/EventApiResponse.html":{}}}],["responses.dto.ts:60",{"_index":968,"title":{},"body":{"classes/EventApiResponse.html":{}}}],["responses.dto.ts:65",{"_index":969,"title":{},"body":{"classes/EventArrayApiResponse.html":{}}}],["responses.dto.ts:68",{"_index":970,"title":{},"body":{"classes/EventArrayApiResponse.html":{}}}],["responses.dto.ts:74",{"_index":1497,"title":{},"body":{"classes/OrganizationApiResponse.html":{}}}],["responses.dto.ts:77",{"_index":1498,"title":{},"body":{"classes/OrganizationApiResponse.html":{}}}],["responses.dto.ts:82",{"_index":1499,"title":{},"body":{"classes/OrganizationArrayApiResponse.html":{}}}],["responses.dto.ts:85",{"_index":1500,"title":{},"body":{"classes/OrganizationArrayApiResponse.html":{}}}],["responses.dto.ts:91",{"_index":1408,"title":{},"body":{"classes/OpportunityApiResponse.html":{}}}],["responses.dto.ts:94",{"_index":1409,"title":{},"body":{"classes/OpportunityApiResponse.html":{}}}],["responses.dto.ts:99",{"_index":1410,"title":{},"body":{"classes/OpportunityArrayApiResponse.html":{}}}],["responsetime",{"_index":1313,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["responsetypemap",{"_index":705,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsetypemap[typename",{"_index":720,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["restpayload",{"_index":1123,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["restquery",{"_index":1101,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":180,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":2067,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":18,"title":{},"body":{"interfaces/Actor.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"guards/RolesGuard.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.user",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"controllers/UserController.html":{}}}],["role.user)@apibearerauth",{"_index":1886,"title":{},"body":{"controllers/UserController.html":{}}}],["roledata",{"_index":1715,"title":{},"body":{"controllers/TagController.html":{}}}],["roleguard",{"_index":1909,"title":{},"body":{"controllers/UserController.html":{}}}],["rolepermissions",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles",{"_index":13,"title":{},"body":{"interfaces/Actor.html":{},"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":1904,"title":{},"body":{"controllers/UserController.html":{}}}],["roles_full",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles_key",{"_index":1654,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles_view",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":1646,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["rolesguard)@roles(role.admin",{"_index":1885,"title":{},"body":{"controllers/UserController.html":{}}}],["route",{"_index":1663,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rs256",{"_index":521,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["rule",{"_index":650,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"miscellaneous/typealiases.html":{}}}],["rule.constant",{"_index":651,"title":{},"body":{"classes/BaseAclService.html":{}}}],["rule.constant.ts",{"_index":1997,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rule.role",{"_index":662,"title":{},"body":{"classes/BaseAclService.html":{}}}],["rulecallback",{"_index":648,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rules",{"_index":640,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["rxjs",{"_index":1229,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1304,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["sanitizedinput",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sanitizedinput.split(/\\s+/).filter(boolean).join",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalar/nestjs",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":712,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schema.validate",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":377,"title":{},"body":{"injectables/AppLogger.html":{}}}],["scope.transient",{"_index":381,"title":{},"body":{"injectables/AppLogger.html":{}}}],["scoped",{"_index":1287,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["scripts/.../user.ts",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts/seed/user.ts",{"_index":1972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":1109,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["searchkey",{"_index":1107,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":1256,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["seeded",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seedsuperadmin",{"_index":1975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serialized",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":204,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["service",{"_index":425,"title":{},"body":{"injectables/AppService.html":{},"controllers/OpportunityController.html":{}}}],["services/analytics.service",{"_index":272,"title":{},"body":{"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{}}}],["services/auth.service",{"_index":465,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["services/events.service",{"_index":1041,"title":{},"body":{"controllers/EventsController.html":{},"modules/EventsModule.html":{}}}],["services/news.service",{"_index":1341,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["services/opportunities.service",{"_index":1431,"title":{},"body":{"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{}}}],["services/organization.service",{"_index":1520,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{}}}],["services/tags.service",{"_index":1701,"title":{},"body":{"controllers/TagController.html":{},"modules/TagsModule.html":{}}}],["services/user",{"_index":1925,"title":{},"body":{"modules/UserModule.html":{}}}],["services/user.service",{"_index":1896,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["session",{"_index":1235,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["set",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseAclService.html":{},"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"classes/RegisterInput.html":{},"injectables/UserAclService.html":{},"miscellaneous/variables.html":{}}}],["setcontext",{"_index":356,"title":{},"body":{"injectables/AppLogger.html":{}}}],["setcontext(context",{"_index":368,"title":{},"body":{"injectables/AppLogger.html":{}}}],["setmetadata(roles_key",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared",{"_index":1642,"title":{},"body":{"classes/RequestContext.html":{}}}],["shared/acl/acl.service",{"_index":1853,"title":{},"body":{"injectables/UserAclService.html":{}}}],["shared/acl/action.constant",{"_index":1854,"title":{},"body":{"injectables/UserAclService.html":{}}}],["shared/acl/actor.constant",{"_index":1855,"title":{},"body":{"injectables/UserAclService.html":{}}}],["shared/dtos/address.dto",{"_index":816,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["shared/dtos/base",{"_index":255,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["shared/dtos/gallery.dto",{"_index":818,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["shared/dtos/pagination",{"_index":67,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"controllers/UserController.html":{}}}],["shared/filters/prisma",{"_index":1094,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["shared/logger/logger.service",{"_index":258,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["shared/prisma",{"_index":322,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["shared/request",{"_index":260,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["shared/shared.module",{"_index":303,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{}}}],["shared/utils/createsearchkey",{"_index":1099,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["sharedmodule",{"_index":297,"title":{"modules/SharedModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["signature",{"_index":1158,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["signoptions",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{}}}],["sinature",{"_index":1162,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["single",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":1116,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["skipduplicates",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socials",{"_index":761,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["sort",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort.split(\":\")[0",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort.split(\":\")[1",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort=property:(asc|desc",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortingparam",{"_index":2020,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sortingparams",{"_index":2019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{}}}],["sourceid",{"_index":1142,"title":{},"body":{"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{}}}],["space",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spaces",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":643,"title":{},"body":{"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{}}}],["split",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../acl",{"_index":2120,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../action.constant.ts",{"_index":2075,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../base",{"_index":2084,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../common.ts",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../createsearchkey.ts",{"_index":2121,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2082,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../module",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../prisma",{"_index":2083,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../req",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../request",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.constant.ts",{"_index":2076,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.decorator.ts",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.permissions.ts",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sorting",{"_index":2122,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../strategy.constant.ts",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tags",{"_index":2123,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../users.permissions.ts",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/analytics/analytics.module.ts",{"_index":301,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["src/analytics/controllers/analytics.controller.ts",{"_index":231,"title":{},"body":{"controllers/AnalyticsController.html":{},"coverage.html":{}}}],["src/analytics/controllers/analytics.controller.ts:44",{"_index":241,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["src/analytics/dtos/admin",{"_index":97,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"coverage.html":{}}}],["src/analytics/services/analytics.service.ts",{"_index":307,"title":{},"body":{"injectables/AnalyticsService.html":{},"coverage.html":{}}}],["src/analytics/services/analytics.service.ts:15",{"_index":311,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["src/analytics/services/analytics.service.ts:23",{"_index":313,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["src/app.controller.ts",{"_index":340,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:18",{"_index":343,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":420,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":422,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":421,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":500,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/constants/role.constant.ts",{"_index":2079,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/constants/strategy.constant.ts",{"_index":1979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/controllers/auth.controller.ts",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controllers/auth.controller.ts:55",{"_index":439,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/auth.controller.ts:73",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/auth.controller.ts:96",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/decorators/role.decorator.ts",{"_index":1981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/auth",{"_index":623,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/LoginInput.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{}}}],["src/auth/guards/jwt",{"_index":1216,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":1275,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":1648,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:13",{"_index":1651,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:16",{"_index":1652,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/services/auth.service.ts",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts:19",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:29",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:51",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:56",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:72",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:83",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategies/jwt",{"_index":1242,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":1278,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:13",{"_index":1281,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:27",{"_index":1283,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/events/controllers/events.controller.ts",{"_index":1009,"title":{},"body":{"controllers/EventsController.html":{},"coverage.html":{}}}],["src/events/controllers/events.controller.ts:110",{"_index":1030,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/controllers/events.controller.ts:135",{"_index":1023,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/controllers/events.controller.ts:160",{"_index":1034,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/controllers/events.controller.ts:62",{"_index":1027,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/controllers/events.controller.ts:87",{"_index":1018,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/dto/events.dto.ts",{"_index":747,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["src/events/dto/events.dto.ts:101",{"_index":802,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:109",{"_index":777,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:117",{"_index":806,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:125",{"_index":782,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:133",{"_index":766,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:144",{"_index":793,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:148",{"_index":804,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:156",{"_index":774,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:161",{"_index":770,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:169",{"_index":809,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:179",{"_index":1784,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:186",{"_index":1776,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:194",{"_index":1766,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:20",{"_index":1076,"title":{},"body":{"classes/EventsSearchInput.html":{}}}],["src/events/dto/events.dto.ts:201",{"_index":1773,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:208",{"_index":1774,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:215",{"_index":1785,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:222",{"_index":1768,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:229",{"_index":1763,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:237",{"_index":1780,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:245",{"_index":1777,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:25",{"_index":1074,"title":{},"body":{"classes/EventsSearchInput.html":{}}}],["src/events/dto/events.dto.ts:253",{"_index":1778,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:261",{"_index":1761,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:269",{"_index":1781,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:277",{"_index":1764,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:285",{"_index":1758,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:296",{"_index":1769,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:300",{"_index":1779,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:308",{"_index":1760,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:313",{"_index":1759,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:321",{"_index":1782,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:328",{"_index":1771,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:338",{"_index":989,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:34",{"_index":811,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:346",{"_index":1006,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:353",{"_index":996,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:361",{"_index":983,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:368",{"_index":993,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:375",{"_index":994,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:382",{"_index":1007,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:389",{"_index":987,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:396",{"_index":979,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:40",{"_index":798,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:404",{"_index":1002,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:412",{"_index":998,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:421",{"_index":999,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:430",{"_index":977,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:439",{"_index":1003,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:448",{"_index":981,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:456",{"_index":975,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:462",{"_index":973,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:47",{"_index":786,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:470",{"_index":971,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:475",{"_index":1001,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:479",{"_index":1004,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:483",{"_index":985,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:487",{"_index":991,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:53",{"_index":795,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:59",{"_index":796,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:65",{"_index":812,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:71",{"_index":788,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:77",{"_index":780,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:85",{"_index":805,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:93",{"_index":800,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/events.module.ts",{"_index":1067,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/events/services/events.service.ts",{"_index":1084,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["src/events/services/events.service.ts:104",{"_index":1089,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/services/events.service.ts:131",{"_index":1086,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/services/events.service.ts:176",{"_index":1087,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/services/events.service.ts:18",{"_index":1085,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/services/events.service.ts:203",{"_index":1090,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/services/events.service.ts:26",{"_index":1088,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/imagekit/imagekit.controller.ts",{"_index":1173,"title":{},"body":{"controllers/ImagekitController.html":{},"coverage.html":{}}}],["src/imagekit/imagekit.controller.ts:52",{"_index":1178,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["src/imagekit/imagekit.dto.ts",{"_index":1156,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"coverage.html":{}}}],["src/imagekit/imagekit.dto.ts:10",{"_index":1165,"title":{},"body":{"classes/ImagekitAuthParams.html":{}}}],["src/imagekit/imagekit.dto.ts:17",{"_index":1161,"title":{},"body":{"classes/ImagekitAuthParams.html":{}}}],["src/imagekit/imagekit.dto.ts:24",{"_index":1163,"title":{},"body":{"classes/ImagekitAuthParams.html":{}}}],["src/imagekit/imagekit.dto.ts:32",{"_index":1199,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["src/imagekit/imagekit.dto.ts:38",{"_index":1200,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["src/imagekit/imagekit.dto.ts:44",{"_index":1196,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["src/imagekit/imagekit.dto.ts:50",{"_index":1198,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["src/imagekit/imagekit.module.ts",{"_index":1193,"title":{},"body":{"modules/ImagekitModule.html":{}}}],["src/imagekit/imagekit.service.ts",{"_index":1201,"title":{},"body":{"injectables/ImagekitService.html":{},"coverage.html":{}}}],["src/imagekit/imagekit.service.ts:10",{"_index":1204,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["src/imagekit/imagekit.service.ts:24",{"_index":1206,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["src/main.ts",{"_index":1988,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/news/controllers/news.controller.ts",{"_index":1323,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["src/news/controllers/news.controller.ts:110",{"_index":1337,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/news/controllers/news.controller.ts:135",{"_index":1333,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/news/controllers/news.controller.ts:160",{"_index":1339,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/news/controllers/news.controller.ts:62",{"_index":1335,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/news/controllers/news.controller.ts:87",{"_index":1330,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/news/dto/news.dto.ts",{"_index":829,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{},"coverage.html":{}}}],["src/news/dto/news.dto.ts:104",{"_index":1802,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:112",{"_index":1799,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:120",{"_index":1791,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:126",{"_index":1795,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:132",{"_index":1797,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:140",{"_index":1793,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:148",{"_index":1787,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:153",{"_index":1786,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:161",{"_index":1800,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:169",{"_index":1789,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:179",{"_index":1372,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:18",{"_index":1389,"title":{},"body":{"classes/NewsSearchInput.html":{}}}],["src/news/dto/news.dto.ts:187",{"_index":1385,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:195",{"_index":1382,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:203",{"_index":1374,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:209",{"_index":1378,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:215",{"_index":1380,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:223",{"_index":1376,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:23",{"_index":1388,"title":{},"body":{"classes/NewsSearchInput.html":{}}}],["src/news/dto/news.dto.ts:231",{"_index":1364,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:237",{"_index":1363,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:241",{"_index":1383,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:249",{"_index":1366,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:255",{"_index":1368,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:261",{"_index":1386,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:268",{"_index":1370,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:32",{"_index":856,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:39",{"_index":853,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:46",{"_index":840,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:53",{"_index":847,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:60",{"_index":851,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:67",{"_index":842,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:74",{"_index":836,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:79",{"_index":833,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:87",{"_index":854,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:94",{"_index":838,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/news.module.ts",{"_index":1361,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/news/services/news.service.ts",{"_index":1390,"title":{},"body":{"injectables/NewsService.html":{},"coverage.html":{}}}],["src/news/services/news.service.ts:102",{"_index":1395,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/news/services/news.service.ts:123",{"_index":1392,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/news/services/news.service.ts:150",{"_index":1393,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/news/services/news.service.ts:174",{"_index":1396,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/news/services/news.service.ts:18",{"_index":1391,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/news/services/news.service.ts:26",{"_index":1394,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts",{"_index":1413,"title":{},"body":{"controllers/OpportunityController.html":{},"coverage.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts:111",{"_index":1425,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts:136",{"_index":1423,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts:161",{"_index":1429,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts:62",{"_index":1427,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts:88",{"_index":1421,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["src/opportunity/dto/opportunities.dto.ts",{"_index":877,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{},"coverage.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:104",{"_index":887,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:110",{"_index":894,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:116",{"_index":886,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:124",{"_index":880,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:128",{"_index":895,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:136",{"_index":884,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:141",{"_index":882,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:149",{"_index":897,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:159",{"_index":1818,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:166",{"_index":1814,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:174",{"_index":1810,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:181",{"_index":1812,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:188",{"_index":1813,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:19",{"_index":1475,"title":{},"body":{"classes/OpportunitySearchInput.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:195",{"_index":1819,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:202",{"_index":1811,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:209",{"_index":1808,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:217",{"_index":1804,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:225",{"_index":1807,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:233",{"_index":1816,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:24",{"_index":1474,"title":{},"body":{"classes/OpportunitySearchInput.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:241",{"_index":1809,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:249",{"_index":1803,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:253",{"_index":1815,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:260",{"_index":1806,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:265",{"_index":1805,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:273",{"_index":1817,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:283",{"_index":1463,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:290",{"_index":1471,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:297",{"_index":1467,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:305",{"_index":1460,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:312",{"_index":1464,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:319",{"_index":1465,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:326",{"_index":1472,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:33",{"_index":901,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:333",{"_index":1461,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:340",{"_index":1458,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:348",{"_index":1454,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:357",{"_index":1457,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:366",{"_index":1469,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:375",{"_index":1459,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:383",{"_index":1456,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:389",{"_index":1455,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:397",{"_index":1453,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:40",{"_index":888,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:402",{"_index":1468,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:406",{"_index":1470,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:410",{"_index":1466,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:46",{"_index":892,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:52",{"_index":893,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:58",{"_index":902,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:64",{"_index":891,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:72",{"_index":881,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:80",{"_index":889,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:88",{"_index":885,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:96",{"_index":896,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/opportunities.module.ts",{"_index":1451,"title":{},"body":{"modules/OpportunityModule.html":{}}}],["src/opportunity/services/opportunities.service.ts",{"_index":1476,"title":{},"body":{"injectables/OpportunityService.html":{},"coverage.html":{}}}],["src/opportunity/services/opportunities.service.ts:103",{"_index":1482,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/opportunity/services/opportunities.service.ts:129",{"_index":1480,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/opportunity/services/opportunities.service.ts:168",{"_index":1481,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/opportunity/services/opportunities.service.ts:18",{"_index":1478,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/opportunity/services/opportunities.service.ts:195",{"_index":1484,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/opportunity/services/opportunities.service.ts:26",{"_index":1483,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/organization/controllers/organization.controller.ts",{"_index":1502,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["src/organization/controllers/organization.controller.ts:115",{"_index":1514,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/controllers/organization.controller.ts:143",{"_index":1512,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/controllers/organization.controller.ts:171",{"_index":1518,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/controllers/organization.controller.ts:63",{"_index":1516,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/controllers/organization.controller.ts:89",{"_index":1510,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/dto/organization.dto.ts",{"_index":909,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["src/organization/dto/organization.dto.ts:100",{"_index":913,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:107",{"_index":922,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:112",{"_index":920,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:120",{"_index":931,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:130",{"_index":1831,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:138",{"_index":1823,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:146",{"_index":1825,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:155",{"_index":1832,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:164",{"_index":1833,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:172",{"_index":1820,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:183",{"_index":1826,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:187",{"_index":1834,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:19",{"_index":1560,"title":{},"body":{"classes/OrganizationSearchInput.html":{}}}],["src/organization/dto/organization.dto.ts:195",{"_index":1822,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:200",{"_index":1821,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:208",{"_index":1829,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:213",{"_index":1827,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:217",{"_index":1835,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:226",{"_index":1548,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:233",{"_index":1553,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:24",{"_index":1561,"title":{},"body":{"classes/OrganizationSearchInput.html":{}}}],["src/organization/dto/organization.dto.ts:240",{"_index":1545,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:247",{"_index":1547,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:255",{"_index":1556,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:264",{"_index":1557,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:272",{"_index":1540,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:276",{"_index":1558,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:283",{"_index":1543,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:287",{"_index":1541,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:294",{"_index":1551,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:298",{"_index":1549,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:302",{"_index":1559,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:306",{"_index":1554,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:33",{"_index":924,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:40",{"_index":915,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:47",{"_index":917,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:56",{"_index":928,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:65",{"_index":929,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:73",{"_index":912,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:84",{"_index":918,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:88",{"_index":930,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:95",{"_index":914,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/organization.module.ts",{"_index":1538,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["src/organization/services/organization.service.ts",{"_index":1562,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["src/organization/services/organization.service.ts:104",{"_index":1569,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/services/organization.service.ts:131",{"_index":1567,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/services/organization.service.ts:177",{"_index":1568,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/services/organization.service.ts:18",{"_index":1565,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/services/organization.service.ts:204",{"_index":1572,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/services/organization.service.ts:26",{"_index":1571,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/shared/acl/acl",{"_index":1996,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/shared/acl/acl.service.ts",{"_index":632,"title":{},"body":{"classes/BaseAclService.html":{},"coverage.html":{}}}],["src/shared/acl/acl.service.ts:10",{"_index":638,"title":{},"body":{"classes/BaseAclService.html":{}}}],["src/shared/acl/acl.service.ts:15",{"_index":649,"title":{},"body":{"classes/BaseAclService.html":{}}}],["src/shared/acl/acl.service.ts:28",{"_index":641,"title":{},"body":{"classes/BaseAclService.html":{}}}],["src/shared/acl/action.constant.ts",{"_index":2077,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/shared/acl/actor.constant.ts",{"_index":6,"title":{},"body":{"interfaces/Actor.html":{},"coverage.html":{}}}],["src/shared/configs/module",{"_index":2004,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/constants/common.ts",{"_index":2006,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/constants/permissions/index.ts",{"_index":2009,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/shared/constants/permissions/roles.permissions.ts",{"_index":2013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/constants/permissions/users.permissions.ts",{"_index":2014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/sorting",{"_index":2015,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/shared/dtos/address.dto.ts",{"_index":73,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"coverage.html":{}}}],["src/shared/dtos/address.dto.ts:13",{"_index":86,"title":{},"body":{"classes/AddressInput.html":{}}}],["src/shared/dtos/address.dto.ts:22",{"_index":83,"title":{},"body":{"classes/AddressInput.html":{}}}],["src/shared/dtos/address.dto.ts:29",{"_index":81,"title":{},"body":{"classes/AddressInput.html":{}}}],["src/shared/dtos/address.dto.ts:38",{"_index":85,"title":{},"body":{"classes/AddressInput.html":{}}}],["src/shared/dtos/address.dto.ts:47",{"_index":84,"title":{},"body":{"classes/AddressInput.html":{}}}],["src/shared/dtos/address.dto.ts:57",{"_index":95,"title":{},"body":{"classes/AddressResponse.html":{}}}],["src/shared/dtos/address.dto.ts:65",{"_index":92,"title":{},"body":{"classes/AddressResponse.html":{}}}],["src/shared/dtos/address.dto.ts:72",{"_index":90,"title":{},"body":{"classes/AddressResponse.html":{}}}],["src/shared/dtos/address.dto.ts:80",{"_index":94,"title":{},"body":{"classes/AddressResponse.html":{}}}],["src/shared/dtos/address.dto.ts:88",{"_index":93,"title":{},"body":{"classes/AddressResponse.html":{}}}],["src/shared/dtos/base",{"_index":676,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/shared/dtos/gallery.dto.ts",{"_index":1140,"title":{},"body":{"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"coverage.html":{}}}],["src/shared/dtos/gallery.dto.ts:10",{"_index":1146,"title":{},"body":{"classes/GalleryInput.html":{}}}],["src/shared/dtos/gallery.dto.ts:16",{"_index":1144,"title":{},"body":{"classes/GalleryInput.html":{}}}],["src/shared/dtos/gallery.dto.ts:21",{"_index":1149,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/gallery.dto.ts:24",{"_index":1151,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/gallery.dto.ts:27",{"_index":1150,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/gallery.dto.ts:30",{"_index":1147,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/gallery.dto.ts:33",{"_index":1152,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/gallery.dto.ts:36",{"_index":1148,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/pagination",{"_index":1592,"title":{},"body":{"classes/PaginationParamsDto.html":{},"coverage.html":{}}}],["src/shared/dtos/specific",{"_index":588,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{}}}],["src/shared/exceptions/base",{"_index":732,"title":{},"body":{"classes/BaseApiException.html":{},"coverage.html":{}}}],["src/shared/filters/all",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/shared/filters/prisma",{"_index":2021,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/shared/interceptors/logging.interceptor.ts",{"_index":1295,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/shared/interceptors/logging.interceptor.ts:14",{"_index":1298,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/shared/interceptors/logging.interceptor.ts:19",{"_index":1301,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/shared/logger/logger.module.ts",{"_index":395,"title":{},"body":{"modules/AppLoggerModule.html":{}}}],["src/shared/logger/logger.service.ts",{"_index":352,"title":{},"body":{"injectables/AppLogger.html":{},"coverage.html":{}}}],["src/shared/logger/logger.service.ts:11",{"_index":369,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:13",{"_index":359,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:21",{"_index":364,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:37",{"_index":374,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:53",{"_index":361,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:69",{"_index":372,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:8",{"_index":375,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:85",{"_index":367,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:9",{"_index":376,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/middlewares/request",{"_index":2031,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/prisma",{"_index":1602,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/shared/request",{"_index":1631,"title":{},"body":{"classes/RequestContext.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/shared/shared.module.ts",{"_index":1668,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/utils/createsearchkey.ts",{"_index":2037,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/tags/controllers/tags.controller.ts",{"_index":1687,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{}}}],["src/tags/controllers/tags.controller.ts:108",{"_index":1693,"title":{},"body":{"controllers/TagController.html":{}}}],["src/tags/controllers/tags.controller.ts:60",{"_index":1695,"title":{},"body":{"controllers/TagController.html":{}}}],["src/tags/controllers/tags.controller.ts:83",{"_index":1699,"title":{},"body":{"controllers/TagController.html":{}}}],["src/tags/dto/tags",{"_index":26,"title":{},"body":{"classes/AddTagDto.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/tags/services/tags.service.ts",{"_index":1739,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/services/tags.service.ts:111",{"_index":1745,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/services/tags.service.ts:14",{"_index":1741,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/services/tags.service.ts:188",{"_index":1742,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/services/tags.service.ts:22",{"_index":1743,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.module.ts",{"_index":1737,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/user/controllers/user.controller.ts",{"_index":1871,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/controllers/user.controller.ts:118",{"_index":1881,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controllers/user.controller.ts:143",{"_index":1892,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controllers/user.controller.ts:63",{"_index":1878,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controllers/user.controller.ts:88",{"_index":1887,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/dtos/user",{"_index":941,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UserOutput.html":{},"coverage.html":{}}}],["src/user/services/user",{"_index":1844,"title":{},"body":{"injectables/UserAclService.html":{},"coverage.html":{}}}],["src/user/services/user.service.ts",{"_index":1930,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/services/user.service.ts:114",{"_index":1946,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:12",{"_index":1936,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:19",{"_index":1938,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:34",{"_index":1948,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:57",{"_index":1945,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:71",{"_index":1940,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:87",{"_index":1944,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:99",{"_index":1942,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.module.ts",{"_index":1923,"title":{},"body":{"modules/UserModule.html":{}}}],["stack",{"_index":168,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["startdate",{"_index":762,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["started",{"_index":2104,"title":{"index.html":{}},"body":{}}],["state",{"_index":77,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{}}}],["statements",{"_index":1971,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":279,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/BaseApiException.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"controllers/UserController.html":{}}}],["status'})@expose",{"_index":990,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["status'})@isboolean()@isoptional",{"_index":1770,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["statuscode",{"_index":169,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/TypeMapping.html":{}}}],["strategies/jwt",{"_index":507,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":510,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1245,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy_jwt_auth",{"_index":504,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategy_jwt_refresh",{"_index":1270,"title":{},"body":{"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategy_local",{"_index":1277,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["street",{"_index":78,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(filter",{"_index":1112,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["string(type",{"_index":719,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["sub",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["summary",{"_index":277,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":1253,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserAclService.html":{}}}],["super(message",{"_index":739,"title":{},"body":{"classes/BaseApiException.html":{}}}],["super.canactivate(context",{"_index":1236,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["super.login(request",{"_index":1233,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["superadmin",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supplied",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":2108,"title":{},"body":{"modules.html":{}}}],["suppress",{"_index":220,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["svg",{"_index":2109,"title":{},"body":{"modules.html":{}}}],["swagger.decorator.ts",{"_index":2016,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerbaseapiresponse",{"_index":254,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"interfaces/TypeMapping.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["swaggerbaseapiresponse([eventresponsedto",{"_index":1046,"title":{},"body":{"controllers/EventsController.html":{}}}],["swaggerbaseapiresponse([newsresponsedto",{"_index":1346,"title":{},"body":{"controllers/NewsController.html":{}}}],["swaggerbaseapiresponse([opportunityresponsedto",{"_index":1436,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["swaggerbaseapiresponse([organizationresponsedto",{"_index":1525,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["swaggerbaseapiresponse([tagoutputdto",{"_index":1706,"title":{},"body":{"controllers/TagController.html":{}}}],["swaggerbaseapiresponse([useroutput",{"_index":1903,"title":{},"body":{"controllers/UserController.html":{}}}],["swaggerbaseapiresponse(adminanalyticsoutput",{"_index":281,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["swaggerbaseapiresponse(authtokenoutput",{"_index":470,"title":{},"body":{"controllers/AuthController.html":{}}}],["swaggerbaseapiresponse(eventresponsedto",{"_index":1050,"title":{},"body":{"controllers/EventsController.html":{}}}],["swaggerbaseapiresponse(imagekitresponsedto",{"_index":1186,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["swaggerbaseapiresponse(newsresponsedto",{"_index":1349,"title":{},"body":{"controllers/NewsController.html":{}}}],["swaggerbaseapiresponse(opportunityresponsedto",{"_index":1439,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["swaggerbaseapiresponse(organizationresponsedto",{"_index":1528,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["swaggerbaseapiresponse(registeroutput",{"_index":480,"title":{},"body":{"controllers/AuthController.html":{}}}],["swaggerbaseapiresponse(tagoutputdto",{"_index":1713,"title":{},"body":{"controllers/TagController.html":{}}}],["swaggerbaseapiresponse(type",{"_index":2102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["swaggerbaseapiresponse(useroutput",{"_index":1901,"title":{},"body":{"controllers/UserController.html":{}}}],["switch",{"_index":188,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["t",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":34,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["tag'})@apiresponse({status",{"_index":1692,"title":{},"body":{"controllers/TagController.html":{}}}],["tagapiresponse",{"_index":612,"title":{"classes/TagApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tagarrayapiresponse",{"_index":613,"title":{"classes/TagArrayApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tagcontroller",{"_index":1686,"title":{"controllers/TagController.html":{}},"body":{"controllers/TagController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagids",{"_index":763,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["tagids?.map((id",{"_index":1126,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["tagoutputdto",{"_index":593,"title":{"classes/TagOutputDto.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tags",{"_index":807,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["tags/dto/tags",{"_index":594,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["tags/tags.module",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["tagscount",{"_index":1750,"title":{},"body":{"injectables/TagsService.html":{}}}],["tagsearchinput",{"_index":70,"title":{"classes/TagSearchInput.html":{}},"body":{"classes/AddTagDto.html":{},"controllers/TagController.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":407,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsservice",{"_index":1700,"title":{"injectables/TagsService.html":{}},"body":{"controllers/TagController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["tagstype",{"_index":69,"title":{},"body":{"classes/AddTagDto.html":{},"controllers/TagController.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tagswherequery",{"_index":1747,"title":{},"body":{"injectables/TagsService.html":{}}}],["tagtype",{"_index":1697,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["take",{"_index":1115,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["tap",{"_index":1303,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["team",{"_index":1639,"title":{},"body":{"classes/RequestContext.html":{}}}],["tech",{"_index":56,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["technology",{"_index":784,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["test",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test@123",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.$connect",{"_index":1607,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.aclrules.filter",{"_index":661,"title":{},"body":{"classes/BaseAclService.html":{}}}],["this.aclrules.push",{"_index":654,"title":{},"body":{"classes/BaseAclService.html":{}}}],["this.addevent.name",{"_index":1051,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["this.addnews.name",{"_index":1350,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["this.addopportunity.name",{"_index":1490,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.addopportutnity.name",{"_index":1440,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.addorg.name",{"_index":1529,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.addorganization.name",{"_index":1583,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.addtag.name",{"_index":1714,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["this.analyticsservice.getadmindashboardanalytics(ctx",{"_index":283,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["this.applogger.log(ctx",{"_index":1315,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.applogger.setcontext(logginginterceptor.name",{"_index":1305,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.appservice.gethello(ctx",{"_index":351,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(ctx",{"_index":477,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtoken(ctx",{"_index":493,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(ctx",{"_index":482,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(ctx",{"_index":1293,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.cando(role.admin",{"_index":1856,"title":{},"body":{"injectables/UserAclService.html":{}}}],["this.cando(role.user",{"_index":1860,"title":{},"body":{"injectables/UserAclService.html":{}}}],["this.config.get('env",{"_index":225,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.configservice.get(\"env",{"_index":1215,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.configservice.get(\"imagekit.privatekey",{"_index":1209,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.configservice.get(\"imagekit.publickey",{"_index":1208,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.configservice.get(\"imagekit.urlendpoint",{"_index":1211,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.configservice.get(\"jwt.accesstokenexpiresinsec",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get(\"jwt.refreshtokenexpiresinsec",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.context",{"_index":382,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.createuser.name",{"_index":1953,"title":{},"body":{"injectables/UserService.html":{}}}],["this.deleteevent.name",{"_index":1058,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["this.deletenews.name",{"_index":1354,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["this.deleteopportunity.name",{"_index":1444,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["this.deleteorganization.name",{"_index":1586,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.details",{"_index":743,"title":{},"body":{"classes/BaseApiException.html":{}}}],["this.eventsservice.addevent(ctx",{"_index":1052,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.deleteevent(ctx",{"_index":1059,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.getevents(ctx",{"_index":1048,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.getoneevent(ctx",{"_index":1056,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.updateevent(ctx",{"_index":1063,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.findbyid.name",{"_index":1962,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findbyusername.name",{"_index":1964,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getadmindashboardanalytics.name",{"_index":326,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["this.getauthparamas.name",{"_index":1187,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["this.getauthparams.name",{"_index":1213,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.getauthtoken(ctx",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getauthtoken.name",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getevents.name",{"_index":1047,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["this.getmyprofile.name",{"_index":1902,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getnews.name",{"_index":1347,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["this.getoneevent.name",{"_index":1055,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["this.getonenews.name",{"_index":1352,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["this.getoneopportunity.name",{"_index":1442,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["this.getoneorganization.name",{"_index":1580,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.getopportunities.name",{"_index":1437,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["this.getorganizations.name",{"_index":1574,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.getorgs.name",{"_index":1526,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.gettags.name",{"_index":1707,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["this.gettagsbytype.name",{"_index":1753,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.gettagstype.name",{"_index":1711,"title":{},"body":{"controllers/TagController.html":{}}}],["this.getuser.name",{"_index":1914,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getuserbyid.name",{"_index":1963,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getusers.name",{"_index":1905,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.imagekit",{"_index":1207,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.imagekit.getauthenticationparameters",{"_index":1214,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.imagekitservice.getauthparams(ctx",{"_index":1189,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["this.isuseritself",{"_index":1863,"title":{},"body":{"injectables/UserAclService.html":{}}}],["this.jwtservice.sign",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(subject",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localizedmessage",{"_index":742,"title":{},"body":{"classes/BaseApiException.html":{}}}],["this.logger",{"_index":383,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.debug",{"_index":388,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.error",{"_index":385,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.info",{"_index":390,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(ctx",{"_index":325,"title":{},"body":{"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.logger.setcontext(allexceptionsfilter.name",{"_index":151,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.setcontext(analyticscontroller.name",{"_index":275,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["this.logger.setcontext(analyticsservice.name",{"_index":324,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["this.logger.setcontext(appcontroller.name",{"_index":346,"title":{},"body":{"controllers/AppController.html":{}}}],["this.logger.setcontext(appservice.name",{"_index":424,"title":{},"body":{"injectables/AppService.html":{}}}],["this.logger.setcontext(authcontroller.name",{"_index":468,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.logger.setcontext(authservice.name",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.setcontext(eventscontroller.name",{"_index":1045,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.logger.setcontext(eventsservice.name",{"_index":1100,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.logger.setcontext(imagekitcontroller.name",{"_index":1184,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["this.logger.setcontext(imagekitservice.name",{"_index":1212,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.logger.setcontext(localstrategy.name",{"_index":1290,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.logger.setcontext(newscontroller.name",{"_index":1345,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.logger.setcontext(newsservice.name",{"_index":1397,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.logger.setcontext(opportunitycontroller.name",{"_index":1435,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.logger.setcontext(opportunityservice.name",{"_index":1485,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.logger.setcontext(organizationcontroller.name",{"_index":1524,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.logger.setcontext(organizationservice.name",{"_index":1573,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.logger.setcontext(tagcontroller.name",{"_index":1705,"title":{},"body":{"controllers/TagController.html":{}}}],["this.logger.setcontext(tagsservice.name",{"_index":1746,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.logger.setcontext(usercontroller.name",{"_index":1899,"title":{},"body":{"controllers/UserController.html":{}}}],["this.logger.setcontext(userservice.name",{"_index":1952,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.verbose",{"_index":389,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.warn",{"_index":387,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.warn(requestcontext",{"_index":218,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.login.name",{"_index":475,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.name",{"_index":740,"title":{},"body":{"classes/BaseApiException.html":{}}}],["this.newsservice.addnews(ctx",{"_index":1351,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.deletenews(ctx",{"_index":1355,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.getnews(ctx",{"_index":1348,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.getonenews(ctx",{"_index":1353,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.updatenews(ctx",{"_index":1357,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.organizationservice.addorganization",{"_index":1530,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.deleteorganization",{"_index":1532,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.getoneorganization",{"_index":1531,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.getorganizations(ctx",{"_index":1527,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.updateorganization",{"_index":1533,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.prismaservice.events.count",{"_index":331,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/EventsService.html":{}}}],["this.prismaservice.events.create",{"_index":1124,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prismaservice.events.delete",{"_index":1129,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prismaservice.events.findmany",{"_index":1113,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prismaservice.events.findunique",{"_index":1120,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prismaservice.events.update",{"_index":1132,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prismaservice.news.count",{"_index":330,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/NewsService.html":{}}}],["this.prismaservice.news.create",{"_index":1402,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.prismaservice.news.delete",{"_index":1404,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.prismaservice.news.findmany",{"_index":1398,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.prismaservice.news.findunique",{"_index":1400,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.prismaservice.news.update",{"_index":1407,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.prismaservice.opportunity.count",{"_index":332,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/OpportunityService.html":{}}}],["this.prismaservice.opportunity.create",{"_index":1491,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.prismaservice.opportunity.delete",{"_index":1493,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.prismaservice.opportunity.findmany",{"_index":1486,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.prismaservice.opportunity.findunique",{"_index":1488,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.prismaservice.opportunity.update",{"_index":1496,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.prismaservice.organizations.count",{"_index":1578,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.organizations.create",{"_index":1584,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.organizations.delete",{"_index":1587,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.organizations.findmany",{"_index":1576,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.organizations.findunique",{"_index":1581,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.organizations.update",{"_index":1590,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.tags.count",{"_index":1751,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.prismaservice.tags.create",{"_index":1754,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.prismaservice.tags.findmany",{"_index":1748,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.prismaservice.user.count",{"_index":329,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["this.prismaservice.user.findunique",{"_index":1264,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/UserService.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1657,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.refreshtoken.name",{"_index":492,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.register.name",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.service.addopportunity(ctx",{"_index":1441,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.service.deleteopportunity(ctx",{"_index":1445,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.service.getoneopportunity(ctx",{"_index":1443,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.service.getopportunities(ctx",{"_index":1438,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.service.updateopportunity(ctx",{"_index":1447,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.tagsservice.addtag(ctx",{"_index":1716,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagsservice.gettags(ctx",{"_index":1708,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagsservice.gettagsbytype(ctx",{"_index":1712,"title":{},"body":{"controllers/TagController.html":{}}}],["this.updateevent.name",{"_index":1061,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["this.updatenews.name",{"_index":1356,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["this.updateopportunity.name",{"_index":1446,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["this.updateuser.name",{"_index":1917,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.userservice.createuser(ctx",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyid(ctx",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["this.userservice.getuserbyid(ctx",{"_index":1915,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getusers",{"_index":1906,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuser(ctx",{"_index":1918,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.validateusernamepassword",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validate.name",{"_index":1292,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.validateuser.name",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validateusernamepassword.name",{"_index":1954,"title":{},"body":{"injectables/UserService.html":{}}}],["throw",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tidy",{"_index":190,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timestamp",{"_index":161,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["title",{"_index":764,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["toclassonly",{"_index":1079,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{}}}],["todo",{"_index":175,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/RequestContext.html":{},"controllers/UserController.html":{}}}],["token",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{}}}],["token')@apioperation({summary",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{}}}],["top",{"_index":2094,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transform",{"_index":1596,"title":{},"body":{"classes/PaginationParamsDto.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":88,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["transports",{"_index":379,"title":{},"body":{"injectables/AppLogger.html":{}}}],["transports.console",{"_index":384,"title":{},"body":{"injectables/AppLogger.html":{}}}],["trim",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":53,"title":{},"body":{"classes/AddTagDto.html":{},"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/CreateEventDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"injectables/LocalStrategy.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"guards/RolesGuard.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOrganizationDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["true})@isstring",{"_index":57,"title":{},"body":{"classes/AddTagDto.html":{}}}],["true})@type(undefined)@isarray()@isoptional",{"_index":792,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["two",{"_index":2092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type'})@isstring",{"_index":787,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{}}}],["type'})@isstring()@expose",{"_index":986,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["type'})@isstring()@isoptional",{"_index":1767,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["type[0].name",{"_index":716,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["typealiases",{"_index":2118,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typemapping",{"_index":701,"title":{"interfaces/TypeMapping.html":{}},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typename",{"_index":714,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["typeof",{"_index":717,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1239,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["types/uuid",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":488,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["unauthorized",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception",{"_index":314,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception(\"email",{"_index":1958,"title":{},"body":{"injectables/UserService.html":{}}}],["unauthorizedexception(\"invalid",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(\"this",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(\"user",{"_index":1955,"title":{},"body":{"injectables/UserService.html":{}}}],["unauthorizedexception(`${info",{"_index":1241,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["undefined",{"_index":170,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/BaseApiException.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{}}}],["undefined})@apiresponse({status",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["undefined})@isarray()@isoptional",{"_index":1387,"title":{},"body":{"classes/NewsSearchInput.html":{}}}],["undefined})@isoptional()@isarray",{"_index":1073,"title":{},"body":{"classes/EventsSearchInput.html":{}}}],["under",{"_index":2101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unknown",{"_index":730,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":490,"title":{},"body":{"controllers/AuthController.html":{}}}],["up",{"_index":191,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["update",{"_index":1033,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/UpdateUserInput.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["updated",{"_index":872,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["updatedat",{"_index":873,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UserOutput.html":{}}}],["updateditem",{"_index":1495,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["updatednews",{"_index":1406,"title":{},"body":{"injectables/NewsService.html":{}}}],["updateevent",{"_index":1015,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["updateevent(ctx",{"_index":1031,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["updateeventdto",{"_index":823,"title":{"classes/UpdateEventDto.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["updatenews",{"_index":1328,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["updatenews(ctx",{"_index":1338,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["updatenewsdto",{"_index":867,"title":{"classes/UpdateNewsDto.html":{}},"body":{"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/UpdateNewsDto.html":{},"coverage.html":{}}}],["updateopportunity",{"_index":1419,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["updateopportunity(ctx",{"_index":1428,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["updateopportunitydto",{"_index":905,"title":{"classes/UpdateOpportunityDto.html":{}},"body":{"classes/CreateOpportunityDto.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/UpdateOpportunityDto.html":{},"coverage.html":{}}}],["updateorganization",{"_index":1508,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["updateorganization(ctx",{"_index":1517,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["updateorganizationdto",{"_index":937,"title":{"classes/UpdateOrganizationDto.html":{}},"body":{"classes/CreateOrganizationDto.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["updatereferences",{"_index":1989,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatereferences(obj",{"_index":2085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateuser",{"_index":1875,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuser(ctx",{"_index":1888,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserinput",{"_index":1836,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["upload",{"_index":1170,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["upsert",{"_index":1133,"title":{},"body":{"injectables/EventsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["url",{"_index":771,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RequestContext.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["url'})@isstring",{"_index":1143,"title":{},"body":{"classes/GalleryInput.html":{}}}],["urlendpoint",{"_index":1210,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["use",{"_index":1136,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"controllers/UserController.html":{}}}],["useclass",{"_index":1681,"title":{},"body":{"modules/SharedModule.html":{}}}],["used",{"_index":605,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"injectables/EventsService.html":{},"classes/ImagekitApiResponse.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"injectables/OrganizationService.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["usefactory",{"_index":514,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":247,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":1049,"title":{},"body":{"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@useinterceptors(classserializerinterceptor)@delete('/:id')@apioperation({summary",{"_index":1020,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@useinterceptors(classserializerinterceptor)@get('me')@apioperation({summary",{"_index":1877,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@useinterceptors(classserializerinterceptor)@get()@apioperation({summary",{"_index":1176,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@useinterceptors(classserializerinterceptor)@patch('/:id')@apioperation({summary",{"_index":1032,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@useinterceptors(classserializerinterceptor)@post()@apioperation({summary",{"_index":1017,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{}}}],["useguards(jwtrefreshguard",{"_index":483,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":473,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":248,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":474,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor)@get('/:id')@apioperation({summary",{"_index":1029,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["useinterceptors(classserializerinterceptor)@get('/:type')@apioperation({summary",{"_index":1698,"title":{},"body":{"controllers/TagController.html":{}}}],["useinterceptors(classserializerinterceptor)@get(':id')@apioperation({summary",{"_index":1880,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor)@get()@apioperation({summary",{"_index":1026,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":52,"title":{},"body":{"classes/AddTagDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseAclService.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.isaccountverified",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":1957,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1662,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.roles?.includes(role",{"_index":1661,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user/dtos/user",{"_index":319,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["user/services/user.service",{"_index":321,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{}}}],["user/user.module",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useraccesstokenclaims",{"_index":529,"title":{"classes/UserAccessTokenClaims.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RequestContext.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{}}}],["useraclservice",{"_index":1843,"title":{"injectables/UserAclService.html":{}},"body":{"injectables/UserAclService.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userapiresponse",{"_index":610,"title":{"classes/UserApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userarrayapiresponse",{"_index":611,"title":{"classes/UserArrayApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":1870,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercount",{"_index":103,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"injectables/AnalyticsService.html":{}}}],["userid",{"_index":1889,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":408,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":944,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"injectables/UserService.html":{}}}],["username/password",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamefield",{"_index":1288,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["useroutput",{"_index":318,"title":{"classes/UserOutput.html":{}},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userpermissions",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrefreshtokenclaims",{"_index":630,"title":{"classes/UserRefreshTokenClaims.html":{}},"body":{"classes/AuthTokenOutput.html":{},"injectables/JwtRefreshStrategy.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{}}}],["users",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["users_full",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users_view",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userservice",{"_index":320,"title":{"injectables/UserService.html":{}},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersoutput",{"_index":1961,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":710,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["uuid",{"_index":2070,"title":{},"body":{"dependencies.html":{}}}],["uuidv4",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid(\"development",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid(...validparams",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":1246,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1248,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["validate(request",{"_index":1282,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(requestidtoken",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatenested",{"_index":815,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["validateuser",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(ctx",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateusernamepassword",{"_index":1935,"title":{},"body":{"injectables/UserService.html":{}}}],["validateusernamepassword(ctx",{"_index":1947,"title":{},"body":{"injectables/UserService.html":{}}}],["validation_pipe_options",{"_index":2008,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":65,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterInput.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"dependencies.html":{}}}],["validparams",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":178,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventsSearchInput.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterInput.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2125,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":491,"title":{},"body":{"controllers/AuthController.html":{}}}],["verbose",{"_index":357,"title":{},"body":{"injectables/AppLogger.html":{}}}],["verbose(ctx",{"_index":371,"title":{},"body":{"injectables/AppLogger.html":{}}}],["verified",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":2116,"title":{},"body":{"properties.html":{}}}],["via",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["view",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":370,"title":{},"body":{"injectables/AppLogger.html":{},"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["warn",{"_index":358,"title":{},"body":{"injectables/AppLogger.html":{}}}],["warn(ctx",{"_index":373,"title":{},"body":{"injectables/AppLogger.html":{}}}],["wherebuilder",{"_index":1102,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["wherequery",{"_index":1103,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{}}}],["whitelist",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston",{"_index":380,"title":{},"body":{"injectables/AppLogger.html":{},"dependencies.html":{}}}],["world",{"_index":349,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["x",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["year",{"_index":848,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["year'})@expose",{"_index":1379,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["year'})@isoptional",{"_index":1796,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["yes",{"_index":362,"title":{},"body":{"injectables/AppLogger.html":{},"classes/BaseAclService.html":{},"classes/BaseApiException.html":{},"injectables/UserAclService.html":{}}}],["z0",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":298,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Actor.html":{"url":"interfaces/Actor.html","title":"interface - Actor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Actor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/acl/actor.constant.ts\n        \n\n\n            \n                Description\n            \n            \n                The actor who is perfoming the action\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ROLE } from './../../auth/constants/role.constant';\n\n/**\n * The actor who is perfoming the action\n */\nexport interface Actor {\n  id: string;\n\n  roles: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTagDto.html":{"url":"classes/AddTagDto.html","title":"class - AddTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/dto/tags-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isEventTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isNewsTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isOpportunityTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isOrganizationTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isUserTag\n                            \n                            \n                                    \n                                    \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isEventTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if this is an event tag', example: false, required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isNewsTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if this is a news tag', example: false, required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isOpportunityTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if this is an opportunity tag', example: false, required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isOrganizationTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if this is an organization tag', example: false, required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isUserTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if this is a user tag', example: true, required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the tag', example: 'Tech', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsBoolean, IsOptional, IsString } from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\n\nexport type TagsType =\n  | \"USER\"\n  | \"ORGANIZATION\"\n  | \"EVENT\"\n  | \"NEWS\"\n  | \"OPPORTUNITY\";\n\nexport class TagSearchInput extends PaginationParamsDto {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  tag: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isUserTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isOrganizationTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isEventTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isNewsTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isOpportunityTag?: boolean;\n}\n\nexport class AddTagDto {\n  @ApiProperty({\n    description: \"The name of the tag\",\n    example: \"Tech\",\n    required: true,\n  })\n  @IsString()\n  tag: string;\n\n  @ApiProperty({\n    description: \"Indicates if this is a user tag\",\n    example: true,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isUserTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an organization tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isOrganizationTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an event tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isEventTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is a news tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isNewsTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an opportunity tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isOpportunityTag?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressInput.html":{"url":"classes/AddressInput.html","title":"class - AddressInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/address.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postcode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                street\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'City', required: false, example: '5551234567'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Country', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Postcode', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'State', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\nimport { IsOptional, IsString } from \"class-validator\";\n\nexport class AddressInput {\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  street?: string;\n\n  @ApiPropertyOptional({\n    description: \"Country\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  country?: string;\n\n  @ApiPropertyOptional({\n    description: \"City\",\n    required: false,\n    example: \"5551234567\",\n  })\n  city?: string;\n\n  @ApiPropertyOptional({\n    description: \"State\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @ApiPropertyOptional({\n    description: \"Postcode\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  postcode?: string;\n}\n\nexport class AddressResponse {\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  street?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  country?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  city?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  state?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  postcode?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressResponse.html":{"url":"classes/AddressResponse.html","title":"class - AddressResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/address.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                postcode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                street\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        postcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\nimport { IsOptional, IsString } from \"class-validator\";\n\nexport class AddressInput {\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  street?: string;\n\n  @ApiPropertyOptional({\n    description: \"Country\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  country?: string;\n\n  @ApiPropertyOptional({\n    description: \"City\",\n    required: false,\n    example: \"5551234567\",\n  })\n  city?: string;\n\n  @ApiPropertyOptional({\n    description: \"State\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @ApiPropertyOptional({\n    description: \"Postcode\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  postcode?: string;\n}\n\nexport class AddressResponse {\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  street?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  country?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  city?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  state?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  postcode?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminAnalyticsOutput.html":{"url":"classes/AdminAnalyticsOutput.html","title":"class - AdminAnalyticsOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminAnalyticsOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analytics/dtos/admin-analytics-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                eventCount\n                            \n                            \n                                    \n                                    \n                                newsCount\n                            \n                            \n                                    \n                                    \n                                opportunityCount\n                            \n                            \n                                    \n                                    \n                                userCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        eventCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analytics/dtos/admin-analytics-output.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newsCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analytics/dtos/admin-analytics-output.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        opportunityCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analytics/dtos/admin-analytics-output.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analytics/dtos/admin-analytics-output.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nexport class AdminAnalyticsOutput {\n  @Expose()\n  @ApiProperty()\n  newsCount: number;\n\n  @Expose()\n  @ApiProperty()\n  userCount: string;\n\n  @Expose()\n  @ApiProperty()\n  eventCount: string;\n\n  @Expose()\n  @ApiProperty()\n  opportunityCount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/shared/filters/all-exceptions.filter.ts:17\n                            \n                        \n\n                \n                    \n                            set logger context\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: T, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/filters/all-exceptions.filter.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Request, Response } from 'express';\n\nimport { REQUEST_ID_TOKEN_HEADER } from '../constants';\nimport { BaseApiException } from '../exceptions/base-api.exception';\nimport { AppLogger } from '../logger/logger.service';\nimport { createRequestContext } from '../request-context/util';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  /** set logger context */\n  constructor(\n    private config: ConfigService,\n    private readonly logger: AppLogger,\n  ) {\n    this.logger.setContext(AllExceptionsFilter.name);\n  }\n\n  catch(exception: T, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const req: Request = ctx.getRequest();\n    const res: Response = ctx.getResponse();\n\n    const path = req.url;\n    const timestamp = new Date().toISOString();\n    const requestId = req.headers[REQUEST_ID_TOKEN_HEADER];\n    const requestContext = createRequestContext(req);\n\n    let stack: any;\n    let statusCode: HttpStatus | undefined = undefined;\n    let errorName: string | undefined = undefined;\n    let message: string | undefined = undefined;\n    let details: string | Record | undefined = undefined;\n    // TODO : Based on language value in header, return a localized message.\n    const acceptedLanguage = 'ja';\n    let localizedMessage: string | undefined = undefined;\n\n    // TODO : Refactor the below cases into a switch case and tidy up error response creation.\n    if (exception instanceof BaseApiException) {\n      statusCode = exception.getStatus();\n      errorName = exception.constructor.name;\n      message = exception.message;\n      localizedMessage = exception.localizedMessage\n        ? exception.localizedMessage[acceptedLanguage]\n        : undefined;\n      details = exception.details || exception.getResponse();\n    } else if (exception instanceof HttpException) {\n      statusCode = exception.getStatus();\n      errorName = exception.constructor.name;\n      message = exception.message;\n      details = exception.getResponse();\n    } else if (exception instanceof Error) {\n      errorName = exception.constructor.name;\n      message = exception.message;\n      stack = exception.stack;\n    }\n\n    // Set to internal server error in case it did not match above categories.\n    statusCode = statusCode || HttpStatus.INTERNAL_SERVER_ERROR;\n    errorName = errorName || 'InternalException';\n    message = message || 'Internal server error';\n\n    // NOTE: For reference, please check https://cloud.google.com/apis/design/errors\n    const error = {\n      statusCode,\n      message,\n      localizedMessage,\n      errorName,\n      details,\n      // Additional meta added by us.\n      path,\n      requestId,\n      timestamp,\n    };\n    this.logger.warn(requestContext, error.message, {\n      error,\n      stack,\n    });\n\n    // Suppress original internal server error details in prod mode\n    const isProMood = this.config.get('env') !== 'development';\n    if (isProMood && statusCode === HttpStatus.INTERNAL_SERVER_ERROR) {\n      error.message = 'Internal server error';\n    }\n\n    res.status(statusCode).json({ error });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AnalyticsController.html":{"url":"controllers/AnalyticsController.html","title":"controller - AnalyticsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AnalyticsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analytics/controllers/analytics.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                analytics\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAdminAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getAdminAnalytics\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAdminAnalytics(ctx: RequestContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin-dashboard')@ApiOperation({summary: 'Get admin dashboard data'})@ApiResponse({status: undefined, type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/analytics/controllers/analytics.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport { ApiOperation, ApiResponse, ApiTags } from \"@nestjs/swagger\";\n\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { RegisterInput } from \"../../auth/dtos/auth-register-input.dto\";\nimport { AdminAnalyticsOutput } from \"../dtos/admin-analytics-output.dto\";\nimport { AnalyticsService } from \"../services/analytics.service\";\n\n@ApiTags(\"analytics\")\n@Controller(\"analytics\")\nexport class AnalyticsController {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly analyticsService: AnalyticsService\n  ) {\n    this.logger.setContext(AnalyticsController.name);\n  }\n\n  @Get(\"/admin-dashboard\")\n  @ApiOperation({\n    summary: \"Get admin dashboard data\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(AdminAnalyticsOutput),\n  })\n  async getAdminAnalytics(\n    @ReqContext() ctx: RequestContext\n  ): Promise> {\n    const res = await this.analyticsService.getAdminDashboardAnalytics(ctx);\n    return { data: res, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_AnalyticsModule_exports\n\n\n\ncluster_AnalyticsModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nSharedModule->AnalyticsModule\n\n\n\n\n\nAnalyticsService \n\nAnalyticsService \n\nAnalyticsService  -->\n\nAnalyticsModule->AnalyticsService \n\n\n\n\n\nAnalyticsService\n\nAnalyticsService\n\nAnalyticsModule -->\n\nAnalyticsService->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/analytics/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnalyticsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AnalyticsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AnalyticsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { AnalyticsService } from \"./services/analytics.service\";\nimport { AnalyticsController } from \"./controllers/analytics.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [AnalyticsService],\n  controllers: [AnalyticsController],\n  exports: [AnalyticsService],\n})\nexport class AnalyticsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnalyticsService.html":{"url":"injectables/AnalyticsService.html","title":"injectable - AnalyticsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnalyticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analytics/services/analytics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAdminDashboardAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/analytics/services/analytics.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAdminDashboardAnalytics\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAdminDashboardAnalytics(ctx: RequestContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analytics/services/analytics.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { plainToClass } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { UserService } from \"../../user/services/user.service\";\n\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport { AdminAnalyticsOutput } from \"../dtos/admin-analytics-output.dto\";\n\n@Injectable()\nexport class AnalyticsService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(AnalyticsService.name);\n  }\n\n  async getAdminDashboardAnalytics(\n    ctx: RequestContext\n  ): Promise {\n    this.logger.log(ctx, `${this.getAdminDashboardAnalytics.name} was called`);\n\n    const res = Promise.all([\n      this.prismaService.user.count(),\n      this.prismaService.news.count(),\n      this.prismaService.events.count(),\n      this.prismaService.opportunity.count(),\n    ]);\n\n    console.log(\"res\", await res);\n    return plainToClass(\n      AdminAnalyticsOutput,\n      {\n        userCount: (await res)[0],\n        newsCount: (await res)[1],\n        eventCount: (await res)[2],\n        opportunityCount: (await res)[3],\n      },\n\n      {\n        excludeExtraneousValues: true,\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello(ctx: RequestContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\nimport { AppLogger } from './shared/logger/logger.service';\nimport { ReqContext } from './shared/request-context/req-context.decorator';\nimport { RequestContext } from './shared/request-context/request-context.dto';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly appService: AppService,\n  ) {\n    this.logger.setContext(AppController.name);\n  }\n\n  @Get()\n  getHello(@ReqContext() ctx: RequestContext): string {\n    this.logger.log(ctx, 'Hello world from App controller');\n\n    return this.appService.getHello(ctx);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppLogger.html":{"url":"injectables/AppLogger.html","title":"injectable - AppLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                context\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                    Public\n                                setContext\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/logger/logger.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(ctx: RequestContext, message: string, meta?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meta\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Logger\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(ctx: RequestContext, message: string, meta?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meta\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Logger\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(ctx: RequestContext | null, message: string, meta?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meta\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Logger\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    setContext(context: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(ctx: RequestContext, message: string, meta?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meta\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Logger\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(ctx: RequestContext, message: string, meta?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meta\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Logger\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/logger/logger.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/logger/logger.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\nimport { createLogger, Logger, transports } from 'winston';\n\nimport { RequestContext } from '../request-context/request-context.dto';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class AppLogger {\n  private context?: string;\n  private logger: Logger;\n\n  public setContext(context: string): void {\n    this.context = context;\n  }\n\n  constructor() {\n    this.logger = createLogger({\n      transports: [new transports.Console()],\n    });\n  }\n\n  error(\n    ctx: RequestContext,\n    message: string,\n    meta?: Record,\n  ): Logger {\n    const timestamp = new Date().toISOString();\n\n    return this.logger.error({\n      message,\n      contextName: this.context,\n      ctx,\n      timestamp,\n      ...meta,\n    });\n  }\n\n  warn(\n    ctx: RequestContext,\n    message: string,\n    meta?: Record,\n  ): Logger {\n    const timestamp = new Date().toISOString();\n\n    return this.logger.warn({\n      message,\n      contextName: this.context,\n      ctx,\n      timestamp,\n      ...meta,\n    });\n  }\n\n  debug(\n    ctx: RequestContext,\n    message: string,\n    meta?: Record,\n  ): Logger {\n    const timestamp = new Date().toISOString();\n\n    return this.logger.debug({\n      message,\n      contextName: this.context,\n      ctx,\n      timestamp,\n      ...meta,\n    });\n  }\n\n  verbose(\n    ctx: RequestContext,\n    message: string,\n    meta?: Record,\n  ): Logger {\n    const timestamp = new Date().toISOString();\n\n    return this.logger.verbose({\n      message,\n      contextName: this.context,\n      ctx,\n      timestamp,\n      ...meta,\n    });\n  }\n\n  log(\n    ctx: RequestContext | null,\n    message: string,\n    meta?: Record,\n  ): Logger {\n    const timestamp = new Date().toISOString();\n\n    if (!ctx) {\n      return this.logger.info({\n        message,\n        timestamp,\n        ...meta,\n      });\n    }\n\n    return this.logger.info({\n      message,\n      contextName: this.context,\n      ctx,\n      timestamp,\n      ...meta,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppLoggerModule.html":{"url":"modules/AppLoggerModule.html","title":"module - AppLoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppLoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppLoggerModule\n\n\n\ncluster_AppLoggerModule_providers\n\n\n\ncluster_AppLoggerModule_exports\n\n\n\n\nAppLogger \n\nAppLogger \n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\nAppLogger  -->\n\nAppLoggerModule->AppLogger \n\n\n\n\n\nAppLogger\n\nAppLogger\n\nAppLoggerModule -->\n\nAppLogger->AppLoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppLogger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppLogger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { AppLogger } from './logger.service';\n\n@Module({\n  imports: [],\n  providers: [AppLogger],\n  exports: [AppLogger],\n})\nexport class AppLoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnalyticsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nImagekitModule\n\nImagekitModule\n\nAppModule -->\n\nImagekitModule->AppModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nAppModule -->\n\nNewsModule->AppModule\n\n\n\n\n\nOpportunityModule\n\nOpportunityModule\n\nAppModule -->\n\nOpportunityModule->AppModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nAppModule -->\n\nOrganizationModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnalyticsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            ImagekitModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            OpportunityModule\n                        \n                        \n                            OrganizationModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { SharedModule } from \"./shared/shared.module\";\nimport { UserModule } from \"./user/user.module\";\nimport { OrganizationModule } from \"./organization/organization.module\";\nimport { TagsModule } from \"./tags/tags.module\";\nimport { ImagekitModule } from \"./imagekit/imagekit.module\";\nimport { EventsModule } from \"./events/events.module\";\nimport { NewsModule } from \"./news/news.module\";\nimport { OpportunityModule } from \"./opportunity/opportunities.module\";\nimport { AnalyticsModule } from \"./analytics/analytics.module\";\n\n@Module({\n  imports: [\n    SharedModule,\n    UserModule,\n    AuthModule,\n    OrganizationModule,\n    TagsModule,\n    ImagekitModule,\n    EventsModule,\n    NewsModule,\n    OpportunityModule,\n    AnalyticsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(ctx: RequestContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { AppLogger } from './shared/logger/logger.service';\nimport { RequestContext } from './shared/request-context/request-context.dto';\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly logger: AppLogger) {\n    this.logger.setContext(AppService.name);\n  }\n\n  getHello(ctx: RequestContext): string {\n    this.logger.log(ctx, 'Hello world from App service');\n\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                registerLocal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(ctx: RequestContext, _: LoginInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiOperation({summary: 'User login API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})@HttpCode(HttpStatus.OK)@UseGuards(LocalAuthGuard)@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _\n                                            \n                                                            LoginInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     BaseApiResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(ctx: RequestContext, credential: RefreshTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh-token')@ApiOperation({summary: 'Refresh access token API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})@HttpCode(HttpStatus.OK)@UseGuards(JwtRefreshGuard)@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                credential\n                                            \n                                                            RefreshTokenInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        registerLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerLocal(ctx: RequestContext, input: RegisterInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiOperation({summary: 'User registration API'})@ApiResponse({status: undefined, type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            RegisterInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from '../../shared/dtos/base-api-response.dto';\nimport { AppLogger } from '../../shared/logger/logger.service';\nimport { ReqContext } from '../../shared/request-context/req-context.decorator';\nimport { RequestContext } from '../../shared/request-context/request-context.dto';\nimport { LoginInput } from '../dtos/auth-login-input.dto';\nimport { RefreshTokenInput } from '../dtos/auth-refresh-token-input.dto';\nimport { RegisterInput } from '../dtos/auth-register-input.dto';\nimport { RegisterOutput } from '../dtos/auth-register-output.dto';\nimport { AuthTokenOutput } from '../dtos/auth-token-output.dto';\nimport { JwtRefreshGuard } from '../guards/jwt-refresh.guard';\nimport { LocalAuthGuard } from '../guards/local-auth.guard';\nimport { AuthService } from '../services/auth.service';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly logger: AppLogger,\n  ) {\n    this.logger.setContext(AuthController.name);\n  }\n\n  @Post('login')\n  @ApiOperation({\n    summary: 'User login API',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(AuthTokenOutput),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(LocalAuthGuard)\n  @UseInterceptors(ClassSerializerInterceptor)\n  login(\n    @ReqContext() ctx: RequestContext,\n    @Body() _: LoginInput,\n  ): BaseApiResponse {\n    this.logger.log(ctx, `${this.login.name} was called`);\n\n    const authToken = this.authService.login(ctx);\n    return { data: authToken, meta: {} };\n  }\n\n  @Post('register')\n  @ApiOperation({\n    summary: 'User registration API',\n  })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    type: SwaggerBaseApiResponse(RegisterOutput),\n  })\n  async registerLocal(\n    @ReqContext() ctx: RequestContext,\n    @Body() input: RegisterInput,\n  ): Promise> {\n    const registeredUser = await this.authService.register(ctx, input);\n    return { data: registeredUser, meta: {} };\n  }\n\n  @Post('refresh-token')\n  @ApiOperation({\n    summary: 'Refresh access token API',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(AuthTokenOutput),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(JwtRefreshGuard)\n  @UseInterceptors(ClassSerializerInterceptor)\n  async refreshToken(\n    @ReqContext() ctx: RequestContext,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    @Body() credential: RefreshTokenInput,\n  ): Promise> {\n    this.logger.log(ctx, `${this.refreshToken.name} was called`);\n\n    const authToken = await this.authService.refreshToken(ctx);\n    return { data: authToken, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nAuthModule -->\n\nJwtAuthStrategy->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtAuthStrategy\n                        \n                        \n                            JwtRefreshStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { UserModule } from '../user/user.module';\nimport { STRATEGY_JWT_AUTH } from './constants/strategy.constant';\nimport { AuthController } from './controllers/auth.controller';\nimport { AuthService } from './services/auth.service';\nimport { JwtAuthStrategy } from './strategies/jwt-auth.strategy';\nimport { JwtRefreshStrategy } from './strategies/jwt-refresh.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\n\n@Module({\n  imports: [\n    SharedModule,\n    PassportModule.register({ defaultStrategy: STRATEGY_JWT_AUTH }),\n    JwtModule.registerAsync({\n      imports: [SharedModule],\n      useFactory: async (configService: ConfigService) => ({\n        publicKey: configService.get('jwt.publicKey'),\n        privateKey: configService.get('jwt.privateKey'),\n        signOptions: {\n          algorithm: 'RS256',\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    UserModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtAuthStrategy, JwtRefreshStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthToken\n                            \n                            \n                                login\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, configService: ConfigService, logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthToken\n                        \n                    \n                \n            \n            \n                \ngetAuthToken(ctx: RequestContext, user: UserAccessTokenClaims | UserOutput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                        UserAccessTokenClaims | UserOutput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthTokenOutput\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(ctx: RequestContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthTokenOutput\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(ctx: RequestContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(ctx: RequestContext, input: RegisterInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            RegisterInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(ctx: RequestContext, email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { plainToClass } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { UserService } from \"../../user/services/user.service\";\nimport { ROLE } from \"../constants/role.constant\";\nimport { RegisterInput } from \"../dtos/auth-register-input.dto\";\nimport { RegisterOutput } from \"../dtos/auth-register-output.dto\";\nimport {\n  AuthTokenOutput,\n  UserAccessTokenClaims,\n} from \"../dtos/auth-token-output.dto\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(AuthService.name);\n  }\n\n  async validateUser(\n    ctx: RequestContext,\n    email: string,\n    pass: string\n  ): Promise {\n    this.logger.log(ctx, `${this.validateUser.name} was called`);\n\n    // The userService will throw Unauthorized in case of invalid username/password.\n    const user = await this.userService.validateUsernamePassword(\n      ctx,\n      email,\n      pass\n    );\n\n    // Prevent disabled users from logging in.\n    if (!user.isAccountVerified) {\n      throw new UnauthorizedException(\"This account is not verified!\");\n    }\n\n    return user;\n  }\n\n  login(ctx: RequestContext): AuthTokenOutput {\n    this.logger.log(ctx, `${this.login.name} was called`);\n    return this.getAuthToken(ctx, ctx.user!);\n  }\n\n  async register(\n    ctx: RequestContext,\n    input: RegisterInput\n  ): Promise {\n    this.logger.log(ctx, `${this.register.name} was called`);\n\n    // TODO : Setting default role as USER here. Will add option to change this later via ADMIN users.\n    input.roles = [ROLE.USER];\n    input.isAccountDisabled = false;\n\n    const registeredUser = await this.userService.createUser(ctx, input);\n    return plainToClass(RegisterOutput, registeredUser, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async refreshToken(ctx: RequestContext): Promise {\n    this.logger.log(ctx, `${this.refreshToken.name} was called`);\n\n    const user = await this.userService.findById(ctx, ctx.user!.id);\n    if (!user) {\n      throw new UnauthorizedException(\"Invalid user id\");\n    }\n\n    return this.getAuthToken(ctx, user);\n  }\n\n  getAuthToken(\n    ctx: RequestContext,\n    user: UserAccessTokenClaims | UserOutput\n  ): AuthTokenOutput {\n    this.logger.log(ctx, `${this.getAuthToken.name} was called`);\n\n    const subject = { sub: user.id };\n    const payload = {\n      id: user.id,\n      email: user.email,\n    };\n\n    const authToken = {\n      refreshToken: this.jwtService.sign(subject, {\n        expiresIn: this.configService.get(\"jwt.refreshTokenExpiresInSec\"),\n      }),\n      accessToken: this.jwtService.sign(\n        { ...payload, ...subject },\n        { expiresIn: this.configService.get(\"jwt.accessTokenExpiresInSec\") }\n      ),\n    };\n    return plainToClass(AuthTokenOutput, authToken, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthTokenApiResponse.html":{"url":"classes/AuthTokenApiResponse.html","title":"class - AuthTokenApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthTokenApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthTokenOutput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:111\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthTokenOutput.html":{"url":"classes/AuthTokenOutput.html","title":"class - AuthTokenOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthTokenOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-token-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nexport class AuthTokenOutput {\n  @Expose()\n  @ApiProperty()\n  accessToken: string;\n\n  @Expose()\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class UserAccessTokenClaims {\n  @Expose()\n  id: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  fullName: string;\n\n  @Expose()\n  isSuperAdmin: boolean;\n\n  @Expose()\n  isAccountVerified: boolean;\n\n  @Expose()\n  gender: string | null;\n\n  @Expose()\n  phoneCountryCode: string | null;\n\n  @Expose()\n  phoneNumber: string | null;\n}\n\nexport class UserRefreshTokenClaims {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseAclService.html":{"url":"classes/BaseAclService.html","title":"class - BaseAclService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseAclService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/acl/acl.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                aclRules\n                            \n                            \n                                    Public\n                                forActor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                canDo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        aclRules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AclRule[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/shared/acl/acl.service.ts:10\n                        \n                    \n\n            \n                \n                    ACL rules\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forActor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/shared/acl/acl.service.ts:28\n                        \n                    \n\n            \n                \n                    create user specific acl object to check ability to perform any action\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        canDo\n                        \n                    \n                \n            \n            \n                \n                        \n                    canDo(role: ROLE, actions: Action[], ruleCallback?: RuleCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/acl/acl.service.ts:15\n                        \n                    \n\n\n            \n                \n                        Set ACL rule for a role\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            ROLE\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actions\n                                            \n                                                            Action[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ruleCallback\n                                            \n                                                            RuleCallback\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ROLE } from './../../auth/constants/role.constant';\nimport { AclRule, RuleCallback } from './acl-rule.constant';\nimport { Action } from './action.constant';\nimport { Actor } from './actor.constant';\n\nexport class BaseAclService {\n  /**\n   * ACL rules\n   */\n  protected aclRules: AclRule[] = [];\n\n  /**\n   * Set ACL rule for a role\n   */\n  protected canDo(\n    role: ROLE,\n    actions: Action[],\n    ruleCallback?: RuleCallback,\n  ): void {\n    ruleCallback\n      ? this.aclRules.push({ role, actions, ruleCallback })\n      : this.aclRules.push({ role, actions });\n  }\n\n  /**\n   * create user specific acl object to check ability to perform any action\n   */\n  public forActor = (actor: Actor): any => {\n    return {\n      canDoAction: (action: Action, resource?: Resource) => {\n        let canDoAction = false;\n\n        actor.roles.forEach((actorRole) => {\n          //If already has access, return\n          if (canDoAction) return true;\n\n          //find all rules for given user role\n          const aclRules = this.aclRules.filter(\n            (rule) => rule.role === actorRole,\n          );\n\n          //for each rule, check action permission\n          aclRules.forEach((aclRule) => {\n            //If already has access, return\n            if (canDoAction) return true;\n\n            //check action permission\n            const hasActionPermission =\n              aclRule.actions.includes(action) ||\n              aclRule.actions.includes(Action.Manage);\n\n            //check for custom `ruleCallback` callback\n            if (!aclRule.ruleCallback) {\n              canDoAction = hasActionPermission;\n            } else {\n              if (!resource) {\n                throw new Error('Resource is required for ruleCallback');\n              }\n\n              canDoAction =\n                hasActionPermission && aclRule.ruleCallback(resource, actor);\n            }\n          });\n        });\n\n        return canDoAction;\n      },\n    };\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseApiErrorObject.html":{"url":"classes/BaseApiErrorObject.html","title":"class - BaseApiErrorObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseApiErrorObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/base-api-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                details\n                            \n                            \n                                    \n                                    Public\n                                errorName\n                            \n                            \n                                    \n                                    Public\n                                localizedMessage\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    Public\n                                requestId\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        errorName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        localizedMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        requestId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:136\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport {\n  ApiProperty,\n  ApiPropertyOptional,\n  getSchemaPath,\n} from \"@nestjs/swagger\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { EventResponseDto } from \"../../events/dto/events.dto\";\nimport { OrganizationResponseDto } from \"../../organization/dto/organization.dto\";\nimport { OpportunityResponseDto } from \"../../opportunity/dto/opportunities.dto\";\nimport { AuthTokenOutput } from \"../../auth/dtos/auth-token-output.dto\";\nimport { RegisterOutput } from \"../../auth/dtos/auth-register-output.dto\";\nimport { ImagekitResponseDto } from \"../../imagekit/imagekit.dto\";\nimport {\n  UserApiResponse,\n  UserArrayApiResponse,\n  TagApiResponse,\n  TagArrayApiResponse,\n  EventApiResponse,\n  EventArrayApiResponse,\n  OrganizationApiResponse,\n  OrganizationArrayApiResponse,\n  OpportunityApiResponse,\n  OpportunityArrayApiResponse,\n  AuthTokenApiResponse,\n  RegisterApiResponse,\n  ImagekitApiResponse,\n} from \"./specific-api-responses.dto\";\n\n// Keeping this for backward compatibility\nexport class BaseApiResponse {\n  public data: T;\n\n  @ApiProperty({ type: Object })\n  public meta: Record = {};\n}\n\n// API property type definition\ntype ApiPropertyType =\n  | Type\n  | Function\n  | [Function]\n  | string\n  | number\n  | boolean;\n\n// Type mapping dictionary - maps type names to response classes\ninterface TypeMapping {\n  [key: string]: any;\n}\n\n// Non-generic response type mapping\nconst responseTypeMap: TypeMapping = {\n  UserOutput: UserApiResponse,\n  \"UserOutput[]\": UserArrayApiResponse,\n  TagOutputDto: TagApiResponse,\n  \"TagOutputDto[]\": TagArrayApiResponse,\n  EventResponseDto: EventApiResponse,\n  \"EventResponseDto[]\": EventArrayApiResponse,\n  OrganizationResponseDto: OrganizationApiResponse,\n  \"OrganizationResponseDto[]\": OrganizationArrayApiResponse,\n  OpportunityResponseDto: OpportunityApiResponse,\n  \"OpportunityResponseDto[]\": OpportunityArrayApiResponse,\n  AuthTokenOutput: AuthTokenApiResponse,\n  RegisterOutput: RegisterApiResponse,\n  ImagekitResponseDto: ImagekitApiResponse,\n};\n\n/**\n * Returns a proper OpenAPI compatible response class\n * This function avoids using generics in OpenAPI schema generation\n */\nexport function SwaggerBaseApiResponse(\n  type: T\n): any {\n  let typeName: string;\n  if (Array.isArray(type)) {\n    typeName = `${type[0].name}[]`;\n  } else if (typeof type === \"function\") {\n    typeName = (type as Function).name;\n  } else {\n    typeName = String(type);\n  }\n\n  if (responseTypeMap[typeName]) {\n    return responseTypeMap[typeName];\n  }\n\n  const className = `ApiResponseOf${typeName.replace(\"[]\", \"Array\")}`;\n\n  class CustomApiResponse extends BaseApiResponse {\n    @ApiProperty(\n      Array.isArray(type)\n        ? {\n            type: \"array\",\n            items: {\n              $ref: getSchemaPath(type[0]),\n            },\n          }\n        : { type: type as any }\n    )\n    public declare data: any;\n  }\n\n  Object.defineProperty(CustomApiResponse, \"name\", {\n    value: className,\n  });\n\n  return CustomApiResponse;\n}\n\nexport class BaseApiErrorObject {\n  @ApiProperty({ type: Number })\n  public statusCode: number;\n\n  @ApiProperty({ type: String })\n  public message: string;\n\n  @ApiPropertyOptional({ type: String })\n  public localizedMessage: string;\n\n  @ApiProperty({ type: String })\n  public errorName: string;\n\n  @ApiProperty({ type: Object })\n  public details: unknown;\n\n  @ApiProperty({ type: String })\n  public path: string;\n\n  @ApiProperty({ type: String })\n  public requestId: string;\n\n  @ApiProperty({ type: String })\n  public timestamp: string;\n}\n\nexport class BaseApiErrorResponse {\n  @ApiProperty({ type: BaseApiErrorObject })\n  public error: BaseApiErrorObject;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseApiErrorResponse.html":{"url":"classes/BaseApiErrorResponse.html","title":"class - BaseApiErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseApiErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/base-api-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                error\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseApiErrorObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: BaseApiErrorObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:141\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport {\n  ApiProperty,\n  ApiPropertyOptional,\n  getSchemaPath,\n} from \"@nestjs/swagger\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { EventResponseDto } from \"../../events/dto/events.dto\";\nimport { OrganizationResponseDto } from \"../../organization/dto/organization.dto\";\nimport { OpportunityResponseDto } from \"../../opportunity/dto/opportunities.dto\";\nimport { AuthTokenOutput } from \"../../auth/dtos/auth-token-output.dto\";\nimport { RegisterOutput } from \"../../auth/dtos/auth-register-output.dto\";\nimport { ImagekitResponseDto } from \"../../imagekit/imagekit.dto\";\nimport {\n  UserApiResponse,\n  UserArrayApiResponse,\n  TagApiResponse,\n  TagArrayApiResponse,\n  EventApiResponse,\n  EventArrayApiResponse,\n  OrganizationApiResponse,\n  OrganizationArrayApiResponse,\n  OpportunityApiResponse,\n  OpportunityArrayApiResponse,\n  AuthTokenApiResponse,\n  RegisterApiResponse,\n  ImagekitApiResponse,\n} from \"./specific-api-responses.dto\";\n\n// Keeping this for backward compatibility\nexport class BaseApiResponse {\n  public data: T;\n\n  @ApiProperty({ type: Object })\n  public meta: Record = {};\n}\n\n// API property type definition\ntype ApiPropertyType =\n  | Type\n  | Function\n  | [Function]\n  | string\n  | number\n  | boolean;\n\n// Type mapping dictionary - maps type names to response classes\ninterface TypeMapping {\n  [key: string]: any;\n}\n\n// Non-generic response type mapping\nconst responseTypeMap: TypeMapping = {\n  UserOutput: UserApiResponse,\n  \"UserOutput[]\": UserArrayApiResponse,\n  TagOutputDto: TagApiResponse,\n  \"TagOutputDto[]\": TagArrayApiResponse,\n  EventResponseDto: EventApiResponse,\n  \"EventResponseDto[]\": EventArrayApiResponse,\n  OrganizationResponseDto: OrganizationApiResponse,\n  \"OrganizationResponseDto[]\": OrganizationArrayApiResponse,\n  OpportunityResponseDto: OpportunityApiResponse,\n  \"OpportunityResponseDto[]\": OpportunityArrayApiResponse,\n  AuthTokenOutput: AuthTokenApiResponse,\n  RegisterOutput: RegisterApiResponse,\n  ImagekitResponseDto: ImagekitApiResponse,\n};\n\n/**\n * Returns a proper OpenAPI compatible response class\n * This function avoids using generics in OpenAPI schema generation\n */\nexport function SwaggerBaseApiResponse(\n  type: T\n): any {\n  let typeName: string;\n  if (Array.isArray(type)) {\n    typeName = `${type[0].name}[]`;\n  } else if (typeof type === \"function\") {\n    typeName = (type as Function).name;\n  } else {\n    typeName = String(type);\n  }\n\n  if (responseTypeMap[typeName]) {\n    return responseTypeMap[typeName];\n  }\n\n  const className = `ApiResponseOf${typeName.replace(\"[]\", \"Array\")}`;\n\n  class CustomApiResponse extends BaseApiResponse {\n    @ApiProperty(\n      Array.isArray(type)\n        ? {\n            type: \"array\",\n            items: {\n              $ref: getSchemaPath(type[0]),\n            },\n          }\n        : { type: type as any }\n    )\n    public declare data: any;\n  }\n\n  Object.defineProperty(CustomApiResponse, \"name\", {\n    value: className,\n  });\n\n  return CustomApiResponse;\n}\n\nexport class BaseApiErrorObject {\n  @ApiProperty({ type: Number })\n  public statusCode: number;\n\n  @ApiProperty({ type: String })\n  public message: string;\n\n  @ApiPropertyOptional({ type: String })\n  public localizedMessage: string;\n\n  @ApiProperty({ type: String })\n  public errorName: string;\n\n  @ApiProperty({ type: Object })\n  public details: unknown;\n\n  @ApiProperty({ type: String })\n  public path: string;\n\n  @ApiProperty({ type: String })\n  public requestId: string;\n\n  @ApiProperty({ type: String })\n  public timestamp: string;\n}\n\nexport class BaseApiErrorResponse {\n  @ApiProperty({ type: BaseApiErrorObject })\n  public error: BaseApiErrorObject;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseApiException.html":{"url":"classes/BaseApiException.html","title":"class - BaseApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/exceptions/base-api.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                details\n                            \n                            \n                                    Public\n                                localizedMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, status: number, details?: string | Record, localizedMessage?: Record)\n                    \n                \n                        \n                            \n                                Defined in src/shared/exceptions/base-api.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    string | Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedMessage\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | Record | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/exceptions/base-api.exception.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        localizedMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/exceptions/base-api.exception.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class BaseApiException extends HttpException {\n  public localizedMessage: Record | undefined;\n  public details: string | Record | undefined;\n\n  constructor(\n    message: string,\n    status: number,\n    details?: string | Record,\n    localizedMessage?: Record,\n  ) {\n    // Calling parent constructor of base Exception class.\n    super(message, status);\n    this.name = BaseApiException.name;\n    this.localizedMessage = localizedMessage;\n    this.details = details;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseApiResponse.html":{"url":"classes/BaseApiResponse.html","title":"class - BaseApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/base-api-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport {\n  ApiProperty,\n  ApiPropertyOptional,\n  getSchemaPath,\n} from \"@nestjs/swagger\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { EventResponseDto } from \"../../events/dto/events.dto\";\nimport { OrganizationResponseDto } from \"../../organization/dto/organization.dto\";\nimport { OpportunityResponseDto } from \"../../opportunity/dto/opportunities.dto\";\nimport { AuthTokenOutput } from \"../../auth/dtos/auth-token-output.dto\";\nimport { RegisterOutput } from \"../../auth/dtos/auth-register-output.dto\";\nimport { ImagekitResponseDto } from \"../../imagekit/imagekit.dto\";\nimport {\n  UserApiResponse,\n  UserArrayApiResponse,\n  TagApiResponse,\n  TagArrayApiResponse,\n  EventApiResponse,\n  EventArrayApiResponse,\n  OrganizationApiResponse,\n  OrganizationArrayApiResponse,\n  OpportunityApiResponse,\n  OpportunityArrayApiResponse,\n  AuthTokenApiResponse,\n  RegisterApiResponse,\n  ImagekitApiResponse,\n} from \"./specific-api-responses.dto\";\n\n// Keeping this for backward compatibility\nexport class BaseApiResponse {\n  public data: T;\n\n  @ApiProperty({ type: Object })\n  public meta: Record = {};\n}\n\n// API property type definition\ntype ApiPropertyType =\n  | Type\n  | Function\n  | [Function]\n  | string\n  | number\n  | boolean;\n\n// Type mapping dictionary - maps type names to response classes\ninterface TypeMapping {\n  [key: string]: any;\n}\n\n// Non-generic response type mapping\nconst responseTypeMap: TypeMapping = {\n  UserOutput: UserApiResponse,\n  \"UserOutput[]\": UserArrayApiResponse,\n  TagOutputDto: TagApiResponse,\n  \"TagOutputDto[]\": TagArrayApiResponse,\n  EventResponseDto: EventApiResponse,\n  \"EventResponseDto[]\": EventArrayApiResponse,\n  OrganizationResponseDto: OrganizationApiResponse,\n  \"OrganizationResponseDto[]\": OrganizationArrayApiResponse,\n  OpportunityResponseDto: OpportunityApiResponse,\n  \"OpportunityResponseDto[]\": OpportunityArrayApiResponse,\n  AuthTokenOutput: AuthTokenApiResponse,\n  RegisterOutput: RegisterApiResponse,\n  ImagekitResponseDto: ImagekitApiResponse,\n};\n\n/**\n * Returns a proper OpenAPI compatible response class\n * This function avoids using generics in OpenAPI schema generation\n */\nexport function SwaggerBaseApiResponse(\n  type: T\n): any {\n  let typeName: string;\n  if (Array.isArray(type)) {\n    typeName = `${type[0].name}[]`;\n  } else if (typeof type === \"function\") {\n    typeName = (type as Function).name;\n  } else {\n    typeName = String(type);\n  }\n\n  if (responseTypeMap[typeName]) {\n    return responseTypeMap[typeName];\n  }\n\n  const className = `ApiResponseOf${typeName.replace(\"[]\", \"Array\")}`;\n\n  class CustomApiResponse extends BaseApiResponse {\n    @ApiProperty(\n      Array.isArray(type)\n        ? {\n            type: \"array\",\n            items: {\n              $ref: getSchemaPath(type[0]),\n            },\n          }\n        : { type: type as any }\n    )\n    public declare data: any;\n  }\n\n  Object.defineProperty(CustomApiResponse, \"name\", {\n    value: className,\n  });\n\n  return CustomApiResponse;\n}\n\nexport class BaseApiErrorObject {\n  @ApiProperty({ type: Number })\n  public statusCode: number;\n\n  @ApiProperty({ type: String })\n  public message: string;\n\n  @ApiPropertyOptional({ type: String })\n  public localizedMessage: string;\n\n  @ApiProperty({ type: String })\n  public errorName: string;\n\n  @ApiProperty({ type: Object })\n  public details: unknown;\n\n  @ApiProperty({ type: String })\n  public path: string;\n\n  @ApiProperty({ type: String })\n  public requestId: string;\n\n  @ApiProperty({ type: String })\n  public timestamp: string;\n}\n\nexport class BaseApiErrorResponse {\n  @ApiProperty({ type: BaseApiErrorObject })\n  public error: BaseApiErrorObject;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEventDto.html":{"url":"classes/CreateEventDto.html","title":"class - CreateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/events.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                gallery\n                            \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                locationType\n                            \n                            \n                                    \n                                    \n                                organizer\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationLink\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event description', example: 'A leading technology company'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        gallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Gallery iamges', required: false, example: '5551234567'})@ValidateNested({each: true})@Type(undefined)@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        registrationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        registrationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'link', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event name', example: 'Tech Innovations'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class EventsSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsOptional()\n  @IsString()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer?: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  type?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  format?: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Event status\",\n  })\n  @IsBoolean()\n  @IsOptional()\n  isDraft?: boolean;\n}\n\nexport class EventResponseDto {\n  @ApiProperty({\n    description: \"Event id\",\n    example: \"abcd\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  eventGallery: GalleryResponse[];\n\n  @ApiProperty({ description: \"Draft status\" })\n  @Expose()\n  isDraft: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsDto.html":{"url":"classes/CreateNewsDto.html","title":"class - CreateNewsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/dto/news.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                mode\n                            \n                            \n                                    \n                                    \n                                newsLink\n                            \n                            \n                                    \n                                    \n                                publishedDate\n                            \n                            \n                                    \n                                    \n                                publishedYear\n                            \n                            \n                                    \n                                    \n                                source\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/news-banner.jpg'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by', example: 'admin'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News mode', example: 'Online'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newsLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News link', example: 'https://example.com/news-article'})@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Published date', example: '2025-04-15T00:00:00.000Z'})@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publishedYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Published year', example: '2025-01-01T00:00:00.000Z'})@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News source', example: 'Tech News Portal'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News title', example: 'New Technology Breakthrough'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsDate,\n  IsDateString,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { Expose } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\n\nexport class NewsSearchInput extends PaginationParamsDto {\n  @ApiProperty({ required: false })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsArray()\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class CreateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n    example: \"2025-04-15T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n    example: \"2025-01-01T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsUrl()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  contributedBy: string;\n}\n\nexport class UpdateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @IsOptional()\n  mode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Published date\",\n  })\n  @IsOptional()\n  publishedDate?: Date;\n\n  @ApiPropertyOptional({\n    description: \"Published year\",\n  })\n  @IsOptional()\n  publishedYear?: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @IsOptional()\n  newsLink?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n}\n\nexport class NewsResponseDto {\n  @ApiProperty({\n    description: \"News ID\",\n    example: \"clgf7xhig0000qof3m53ibdz1\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @Expose()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @Expose()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n  })\n  @Expose()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n  })\n  @Expose()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @Expose()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiProperty({\n    description: \"Created at\",\n  })\n  @Expose()\n  createdAt: Date;\n\n  @ApiProperty({\n    description: \"Updated at\",\n  })\n  @Expose()\n  updatedAt: Date;\n\n  @ApiPropertyOptional({\n    description: \"Deleted at\",\n  })\n  @IsOptional()\n  @Expose()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOpportunityDto.html":{"url":"classes/CreateOpportunityDto.html","title":"class - CreateOpportunityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOpportunityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/dto/opportunities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                applicationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                duration\n                            \n                            \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                locationType\n                            \n                            \n                                    \n                                    \n                                organizer\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        applicationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity description', example: 'A leading technology company'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'duration', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'opportunity format'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity name', example: 'The Green Fellows Program'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity type'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OpportunitySearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"The Green Fellows Program\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"opportunity format\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"duration\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  duration?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OpportunityResponseDto {\n  @ApiProperty({\n    description: \"Opportunity ID\",\n    example: \"cm92hbrpe00049kz8bwoaz1rh\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  OpportunityGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganizationDto.html":{"url":"classes/CreateOrganizationDto.html","title":"class - CreateOrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/dto/organization.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                gallery\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                logoImageId\n                            \n                            \n                                    \n                                    \n                                logoImageUrl\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneCountryCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization description', example: 'A leading technology company'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization email', example: 'contact@techinnovations.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        gallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Gallery iamges', required: false, example: '5551234567'})@ValidateNested({each: true})@Type(undefined)@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        logoImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Logo image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logoImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Logo image URL', example: 'https://example.com/org-logo.jpg'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization name', example: 'Tech Innovations Inc.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneCountryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone country code', required: false, example: '+1'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone number', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:120\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OrganizationSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  logoImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OrganizationResponseDto {\n  @ApiProperty({\n    description: \"Organization id\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @Expose()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @Expose()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @Expose()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @Expose()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  organizationGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user-create-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                isAccountDisabled\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()@MaxLength(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isAccountDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@Length(6, 100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ROLE[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()@ArrayNotEmpty()@IsEnum(ROLE, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Length(6, 100)@IsAlphanumeric()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  ArrayNotEmpty,\n  IsAlphanumeric,\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n  MaxLength,\n} from 'class-validator';\n\nimport { ROLE } from '../../auth/constants/role.constant';\n\nexport class CreateUserInput {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Length(6, 100)\n  @IsAlphanumeric()\n  username: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @Length(6, 100)\n  password: string;\n\n  @ApiProperty()\n  @IsArray()\n  @ArrayNotEmpty()\n  @IsEnum(ROLE, { each: true })\n  roles: ROLE[];\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  @MaxLength(100)\n  email: string;\n\n  @ApiProperty()\n  @IsBoolean()\n  isAccountDisabled: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventApiResponse.html":{"url":"classes/EventApiResponse.html","title":"class - EventApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventArrayApiResponse.html":{"url":"classes/EventArrayApiResponse.html","title":"class - EventArrayApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventArrayApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventResponseDto.html":{"url":"classes/EventResponseDto.html","title":"class - EventResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/events.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                eventGallery\n                            \n                            \n                                    \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isDraft\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                locationType\n                            \n                            \n                                    \n                                    \n                                    \n                                organizer\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationLink\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:470\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:462\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:456\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:430\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:396\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:448\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event description', example: 'A leading technology company'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:361\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        eventGallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Gallery', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:483\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:389\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event id', example: 'abcd'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:338\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Draft status'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:487\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:368\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:375\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:353\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        registrationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:412\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        registrationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'link', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:421\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:475\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:404\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:439\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags IDs', type: undefined, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:479\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event name', example: 'Tech Innovations'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:346\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:382\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class EventsSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsOptional()\n  @IsString()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer?: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  type?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  format?: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Event status\",\n  })\n  @IsBoolean()\n  @IsOptional()\n  isDraft?: boolean;\n}\n\nexport class EventResponseDto {\n  @ApiProperty({\n    description: \"Event id\",\n    example: \"abcd\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  eventGallery: GalleryResponse[];\n\n  @ApiProperty({ description: \"Draft status\" })\n  @Expose()\n  isDraft: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventsController.html":{"url":"controllers/EventsController.html","title":"controller - EventsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/controllers/events.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                events\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addEvent\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteEvent\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getEvents\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOneEvent\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    addEvent(ctx: RequestContext, payload: CreateEventDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Post()@ApiOperation({summary: 'Add events API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/events/controllers/events.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateEventDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEvent(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Delete('/:id')@ApiOperation({summary: 'Delete one events API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/events/controllers/events.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEvents(ctx: RequestContext, query: EventsSearchInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get events API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/events/controllers/events.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            EventsSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOneEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneEvent(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get('/:id')@ApiOperation({summary: 'Get one events API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/events/controllers/events.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEvent(ctx: RequestContext, id: string, payload: UpdateEventDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Patch('/:id')@ApiOperation({summary: 'Update one events API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/events/controllers/events.controller.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateEventDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { EventsService } from \"../services/events.service\";\nimport {\n  CreateEventDto,\n  EventResponseDto,\n  EventsSearchInput,\n  UpdateEventDto,\n} from \"../dto/events.dto\";\n\n@ApiTags(\"events\")\n@Controller(\"events\")\nexport class EventsController {\n  constructor(\n    private readonly eventsService: EventsService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(EventsController.name);\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get events API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([EventResponseDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getEvents(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: EventsSearchInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.getEvents.name} was called`);\n\n    const { events, count } = await this.eventsService.getEvents(ctx, query);\n    return { data: events, meta: { count } };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post()\n  @ApiOperation({\n    summary: \"Add events API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(EventResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async addEvent(\n    @ReqContext() ctx: RequestContext,\n    @Body() payload: CreateEventDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.addEvent.name} was called`);\n\n    const event = await this.eventsService.addEvent(ctx, payload);\n    return { data: event, meta: {} };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"/:id\")\n  @ApiOperation({\n    summary: \"Get one events API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(EventResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOneEvent(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOneEvent.name} was called`);\n\n    const event = await this.eventsService.getOneEvent(ctx, id);\n    return { data: event, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Delete(\"/:id\")\n  @ApiOperation({\n    summary: \"Delete one events API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(EventResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async deleteEvent(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.deleteEvent.name} was called`);\n\n    const event = await this.eventsService.deleteEvent(ctx, id);\n    return { data: event, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Patch(\"/:id\")\n  @ApiOperation({\n    summary: \"Update one events API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(EventResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async updateEvent(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string,\n    @Body() payload: UpdateEventDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.updateEvent.name} was called`);\n\n    console.log(\"body payload\", payload);\n\n    const event = await this.eventsService.updateEvent(ctx, id, payload);\n    return { data: event, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nEventsModule -->\n\nJwtAuthStrategy->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/events/events.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EventsService\n                        \n                        \n                            JwtAuthStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EventsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { JwtAuthStrategy } from \"../auth/strategies/jwt-auth.strategy\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { EventsService } from \"./services/events.service\";\nimport { EventsController } from \"./controllers/events.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [EventsService, JwtAuthStrategy],\n  controllers: [EventsController],\n})\nexport class EventsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventsSearchInput.html":{"url":"classes/EventsSearchInput.html","title":"class - EventsSearchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventsSearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/events.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationParamsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: undefined})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class EventsSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsOptional()\n  @IsString()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer?: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  type?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  format?: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Event status\",\n  })\n  @IsBoolean()\n  @IsOptional()\n  isDraft?: boolean;\n}\n\nexport class EventResponseDto {\n  @ApiProperty({\n    description: \"Event id\",\n    example: \"abcd\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  eventGallery: GalleryResponse[];\n\n  @ApiProperty({ description: \"Draft status\" })\n  @Expose()\n  isDraft: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/services/events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addEvent\n                            \n                            \n                                    Async\n                                deleteEvent\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                            \n                                    Async\n                                getOneEvent\n                            \n                            \n                                    Async\n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/events/services/events.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    addEvent(ctx: RequestContext, payload: CreateEventDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/services/events.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateEventDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEvent(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/services/events.service.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEvents(ctx: RequestContext, query: EventsSearchInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/services/events.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            EventsSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneEvent(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/services/events.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEvent(ctx: RequestContext, id: string, payload: UpdateEventDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/services/events.service.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateEventDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { plainToClass, plainToInstance } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport {\n  CreateEventDto,\n  EventResponseDto,\n  EventsSearchInput,\n  UpdateEventDto,\n} from \"../dto/events.dto\";\nimport { applyFilters } from \"../../shared/filters/prisma-filter.filter\";\nimport { Prisma } from \"@prisma/client\";\nimport { createSearchKey } from \"../../shared/utils/createSearchKey\";\n\n@Injectable()\nexport class EventsService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(EventsService.name);\n  }\n\n  async getEvents(\n    ctx: RequestContext,\n    query: EventsSearchInput\n  ): Promise {\n    this.logger.log(ctx, `${this.getEvents.name} was called`);\n    const { limit, offset, ...restQuery } = query;\n\n    const { whereBuilder: whereQuery } =\n      await applyFilters({\n        appliedFiltersInput: restQuery,\n        availableFilters: {\n          title: async ({ filter }) => {\n            const searchKey = createSearchKey(String(filter), \"AND\");\n            return {\n              where: {\n                OR: [\n                  {\n                    title: {\n                      search: searchKey,\n                      mode: \"insensitive\",\n                    },\n                  },\n                  {\n                    title: {\n                      contains: String(filter),\n                      mode: \"insensitive\",\n                    },\n                  },\n                ],\n              },\n            };\n          },\n          tagIds: async ({ filter }) => {\n            return {\n              where: {\n                tags: {\n                  some: {\n                    id: {\n                      in: filter as string[],\n                    },\n                  },\n                },\n              },\n            };\n          },\n        },\n      });\n\n    const events = await this.prismaService.events.findMany({\n      where: {\n        AND: [whereQuery],\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n      },\n      take: limit,\n      skip: offset,\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    const eventCount = await this.prismaService.events.count({\n      where: {\n        AND: [whereQuery],\n      },\n    });\n\n    return {\n      events: plainToInstance(EventResponseDto, events, {\n        excludeExtraneousValues: true,\n      }),\n      count: eventCount,\n    };\n  }\n\n  async getOneEvent(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.getOneEvent.name} was called`);\n\n    const event = await this.prismaService.events.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n        eventGallery: true,\n      },\n    });\n\n    if (!event) {\n      throw new NotFoundException(\"Event not found\");\n    }\n\n    return plainToInstance(EventResponseDto, event, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async addEvent(\n    ctx: RequestContext,\n    payload: CreateEventDto\n  ): Promise {\n    this.logger.log(ctx, `${this.addEvent.name} was called`);\n    const { address, tagIds, gallery, socials, ...restPayload } = payload;\n\n    const event = await this.prismaService.events.create({\n      data: {\n        ...restPayload,\n        ...(address && {\n          address: {\n            create: {\n              ...address,\n            },\n          },\n        }),\n        ...(tagIds && {\n          tags: {\n            connect: tagIds?.map((id) => ({\n              id,\n              isEventTag: true,\n            })),\n          },\n        }),\n        ...(gallery && {\n          eventGallery: {\n            create: gallery,\n          },\n        }),\n        ...(socials && {\n          socials: {\n            create: {\n              data: JSON.parse(JSON.stringify(socials)),\n            },\n          },\n        }),\n      },\n    });\n\n    return plainToClass(EventResponseDto, event, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async deleteEvent(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.deleteEvent.name} was called`);\n\n    const event = await this.prismaService.events.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!event) {\n      throw new NotFoundException(\"Event not found\");\n    }\n\n    await this.prismaService.events.delete({\n      where: {\n        id: event.id,\n      },\n    });\n\n    return plainToInstance(EventResponseDto, event, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async updateEvent(\n    ctx: RequestContext,\n    id: string,\n    payload: UpdateEventDto\n  ): Promise {\n    this.logger.log(ctx, `${this.updateEvent.name} was called`);\n    const event = await this.prismaService.events.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!event) {\n      throw new NotFoundException(\"Event not found!\");\n    }\n\n    const { address, tagIds, gallery, socials, ...restPayload } = payload;\n\n    const eventUpdate = await this.prismaService.events.update({\n      where: {\n        id: event.id,\n      },\n      data: {\n        ...restPayload,\n        ...(socials && {\n          socials: {\n            upsert: {\n              create: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n              update: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n            },\n          },\n        }),\n        ...(address && {\n          address: {\n            upsert: {\n              create: address,\n              update: address,\n            },\n          },\n        }),\n        ...(tagIds && {\n          tags: {\n            //set empty then create new records\n            // do not use deletemany here since it maybe used elsewhere\n            set: [],\n            connect: tagIds?.map((id) => ({\n              id,\n              isEventTag: true,\n            })),\n          },\n        }),\n        ...(gallery && {\n          eventGallery: {\n            deleteMany: {},\n            create: gallery,\n          },\n        }),\n      },\n    });\n\n    return plainToClass(EventResponseDto, eventUpdate, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GalleryInput.html":{"url":"classes/GalleryInput.html","title":"class - GalleryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GalleryInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/gallery.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                publicUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sourceId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Public URL'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Source id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\nimport { IsString } from \"class-validator\";\n\nexport class GalleryInput {\n  @ApiProperty({\n    description: \"Source id\",\n  })\n  @IsString()\n  sourceId?: string;\n\n  @ApiProperty({\n    description: \"Public URL\",\n  })\n  @IsString()\n  publicUrl: string;\n}\n\nexport class GalleryResponse {\n  @Expose()\n  id: string;\n\n  @Expose()\n  sourceId: string;\n\n  @Expose()\n  publicUrl: string;\n\n  @Expose()\n  createdAt: string;\n\n  @Expose()\n  updatedAt: string;\n\n  @Expose()\n  deletedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GalleryResponse.html":{"url":"classes/GalleryResponse.html","title":"class - GalleryResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GalleryResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/gallery.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                publicUrl\n                            \n                            \n                                    \n                                sourceId\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        publicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\nimport { IsString } from \"class-validator\";\n\nexport class GalleryInput {\n  @ApiProperty({\n    description: \"Source id\",\n  })\n  @IsString()\n  sourceId?: string;\n\n  @ApiProperty({\n    description: \"Public URL\",\n  })\n  @IsString()\n  publicUrl: string;\n}\n\nexport class GalleryResponse {\n  @Expose()\n  id: string;\n\n  @Expose()\n  sourceId: string;\n\n  @Expose()\n  publicUrl: string;\n\n  @Expose()\n  createdAt: string;\n\n  @Expose()\n  updatedAt: string;\n\n  @Expose()\n  deletedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagekitApiResponse.html":{"url":"classes/ImagekitApiResponse.html","title":"class - ImagekitApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagekitApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImagekitResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:128\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagekitAuthParams.html":{"url":"classes/ImagekitAuthParams.html","title":"class - ImagekitAuthParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagekitAuthParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagekit/imagekit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                expire\n                            \n                            \n                                    \n                                    \n                                signature\n                            \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        expire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit token expiry', example: 12345})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit auth sinature', example: 12345})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit token', example: 'asdasd'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nclass ImagekitAuthParams {\n  @ApiProperty({\n    description: \"Imagekit token\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  token: string;\n\n  @ApiProperty({\n    description: \"Imagekit token expiry\",\n    example: 12345,\n  })\n  @Expose()\n  expire: number;\n\n  @ApiProperty({\n    description: \"Imagekit auth sinature\",\n    example: 12345,\n  })\n  @Expose()\n  signature: string;\n}\n\nexport class ImagekitResponseDto {\n  @ApiProperty({\n    description: \"Imagekit auth \",\n  })\n  @Expose()\n  ikAuthParams: ImagekitAuthParams;\n\n  @ApiProperty({\n    description: \"Imagekit pub key \",\n  })\n  @Expose()\n  publicKey: string;\n\n  @ApiProperty({\n    description: \"Imagekit endpoint\",\n  })\n  @Expose()\n  endpoint: string;\n\n  @ApiProperty({\n    description: \"Upload folder\",\n  })\n  @Expose()\n  folder: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagekitController.html":{"url":"controllers/ImagekitController.html","title":"controller - ImagekitController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagekitController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagekit/imagekit.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                imagekit\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAuthParamas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAuthParamas\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthParamas(ctx: RequestContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get imagekit auth params'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/imagekit/imagekit.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  HttpStatus,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { AppLogger } from \"../shared/logger/logger.service\";\nimport { JwtAuthGuard } from \"../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../shared/dtos/base-api-response.dto\";\nimport { ImagekitResponseDto } from \"./imagekit.dto\";\nimport { ImagekitService } from \"./imagekit.service\";\nimport { ReqContext } from \"../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../shared/request-context/request-context.dto\";\n\n@ApiTags(\"imagekit\")\n@Controller(\"imagekit\")\nexport class ImagekitController {\n  constructor(\n    private readonly imagekitService: ImagekitService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(ImagekitController.name);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get imagekit auth params\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(ImagekitResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getAuthParamas(\n    @ReqContext() ctx: RequestContext\n  ): Promise> {\n    this.logger.log(ctx, `${this.getAuthParamas.name} was called`);\n\n    const ikConfig = await this.imagekitService.getAuthParams(ctx);\n    return { data: ikConfig, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagekitModule.html":{"url":"modules/ImagekitModule.html","title":"module - ImagekitModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagekitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImagekitModule\n\n\n\ncluster_ImagekitModule_providers\n\n\n\ncluster_ImagekitModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nImagekitModule\n\nImagekitModule\n\nImagekitModule -->\n\nSharedModule->ImagekitModule\n\n\n\n\n\nImagekitService\n\nImagekitService\n\nImagekitModule -->\n\nImagekitService->ImagekitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/imagekit/imagekit.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImagekitService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagekitController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { ImagekitService } from \"./imagekit.service\";\nimport { ImagekitController } from \"./imagekit.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [ImagekitService],\n  controllers: [ImagekitController],\n})\nexport class ImagekitModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagekitResponseDto.html":{"url":"classes/ImagekitResponseDto.html","title":"class - ImagekitResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagekitResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagekit/imagekit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                endpoint\n                            \n                            \n                                    \n                                    \n                                folder\n                            \n                            \n                                    \n                                    \n                                ikAuthParams\n                            \n                            \n                                    \n                                    \n                                publicKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit endpoint'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        folder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Upload folder'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ikAuthParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImagekitAuthParams\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit auth '})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publicKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit pub key '})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nclass ImagekitAuthParams {\n  @ApiProperty({\n    description: \"Imagekit token\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  token: string;\n\n  @ApiProperty({\n    description: \"Imagekit token expiry\",\n    example: 12345,\n  })\n  @Expose()\n  expire: number;\n\n  @ApiProperty({\n    description: \"Imagekit auth sinature\",\n    example: 12345,\n  })\n  @Expose()\n  signature: string;\n}\n\nexport class ImagekitResponseDto {\n  @ApiProperty({\n    description: \"Imagekit auth \",\n  })\n  @Expose()\n  ikAuthParams: ImagekitAuthParams;\n\n  @ApiProperty({\n    description: \"Imagekit pub key \",\n  })\n  @Expose()\n  publicKey: string;\n\n  @ApiProperty({\n    description: \"Imagekit endpoint\",\n  })\n  @Expose()\n  endpoint: string;\n\n  @ApiProperty({\n    description: \"Upload folder\",\n  })\n  @Expose()\n  folder: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagekitService.html":{"url":"injectables/ImagekitService.html","title":"injectable - ImagekitService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImagekitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagekit/imagekit.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                imagekit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAuthParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/imagekit/imagekit.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAuthParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthParams(ctx: RequestContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/imagekit/imagekit.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        imagekit\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ImageKit\n\n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AppLogger } from \"../shared/logger/logger.service\";\nimport { RequestContext } from \"../shared/request-context/request-context.dto\";\nimport { ConfigService } from \"@nestjs/config\";\nimport ImageKit from \"imagekit\";\nimport { ImagekitResponseDto } from \"./imagekit.dto\";\n\n@Injectable()\nexport class ImagekitService {\n  private readonly imagekit: ImageKit;\n\n  constructor(\n    private configService: ConfigService,\n    private readonly logger: AppLogger\n  ) {\n    this.imagekit = new ImageKit({\n      publicKey: this.configService.get(\"imagekit.publicKey\") as string,\n      privateKey: this.configService.get(\"imagekit.privateKey\") as string,\n      urlEndpoint: this.configService.get(\"imagekit.urlEndpoint\") as string,\n    });\n    this.logger.setContext(ImagekitService.name);\n  }\n\n  async getAuthParams(ctx: RequestContext): Promise {\n    this.logger.log(ctx, `${this.getAuthParams.name} was called`);\n    const ikAuthParams = this.imagekit.getAuthenticationParameters();\n    return {\n      ikAuthParams,\n      publicKey: this.configService.get(\"imagekit.publicKey\") as string,\n      endpoint: this.configService.get(\"imagekit.urlEndpoint\") as string,\n      folder: this.configService.get(\"env\") as string,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard(STRATEGY_JWT_AUTH)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { Observable } from \"rxjs\";\n\nimport { STRATEGY_JWT_AUTH } from \"../constants/strategy.constant\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(STRATEGY_JWT_AUTH) {\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise | Observable {\n    // Add your custom authentication logic here\n    // for example, call super.logIn(request) to establish a session.\n    return super.canActivate(context);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  handleRequest(err: any, user: any, info: any) {\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException(`${info}`);\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthStrategy.html":{"url":"injectables/JwtAuthStrategy.html","title":"injectable - JwtAuthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt-auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(\n  Strategy,\n  STRATEGY_JWT_AUTH\n)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt-auth.strategy.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt-auth.strategy.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\n\nimport { STRATEGY_JWT_AUTH } from \"../constants/strategy.constant\";\nimport { UserAccessTokenClaims } from \"../dtos/auth-token-output.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\n\n@Injectable()\nexport class JwtAuthStrategy extends PassportStrategy(\n  Strategy,\n  STRATEGY_JWT_AUTH\n) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly prismaService: PrismaService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get(\"jwt.publicKey\")!,\n      algorithms: [\"RS256\"],\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  async validate(payload: any): Promise {\n    // Passport automatically creates a user object, based on the value we return from the validate() method,\n    // and assigns it to the Request object as req.user\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    });\n    if (!user) return null;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-refresh.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard(STRATEGY_JWT_REFRESH)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-refresh.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-refresh.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\n\nimport { STRATEGY_JWT_REFRESH } from '../constants/strategy.constant';\n\n@Injectable()\nexport class JwtRefreshGuard extends AuthGuard(STRATEGY_JWT_REFRESH) {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    // Add your custom authentication logic here\n    // for example, call super.logIn(request) to establish a session.\n    return super.canActivate(context);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  handleRequest(err: any, user: any, info: any) {\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException(`${info}`);\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshStrategy.html":{"url":"injectables/JwtRefreshStrategy.html","title":"injectable - JwtRefreshStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt-refresh.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(\n  Strategy,\n  STRATEGY_JWT_REFRESH,\n)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt-refresh.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt-refresh.strategy.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { STRATEGY_JWT_REFRESH } from '../constants/strategy.constant';\nimport { UserRefreshTokenClaims } from '../dtos/auth-token-output.dto';\n\n@Injectable()\nexport class JwtRefreshStrategy extends PassportStrategy(\n  Strategy,\n  STRATEGY_JWT_REFRESH,\n) {\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromBodyField('refreshToken'),\n      secretOrKey: configService.get('jwt.publicKey')!,\n      algorithms: ['RS256'],\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  async validate(payload: any): Promise {\n    // Passport automatically creates a user object, based on the value we return from the validate() method,\n    // and assigns it to the Request object as req.user\n    return { id: payload.sub };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard(STRATEGY_LOCAL)\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\nimport { STRATEGY_LOCAL } from '../constants/strategy.constant';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard(STRATEGY_LOCAL) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(Strategy, STRATEGY_LOCAL)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: Request, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/local.strategy.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { Strategy } from 'passport-local';\n\nimport { AppLogger } from '../../shared/logger/logger.service';\nimport { createRequestContext } from '../../shared/request-context/util';\nimport { STRATEGY_LOCAL } from '../constants/strategy.constant';\nimport { UserAccessTokenClaims } from '../dtos/auth-token-output.dto';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy, STRATEGY_LOCAL) {\n  constructor(\n    private authService: AuthService,\n    private readonly logger: AppLogger,\n  ) {\n    // Add option passReqToCallback: true to configure strategy to be request-scoped.\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n      passReqToCallback: true,\n    });\n    this.logger.setContext(LocalStrategy.name);\n  }\n\n  async validate(\n    request: Request,\n    email: string,\n    password: string,\n  ): Promise {\n    const ctx = createRequestContext(request);\n\n    this.logger.log(ctx, `${this.validate.name} was called`);\n\n    const user = await this.authService.validateUser(ctx, email, password);\n    // Passport automatically creates a user object, based on the value we return from the validate() method,\n    // and assigns it to the Request object as req.user\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/logging.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appLogger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/shared/interceptors/logging.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appLogger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/logging.interceptor.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AppLogger } from '../logger/logger.service';\nimport { createRequestContext } from '../request-context/util';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  constructor(private appLogger: AppLogger) {\n    this.appLogger.setContext(LoggingInterceptor.name);\n  }\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    const method = request.method;\n    const ctx = createRequestContext(request);\n\n    const now = Date.now();\n    return next.handle().pipe(\n      tap(() => {\n        const response = context.switchToHttp().getResponse();\n        const statusCode = response.statusCode;\n\n        const responseTime = Date.now() - now;\n\n        const resData = { method, statusCode, responseTime };\n\n        this.appLogger.log(ctx, 'Request completed', { resData });\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginInput.html":{"url":"classes/LoginInput.html","title":"class - LoginInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-login-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty()@IsEmail()@MaxLength(200)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-login-input.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-login-input.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MaxLength } from 'class-validator';\n\nexport class LoginInput {\n  @IsNotEmpty()\n  @ApiProperty()\n  @IsEmail()\n  @MaxLength(200)\n  email: string;\n\n  @IsNotEmpty()\n  @ApiProperty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/controllers/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addNews\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteNews\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getNews\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOneNews\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateNews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNews(ctx: RequestContext, payload: CreateNewsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Post()@ApiOperation({summary: 'Add news API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/news/controllers/news.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateNewsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteNews(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Delete('/:id')@ApiOperation({summary: 'Delete one news item API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/news/controllers/news.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNews(ctx: RequestContext, query: NewsSearchInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get news API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/news/controllers/news.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            NewsSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOneNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneNews(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get('/:id')@ApiOperation({summary: 'Get one news item API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/news/controllers/news.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateNews(ctx: RequestContext, id: string, payload: UpdateNewsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Patch('/:id')@ApiOperation({summary: 'Update one news item API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/news/controllers/news.controller.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateNewsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { NewsService } from \"../services/news.service\";\nimport {\n  CreateNewsDto,\n  NewsResponseDto,\n  NewsSearchInput,\n  UpdateNewsDto,\n} from \"../dto/news.dto\";\n\n@ApiTags(\"news\")\n@Controller(\"news\")\nexport class NewsController {\n  constructor(\n    private readonly newsService: NewsService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(NewsController.name);\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get news API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([NewsResponseDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getNews(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: NewsSearchInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.getNews.name} was called`);\n\n    const { news, count } = await this.newsService.getNews(ctx, query);\n    return { data: news, meta: { count } };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post()\n  @ApiOperation({\n    summary: \"Add news API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(NewsResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async addNews(\n    @ReqContext() ctx: RequestContext,\n    @Body() payload: CreateNewsDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.addNews.name} was called`);\n\n    const news = await this.newsService.addNews(ctx, payload);\n    return { data: news, meta: {} };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"/:id\")\n  @ApiOperation({\n    summary: \"Get one news item API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(NewsResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOneNews(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOneNews.name} was called`);\n\n    const news = await this.newsService.getOneNews(ctx, id);\n    return { data: news, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Delete(\"/:id\")\n  @ApiOperation({\n    summary: \"Delete one news item API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(NewsResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async deleteNews(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.deleteNews.name} was called`);\n\n    const news = await this.newsService.deleteNews(ctx, id);\n    return { data: news, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Patch(\"/:id\")\n  @ApiOperation({\n    summary: \"Update one news item API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(NewsResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async updateNews(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string,\n    @Body() payload: UpdateNewsDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.updateNews.name} was called`);\n\n    const news = await this.newsService.updateNews(ctx, id, payload);\n    return { data: news, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nSharedModule->NewsModule\n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nNewsModule -->\n\nJwtAuthStrategy->NewsModule\n\n\n\n\n\nNewsService\n\nNewsService\n\nNewsModule -->\n\nNewsService->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAuthStrategy\n                        \n                        \n                            NewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { JwtAuthStrategy } from \"../auth/strategies/jwt-auth.strategy\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { NewsService } from \"./services/news.service\";\nimport { NewsController } from \"./controllers/news.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [NewsService, JwtAuthStrategy],\n  controllers: [NewsController],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponseDto.html":{"url":"classes/NewsResponseDto.html","title":"class - NewsResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/dto/news.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                mode\n                            \n                            \n                                    \n                                    \n                                    \n                                newsLink\n                            \n                            \n                                    \n                                    \n                                publishedDate\n                            \n                            \n                                    \n                                    \n                                publishedYear\n                            \n                            \n                                    \n                                    \n                                    \n                                source\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:237\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/news-banner.jpg'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:231\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by', example: 'admin'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:249\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Created at'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:255\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Deleted at'})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:268\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News ID', example: 'clgf7xhig0000qof3m53ibdz1'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News mode', example: 'Online'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:203\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        newsLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News link', example: 'https://example.com/news-article'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:223\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Published date'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:209\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publishedYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Published year'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:215\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News source', example: 'Tech News Portal'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:195\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags IDs', type: undefined, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:241\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News title', example: 'New Technology Breakthrough'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:187\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Updated at'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:261\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsDate,\n  IsDateString,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { Expose } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\n\nexport class NewsSearchInput extends PaginationParamsDto {\n  @ApiProperty({ required: false })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsArray()\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class CreateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n    example: \"2025-04-15T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n    example: \"2025-01-01T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsUrl()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  contributedBy: string;\n}\n\nexport class UpdateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @IsOptional()\n  mode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Published date\",\n  })\n  @IsOptional()\n  publishedDate?: Date;\n\n  @ApiPropertyOptional({\n    description: \"Published year\",\n  })\n  @IsOptional()\n  publishedYear?: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @IsOptional()\n  newsLink?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n}\n\nexport class NewsResponseDto {\n  @ApiProperty({\n    description: \"News ID\",\n    example: \"clgf7xhig0000qof3m53ibdz1\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @Expose()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @Expose()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n  })\n  @Expose()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n  })\n  @Expose()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @Expose()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiProperty({\n    description: \"Created at\",\n  })\n  @Expose()\n  createdAt: Date;\n\n  @ApiProperty({\n    description: \"Updated at\",\n  })\n  @Expose()\n  updatedAt: Date;\n\n  @ApiPropertyOptional({\n    description: \"Deleted at\",\n  })\n  @IsOptional()\n  @Expose()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsSearchInput.html":{"url":"classes/NewsSearchInput.html","title":"class - NewsSearchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsSearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/dto/news.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationParamsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: undefined})@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsDate,\n  IsDateString,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { Expose } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\n\nexport class NewsSearchInput extends PaginationParamsDto {\n  @ApiProperty({ required: false })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsArray()\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class CreateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n    example: \"2025-04-15T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n    example: \"2025-01-01T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsUrl()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  contributedBy: string;\n}\n\nexport class UpdateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @IsOptional()\n  mode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Published date\",\n  })\n  @IsOptional()\n  publishedDate?: Date;\n\n  @ApiPropertyOptional({\n    description: \"Published year\",\n  })\n  @IsOptional()\n  publishedYear?: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @IsOptional()\n  newsLink?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n}\n\nexport class NewsResponseDto {\n  @ApiProperty({\n    description: \"News ID\",\n    example: \"clgf7xhig0000qof3m53ibdz1\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @Expose()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @Expose()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n  })\n  @Expose()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n  })\n  @Expose()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @Expose()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiProperty({\n    description: \"Created at\",\n  })\n  @Expose()\n  createdAt: Date;\n\n  @ApiProperty({\n    description: \"Updated at\",\n  })\n  @Expose()\n  updatedAt: Date;\n\n  @ApiPropertyOptional({\n    description: \"Deleted at\",\n  })\n  @IsOptional()\n  @Expose()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsService.html":{"url":"injectables/NewsService.html","title":"injectable - NewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/services/news.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNews\n                            \n                            \n                                    Async\n                                deleteNews\n                            \n                            \n                                    Async\n                                getNews\n                            \n                            \n                                    Async\n                                getOneNews\n                            \n                            \n                                    Async\n                                updateNews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/news/services/news.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNews(ctx: RequestContext, payload: CreateNewsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/news/services/news.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateNewsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteNews(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/news/services/news.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNews(ctx: RequestContext, query: NewsSearchInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/news/services/news.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            NewsSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneNews(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/news/services/news.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateNews(ctx: RequestContext, id: string, payload: UpdateNewsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/news/services/news.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateNewsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { plainToClass, plainToInstance } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport {\n  CreateNewsDto,\n  NewsResponseDto,\n  NewsSearchInput,\n  UpdateNewsDto,\n} from \"../dto/news.dto\";\nimport { applyFilters } from \"../../shared/filters/prisma-filter.filter\";\nimport { Prisma } from \"@prisma/client\";\nimport { createSearchKey } from \"../../shared/utils/createSearchKey\";\n\n@Injectable()\nexport class NewsService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(NewsService.name);\n  }\n\n  async getNews(\n    ctx: RequestContext,\n    query: NewsSearchInput\n  ): Promise {\n    this.logger.log(ctx, `${this.getNews.name} was called`);\n    const { limit, offset, ...restQuery } = query;\n\n    const { whereBuilder: whereQuery } =\n      await applyFilters({\n        appliedFiltersInput: restQuery,\n        availableFilters: {\n          title: async ({ filter }) => {\n            const searchKey = createSearchKey(String(filter), \"AND\");\n            return {\n              where: {\n                OR: [\n                  {\n                    title: {\n                      search: searchKey,\n                      mode: \"insensitive\",\n                    },\n                  },\n                  {\n                    title: {\n                      contains: String(filter),\n                      mode: \"insensitive\",\n                    },\n                  },\n                ],\n              },\n            };\n          },\n          tagIds: async ({ filter }) => {\n            return {\n              where: {\n                tags: {\n                  some: {\n                    id: {\n                      in: filter as string[],\n                    },\n                  },\n                },\n              },\n            };\n          },\n        },\n      });\n\n    const news = await this.prismaService.news.findMany({\n      where: {\n        AND: [whereQuery],\n      },\n      include: {\n        tags: true,\n      },\n      take: limit,\n      skip: offset,\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    const newsCount = await this.prismaService.news.count({\n      where: {\n        AND: [whereQuery],\n      },\n    });\n\n    return {\n      news: plainToInstance(NewsResponseDto, news, {\n        excludeExtraneousValues: true,\n      }),\n      count: newsCount,\n    };\n  }\n\n  async getOneNews(ctx: RequestContext, id: string): Promise {\n    this.logger.log(ctx, `${this.getOneNews.name} was called`);\n\n    const news = await this.prismaService.news.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        tags: true,\n      },\n    });\n\n    if (!news) {\n      throw new NotFoundException(\"News not found\");\n    }\n\n    return plainToInstance(NewsResponseDto, news, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async addNews(\n    ctx: RequestContext,\n    payload: CreateNewsDto\n  ): Promise {\n    this.logger.log(ctx, `${this.addNews.name} was called`);\n    const { tagIds, ...restPayload } = payload;\n\n    const news = await this.prismaService.news.create({\n      data: {\n        ...restPayload,\n\n        ...(tagIds && {\n          tags: {\n            connect: tagIds?.map((id) => ({\n              id,\n              isNewsTag: true,\n            })),\n          },\n        }),\n      },\n    });\n\n    return plainToClass(NewsResponseDto, news, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async deleteNews(ctx: RequestContext, id: string): Promise {\n    this.logger.log(ctx, `${this.deleteNews.name} was called`);\n\n    const news = await this.prismaService.news.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!news) {\n      throw new NotFoundException(\"News not found\");\n    }\n\n    await this.prismaService.news.delete({\n      where: {\n        id: news.id,\n      },\n    });\n\n    return plainToInstance(NewsResponseDto, news, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async updateNews(\n    ctx: RequestContext,\n    id: string,\n    payload: UpdateNewsDto\n  ): Promise {\n    this.logger.log(ctx, `${this.updateNews.name} was called`);\n    const news = await this.prismaService.news.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!news) {\n      throw new NotFoundException(\"News not found!\");\n    }\n\n    const { tagIds, ...restPayload } = payload;\n\n    const updatedNews = await this.prismaService.news.update({\n      where: {\n        id: news.id,\n      },\n      data: {\n        ...restPayload,\n        ...(tagIds && {\n          tags: {\n            // Set empty then create new records\n            // Do not use deleteMany here since it maybe used elsewhere\n            set: [],\n            connect: tagIds?.map((id) => ({\n              id,\n              isNewsTag: true,\n            })),\n          },\n        }),\n      },\n    });\n\n    return plainToClass(NewsResponseDto, updatedNews, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpportunityApiResponse.html":{"url":"classes/OpportunityApiResponse.html","title":"class - OpportunityApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpportunityApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpportunityResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:94\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpportunityArrayApiResponse.html":{"url":"classes/OpportunityArrayApiResponse.html","title":"class - OpportunityArrayApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpportunityArrayApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpportunityResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:102\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OpportunityController.html":{"url":"controllers/OpportunityController.html","title":"controller - OpportunityController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OpportunityController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/controllers/opportunities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                opportunities\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addOpportutnity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteOpportunity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOneOpportunity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOpportunities\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateOpportunity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addOpportutnity\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOpportutnity(ctx: RequestContext, payload: CreateOpportunityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Post()@ApiOperation({summary: 'Add opportunity API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/opportunity/controllers/opportunities.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateOpportunityDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOpportunity(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Delete('/:id')@ApiOperation({summary: 'Delete one opportunity API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/opportunity/controllers/opportunities.controller.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOneOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneOpportunity(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get('/:id')@ApiOperation({summary: 'Get one opportunity API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/opportunity/controllers/opportunities.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOpportunities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOpportunities(ctx: RequestContext, query: OpportunitySearchInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get opportunities API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/opportunity/controllers/opportunities.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            OpportunitySearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOpportunity(ctx: RequestContext, id: string, payload: UpdateOpportunityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Patch('/:id')@ApiOperation({summary: 'Update one opportunity API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/opportunity/controllers/opportunities.controller.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateOpportunityDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { OpportunityService } from \"../services/opportunities.service\";\nimport {\n  CreateOpportunityDto,\n  OpportunityResponseDto,\n  OpportunitySearchInput,\n  UpdateOpportunityDto,\n} from \"../dto/opportunities.dto\";\n\n@ApiTags(\"opportunities\")\n@Controller(\"opportunities\")\nexport class OpportunityController {\n  constructor(\n    private readonly service: OpportunityService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(OpportunityController.name);\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get opportunities API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([OpportunityResponseDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOpportunities(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: OpportunitySearchInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOpportunities.name} was called`);\n\n    const { items, count } = await this.service.getOpportunities(ctx, query);\n\n    return { data: items, meta: { count } };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post()\n  @ApiOperation({\n    summary: \"Add opportunity API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OpportunityResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async addOpportutnity(\n    @ReqContext() ctx: RequestContext,\n    @Body() payload: CreateOpportunityDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.addOpportutnity.name} was called`);\n\n    const item = await this.service.addOpportunity(ctx, payload);\n    return { data: item, meta: {} };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"/:id\")\n  @ApiOperation({\n    summary: \"Get one opportunity API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OpportunityResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOneOpportunity(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOneOpportunity.name} was called`);\n\n    const item = await this.service.getOneOpportunity(ctx, id);\n    return { data: item, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Delete(\"/:id\")\n  @ApiOperation({\n    summary: \"Delete one opportunity API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OpportunityResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async deleteOpportunity(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.deleteOpportunity.name} was called`);\n\n    const item = await this.service.deleteOpportunity(ctx, id);\n    return { data: item, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Patch(\"/:id\")\n  @ApiOperation({\n    summary: \"Update one opportunity API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OpportunityResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async updateOpportunity(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string,\n    @Body() payload: UpdateOpportunityDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.updateOpportunity.name} was called`);\n\n    const item = await this.service.updateOpportunity(ctx, id, payload);\n    return { data: item, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpportunityModule.html":{"url":"modules/OpportunityModule.html","title":"module - OpportunityModule","body":"\n                   \n\n\n\n\n    Modules\n    OpportunityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OpportunityModule\n\n\n\ncluster_OpportunityModule_providers\n\n\n\ncluster_OpportunityModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nOpportunityModule\n\nOpportunityModule\n\nOpportunityModule -->\n\nSharedModule->OpportunityModule\n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nOpportunityModule -->\n\nJwtAuthStrategy->OpportunityModule\n\n\n\n\n\nOpportunityService\n\nOpportunityService\n\nOpportunityModule -->\n\nOpportunityService->OpportunityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/opportunity/opportunities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAuthStrategy\n                        \n                        \n                            OpportunityService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OpportunityController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { JwtAuthStrategy } from \"../auth/strategies/jwt-auth.strategy\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { OpportunityService } from \"./services/opportunities.service\";\nimport { OpportunityController } from \"./controllers/opportunities.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [OpportunityService, JwtAuthStrategy],\n  controllers: [OpportunityController],\n})\nexport class OpportunityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpportunityResponseDto.html":{"url":"classes/OpportunityResponseDto.html","title":"class - OpportunityResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpportunityResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/dto/opportunities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                applicationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                locationType\n                            \n                            \n                                    \n                                    \n                                OpportunityGallery\n                            \n                            \n                                    \n                                    \n                                    \n                                organizer\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:397\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        applicationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:348\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:389\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:383\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:357\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:340\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:375\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity description', example: 'A leading technology company'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:305\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:333\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity ID', example: 'cm92hbrpe00049kz8bwoaz1rh'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:283\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:312\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:319\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OpportunityGallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Gallery', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:410\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:297\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:402\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:366\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags IDs', type: undefined, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:406\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity name', example: 'Tech Innovations'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:290\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:326\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OpportunitySearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"The Green Fellows Program\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"opportunity format\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"duration\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  duration?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OpportunityResponseDto {\n  @ApiProperty({\n    description: \"Opportunity ID\",\n    example: \"cm92hbrpe00049kz8bwoaz1rh\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  OpportunityGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpportunitySearchInput.html":{"url":"classes/OpportunitySearchInput.html","title":"class - OpportunitySearchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpportunitySearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/dto/opportunities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationParamsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OpportunitySearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"The Green Fellows Program\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"opportunity format\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"duration\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  duration?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OpportunityResponseDto {\n  @ApiProperty({\n    description: \"Opportunity ID\",\n    example: \"cm92hbrpe00049kz8bwoaz1rh\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  OpportunityGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpportunityService.html":{"url":"injectables/OpportunityService.html","title":"injectable - OpportunityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpportunityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/services/opportunities.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addOpportunity\n                            \n                            \n                                    Async\n                                deleteOpportunity\n                            \n                            \n                                    Async\n                                getOneOpportunity\n                            \n                            \n                                    Async\n                                getOpportunities\n                            \n                            \n                                    Async\n                                updateOpportunity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/opportunity/services/opportunities.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOpportunity(ctx: RequestContext, payload: CreateOpportunityDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/opportunity/services/opportunities.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateOpportunityDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOpportunity(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/opportunity/services/opportunities.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneOpportunity(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/opportunity/services/opportunities.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOpportunities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOpportunities(ctx: RequestContext, query: OpportunitySearchInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/opportunity/services/opportunities.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            OpportunitySearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOpportunity(ctx: RequestContext, id: string, payload: UpdateOpportunityDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/opportunity/services/opportunities.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateOpportunityDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { plainToClass, plainToInstance } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport {\n  CreateOpportunityDto,\n  OpportunityResponseDto,\n  OpportunitySearchInput,\n  UpdateOpportunityDto,\n} from \"../dto/opportunities.dto\";\nimport { applyFilters } from \"../../shared/filters/prisma-filter.filter\";\nimport { Prisma } from \"@prisma/client\";\nimport { createSearchKey } from \"../../shared/utils/createSearchKey\";\n\n@Injectable()\nexport class OpportunityService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(OpportunityService.name);\n  }\n\n  async getOpportunities(\n    ctx: RequestContext,\n    query: OpportunitySearchInput\n  ): Promise {\n    this.logger.log(ctx, `${this.getOpportunities.name} was called`);\n    const { limit, offset, ...restQuery } = query;\n\n    const { whereBuilder: whereQuery } =\n      await applyFilters({\n        appliedFiltersInput: restQuery,\n        availableFilters: {\n          title: async ({ filter }) => {\n            const searchKey = createSearchKey(String(filter), \"AND\");\n            return {\n              where: {\n                OR: [\n                  {\n                    title: {\n                      search: searchKey,\n                      mode: \"insensitive\",\n                    },\n                  },\n                  {\n                    title: {\n                      contains: String(filter),\n                      mode: \"insensitive\",\n                    },\n                  },\n                ],\n              },\n            };\n          },\n          tagIds: async ({ filter }) => {\n            return {\n              where: {\n                tags: {\n                  some: {\n                    id: {\n                      in: filter as string[],\n                    },\n                  },\n                },\n              },\n            };\n          },\n        },\n      });\n\n    const items = await this.prismaService.opportunity.findMany({\n      where: {\n        AND: [whereQuery],\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n      },\n      take: limit,\n      skip: offset,\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    const count = await this.prismaService.opportunity.count({\n      where: {\n        AND: [whereQuery],\n      },\n    });\n    return {\n      items: plainToInstance(OpportunityResponseDto, items, {\n        excludeExtraneousValues: true,\n      }),\n      count: count,\n    };\n  }\n\n  async getOneOpportunity(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.getOneOpportunity.name} was called`);\n\n    const item = await this.prismaService.opportunity.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n      },\n    });\n\n    if (!item) {\n      throw new NotFoundException(\"Opportunity not found\");\n    }\n\n    return plainToInstance(OpportunityResponseDto, item, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async addOpportunity(\n    ctx: RequestContext,\n    payload: CreateOpportunityDto\n  ): Promise {\n    this.logger.log(ctx, `${this.addOpportunity.name} was called`);\n    const { address, tagIds, socials, ...restPayload } = payload;\n    const item = await this.prismaService.opportunity.create({\n      data: {\n        ...restPayload,\n        ...(address && {\n          address: {\n            create: {\n              ...address,\n            },\n          },\n        }),\n        ...(tagIds && {\n          tags: {\n            connect: tagIds?.map((id) => ({\n              id,\n              isOpportunityTag: true,\n            })),\n          },\n        }),\n        ...(socials && {\n          socials: {\n            create: {\n              data: JSON.parse(JSON.stringify(socials)),\n            },\n          },\n        }),\n      },\n    });\n\n    return plainToClass(OpportunityResponseDto, item, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async deleteOpportunity(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.deleteOpportunity.name} was called`);\n\n    const item = await this.prismaService.opportunity.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!item) {\n      throw new NotFoundException(\"Opportunity not found\");\n    }\n\n    await this.prismaService.opportunity.delete({\n      where: {\n        id: item.id,\n      },\n    });\n\n    return plainToInstance(OpportunityResponseDto, item, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async updateOpportunity(\n    ctx: RequestContext,\n    id: string,\n    payload: UpdateOpportunityDto\n  ): Promise {\n    this.logger.log(ctx, `${this.updateOpportunity.name} was called`);\n    const item = await this.prismaService.opportunity.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!item) {\n      throw new NotFoundException(\"Opportunity not found!\");\n    }\n\n    const { address, tagIds, socials, ...restPayload } = payload;\n\n    const updatedItem = await this.prismaService.opportunity.update({\n      where: {\n        id: item.id,\n      },\n      data: {\n        ...restPayload,\n        address: {\n          upsert: {},\n        },\n        ...(socials && {\n          socials: {\n            upsert: {\n              create: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n              update: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n            },\n          },\n        }),\n        ...(address && {\n          address: {\n            upsert: {\n              create: address,\n              update: address,\n            },\n          },\n        }),\n        ...(tagIds && {\n          tags: {\n            //set empty then create new records\n            // do not use deletemany here since it maybe used elsewhere\n            set: [],\n            connect: tagIds?.map((id) => ({\n              id,\n              isOpportunityTag: true,\n            })),\n          },\n        }),\n      },\n    });\n\n    return plainToClass(OpportunityResponseDto, updatedItem, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationApiResponse.html":{"url":"classes/OrganizationApiResponse.html","title":"class - OrganizationApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationArrayApiResponse.html":{"url":"classes/OrganizationArrayApiResponse.html","title":"class - OrganizationArrayApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationArrayApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:85\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/controllers/organization.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                organizations\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addOrg\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteOrganization\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOneOrganization\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOrgs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateOrganization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addOrg\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOrg(ctx: RequestContext, payload: CreateOrganizationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Post()@ApiOperation({summary: 'Add organizations API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/organization/controllers/organization.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateOrganizationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOrganization(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Delete('/:id')@ApiOperation({summary: 'Delete one organizations API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/organization/controllers/organization.controller.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOneOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneOrganization(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get('/:id')@ApiOperation({summary: 'Get one organizations API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/organization/controllers/organization.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOrgs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrgs(ctx: RequestContext, query: OrganizationSearchInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get organizations API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/organization/controllers/organization.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            OrganizationSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrganization(ctx: RequestContext, id: string, payload: UpdateOrganizationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Patch('/:id')@ApiOperation({summary: 'Update one organizations API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/organization/controllers/organization.controller.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateOrganizationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { OrganizationService } from \"../services/organization.service\";\nimport {\n  CreateOrganizationDto,\n  OrganizationResponseDto,\n  OrganizationSearchInput,\n  UpdateOrganizationDto,\n} from \"../dto/organization.dto\";\n\n@ApiTags(\"organizations\")\n@Controller(\"organizations\")\nexport class OrganizationController {\n  constructor(\n    private readonly organizationService: OrganizationService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(OrganizationController.name);\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get organizations API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([OrganizationResponseDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOrgs(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: OrganizationSearchInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOrgs.name} was called`);\n\n    const { organizations, count } =\n      await this.organizationService.getOrganizations(ctx, query);\n    return { data: organizations, meta: { count } };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post()\n  @ApiOperation({\n    summary: \"Add organizations API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OrganizationResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async addOrg(\n    @ReqContext() ctx: RequestContext,\n    @Body() payload: CreateOrganizationDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.addOrg.name} was called`);\n\n    const organization = await this.organizationService.addOrganization(\n      ctx,\n      payload\n    );\n    return { data: organization, meta: {} };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"/:id\")\n  @ApiOperation({\n    summary: \"Get one organizations API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OrganizationResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOneOrganization(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOrgs.name} was called`);\n\n    const organization = await this.organizationService.getOneOrganization(\n      ctx,\n      id\n    );\n    return { data: organization, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Delete(\"/:id\")\n  @ApiOperation({\n    summary: \"Delete one organizations API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OrganizationResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async deleteOrganization(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOrgs.name} was called`);\n\n    const organization = await this.organizationService.deleteOrganization(\n      ctx,\n      id\n    );\n    return { data: organization, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Patch(\"/:id\")\n  @ApiOperation({\n    summary: \"Update one organizations API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OrganizationResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async updateOrganization(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string,\n    @Body() payload: UpdateOrganizationDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOrgs.name} was called`);\n\n    const organization = await this.organizationService.updateOrganization(\n      ctx,\n      id,\n      payload\n    );\n    return { data: organization, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_exports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_OrganizationModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nSharedModule->OrganizationModule\n\n\n\n\n\nOrganizationService \n\nOrganizationService \n\nOrganizationService  -->\n\nOrganizationModule->OrganizationService \n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nOrganizationModule -->\n\nJwtAuthStrategy->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/organization/organization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAuthStrategy\n                        \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { JwtAuthStrategy } from \"../auth/strategies/jwt-auth.strategy\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { OrganizationService } from \"./services/organization.service\";\nimport { OrganizationController } from \"./controllers/organization.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [OrganizationService, JwtAuthStrategy],\n  controllers: [OrganizationController],\n  exports: [OrganizationService],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationResponseDto.html":{"url":"classes/OrganizationResponseDto.html","title":"class - OrganizationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/dto/organization.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                logoImageId\n                            \n                            \n                                    \n                                    \n                                logoImageUrl\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                organizationGallery\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneCountryCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:272\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image ID', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:287\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:283\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization description', example: 'A leading technology company'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization email', example: 'contact@techinnovations.com'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:247\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization id', example: 'asdasd'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:226\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        logoImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Logo image ID', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:298\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logoImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Logo image URL', example: 'https://example.com/org-logo.jpg'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:294\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization name', example: 'Tech Innovations Inc.'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:233\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organizationGallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Gallery', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:306\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneCountryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone country code', required: false, example: '+1'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:255\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone number', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:264\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Object of Socials ', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:276\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags IDs', type: undefined, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:302\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OrganizationSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  logoImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OrganizationResponseDto {\n  @ApiProperty({\n    description: \"Organization id\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @Expose()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @Expose()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @Expose()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @Expose()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  organizationGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationSearchInput.html":{"url":"classes/OrganizationSearchInput.html","title":"class - OrganizationSearchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationSearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/dto/organization.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationParamsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OrganizationSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  logoImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OrganizationResponseDto {\n  @ApiProperty({\n    description: \"Organization id\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @Expose()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @Expose()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @Expose()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @Expose()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  organizationGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/services/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addOrganization\n                            \n                            \n                                    Async\n                                deleteOrganization\n                            \n                            \n                                    Async\n                                getOneOrganization\n                            \n                            \n                                    Async\n                                getOrganizations\n                            \n                            \n                                    Async\n                                updateOrganization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/organization/services/organization.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOrganization(ctx: RequestContext, payload: CreateOrganizationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/organization/services/organization.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateOrganizationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOrganization(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/organization/services/organization.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneOrganization(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/organization/services/organization.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrganizations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrganizations(ctx: RequestContext, query: OrganizationSearchInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/organization/services/organization.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            OrganizationSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrganization(ctx: RequestContext, id: string, payload: UpdateOrganizationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/organization/services/organization.service.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateOrganizationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { plainToClass, plainToInstance } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport {\n  CreateOrganizationDto,\n  OrganizationResponseDto,\n  OrganizationSearchInput,\n  UpdateOrganizationDto,\n} from \"../dto/organization.dto\";\nimport { applyFilters } from \"../../shared/filters/prisma-filter.filter\";\nimport { Prisma } from \"@prisma/client\";\nimport { createSearchKey } from \"../../shared/utils/createSearchKey\";\n\n@Injectable()\nexport class OrganizationService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(OrganizationService.name);\n  }\n\n  async getOrganizations(\n    ctx: RequestContext,\n    query: OrganizationSearchInput\n  ): Promise {\n    this.logger.log(ctx, `${this.getOrganizations.name} was called`);\n    const { limit, offset, ...restQuery } = query;\n\n    const { whereBuilder: orgWhereQuery } =\n      await applyFilters({\n        appliedFiltersInput: restQuery,\n        availableFilters: {\n          name: async ({ filter }) => {\n            const searchKey = createSearchKey(String(filter), \"AND\");\n            return {\n              where: {\n                OR: [\n                  {\n                    name: {\n                      search: searchKey,\n                      mode: \"insensitive\",\n                    },\n                  },\n                  {\n                    name: {\n                      contains: String(filter),\n                      mode: \"insensitive\",\n                    },\n                  },\n                ],\n              },\n            };\n          },\n          tagIds: async ({ filter }) => {\n            return {\n              where: {\n                tags: {\n                  some: {\n                    id: {\n                      in: filter as string[],\n                    },\n                  },\n                },\n              },\n            };\n          },\n        },\n      });\n\n    const organizations = await this.prismaService.organizations.findMany({\n      where: {\n        AND: [orgWhereQuery],\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n      },\n      take: limit,\n      skip: offset,\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    const organizationCount = await this.prismaService.organizations.count({\n      where: {\n        AND: [orgWhereQuery],\n      },\n    });\n\n    return {\n      organizations: plainToInstance(OrganizationResponseDto, organizations, {\n        excludeExtraneousValues: true,\n      }),\n      count: organizationCount,\n    };\n  }\n\n  async getOneOrganization(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.getOneOrganization.name} was called`);\n\n    const organization = await this.prismaService.organizations.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n        organizationGallery: true,\n      },\n    });\n\n    if (!organization) {\n      throw new NotFoundException(\"Organization not found\");\n    }\n\n    return plainToInstance(OrganizationResponseDto, organization, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async addOrganization(\n    ctx: RequestContext,\n    payload: CreateOrganizationDto\n  ): Promise {\n    this.logger.log(ctx, `${this.addOrganization.name} was called`);\n    const { address, tagIds, gallery, socials, ...restPayload } = payload;\n\n    const organization = await this.prismaService.organizations.create({\n      data: {\n        ...restPayload,\n        ...(address && {\n          address: {\n            create: {\n              ...address,\n            },\n          },\n        }),\n\n        ...(tagIds && {\n          tags: {\n            connect: tagIds?.map((id) => ({\n              id,\n              isOrganizationTag: true,\n            })),\n          },\n        }),\n        ...(gallery && {\n          organizationGallery: {\n            create: gallery,\n          },\n        }),\n        ...(socials && {\n          socials: {\n            create: {\n              data: JSON.parse(JSON.stringify(socials)),\n            },\n          },\n        }),\n      },\n    });\n\n    return plainToClass(OrganizationResponseDto, organization, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async deleteOrganization(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.deleteOrganization.name} was called`);\n\n    const organization = await this.prismaService.organizations.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!organization) {\n      throw new NotFoundException(\"Organization not found\");\n    }\n\n    await this.prismaService.organizations.delete({\n      where: {\n        id: organization.id,\n      },\n    });\n\n    return plainToInstance(OrganizationResponseDto, organization, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async updateOrganization(\n    ctx: RequestContext,\n    id: string,\n    payload: UpdateOrganizationDto\n  ): Promise {\n    this.logger.log(ctx, `${this.addOrganization.name} was called`);\n    const org = await this.prismaService.organizations.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!org) {\n      throw new NotFoundException(\"Organization not found!\");\n    }\n\n    const { address, tagIds, gallery, socials, ...restPayload } = payload;\n\n    const organization = await this.prismaService.organizations.update({\n      where: {\n        id: org.id,\n      },\n      data: {\n        ...restPayload,\n        address: {\n          upsert: {},\n        },\n        ...(socials && {\n          socials: {\n            upsert: {\n              create: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n              update: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n            },\n          },\n        }),\n        ...(address && {\n          address: {\n            upsert: {\n              create: address,\n              update: address,\n            },\n          },\n        }),\n        ...(tagIds && {\n          tags: {\n            //set empty then create new records\n            // do not use deletemany here since it maybe used elsewhere\n            set: [],\n            connect: tagIds?.map((id) => ({\n              id,\n              isOrganizationTag: true,\n            })),\n          },\n        }),\n        ...(gallery && {\n          organizationGallery: {\n            deleteMany: {},\n            create: gallery,\n          },\n        }),\n      },\n    });\n\n    return plainToClass(OrganizationResponseDto, organization, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationParamsDto.html":{"url":"classes/PaginationParamsDto.html","title":"class - PaginationParamsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParamsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/pagination-params.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/pagination-params.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/pagination-params.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Transform } from \"class-transformer\";\nimport { IsNumber, IsOptional, Min } from \"class-validator\";\n\nexport class PaginationParamsDto {\n  @ApiPropertyOptional({\n    description: \"Optional, defaults to 100\",\n    type: Number,\n  })\n  @IsNumber()\n  @IsOptional()\n  @Min(0)\n  @Transform(({ value }) => parseInt(value, 10), { toClassOnly: true })\n  limit = 100;\n\n  @ApiPropertyOptional({\n    description: \"Optional, defaults to 0\",\n    type: Number,\n  })\n  @IsNumber()\n  @IsOptional()\n  @Min(0)\n  @Transform(({ value }) => parseInt(value, 10), { toClassOnly: true })\n  offset = 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/prisma-module/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/prisma-module/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenInput.html":{"url":"classes/RefreshTokenInput.html","title":"class - RefreshTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-refresh-token-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-refresh-token-input.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class RefreshTokenInput {\n  @IsNotEmpty()\n  @ApiProperty()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterApiResponse.html":{"url":"classes/RegisterApiResponse.html","title":"class - RegisterApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegisterOutput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:119\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterInput.html":{"url":"classes/RegisterInput.html","title":"class - RegisterInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-register-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                isAccountDisabled\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()@MaxLength(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAccountDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@MaxLength(100)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Length(6, 100)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ROLE[]\n\n                    \n                \n                \n                    \n                        Default value : [ROLE.USER]\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@MaxLength(200)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Length,\n  MaxLength,\n} from 'class-validator';\n\nimport { ROLE } from '../constants/role.constant';\n\nexport class RegisterInput {\n  @ApiProperty()\n  @IsNotEmpty()\n  @MaxLength(100)\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @MaxLength(200)\n  @IsString()\n  username: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Length(6, 100)\n  @IsString()\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  @MaxLength(100)\n  email: string;\n\n  // These keys can only be set by ADMIN user.\n  roles: ROLE[] = [ROLE.USER];\n  isAccountDisabled: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterOutput.html":{"url":"classes/RegisterOutput.html","title":"class - RegisterOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-register-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isAccountDisabled\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isAccountDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ROLE[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\n\nimport { ROLE } from '../constants/role.constant';\n\nexport class RegisterOutput {\n  @Expose()\n  @ApiProperty()\n  id: number;\n\n  @Expose()\n  @ApiProperty()\n  name: string;\n\n  @Expose()\n  @ApiProperty()\n  username: string;\n\n  @Expose()\n  @ApiProperty({ example: [ROLE.USER] })\n  roles: ROLE[];\n\n  @Expose()\n  @ApiProperty()\n  email: string;\n\n  @Expose()\n  @ApiProperty()\n  isAccountDisabled: boolean;\n\n  @Expose()\n  @ApiProperty()\n  createdAt: string;\n\n  @Expose()\n  @ApiProperty()\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestContext.html":{"url":"classes/RequestContext.html","title":"class - RequestContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/request-context/request-context.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                requestID\n                            \n                            \n                                    Public\n                                url\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/request-context/request-context.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestID\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/request-context/request-context.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/request-context/request-context.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserAccessTokenClaims | null\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/request-context/request-context.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserAccessTokenClaims } from '../../auth/dtos/auth-token-output.dto';\n\nexport class RequestContext {\n  public requestID: string | undefined;\n\n  public url: string;\n\n  public ip: string | undefined;\n\n  // TODO : Discuss with team if this import is acceptable or if we should move UserAccessTokenClaims to shared.\n  public user: UserAccessTokenClaims | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseMetadata.html":{"url":"classes/ResponseMetadata.html","title":"class - ResponseMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                additionalInfo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        additionalInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { ROLE } from \"../constants/role.constant\";\nimport { ROLES_KEY } from \"../decorators/role.decorator\";\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n\n    // if (requiredRoles.some((role) => user.roles?.includes(role))) {\n    //   return true;\n    // }\n\n    return true;\n\n    throw new UnauthorizedException(\n      `User with roles ${user.roles} does not have access to this route with roles ${requiredRoles}`\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAppLoggerModule->SharedModule\n\n\n\n\n\nAppLoggerModule \n\nAppLoggerModule \n\nAppLoggerModule  -->\n\nSharedModule->AppLoggerModule \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppLoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppLoggerModule\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\n\nimport { configModuleOptions } from './configs/module-options';\nimport { AllExceptionsFilter } from './filters/all-exceptions.filter';\nimport { LoggingInterceptor } from './interceptors/logging.interceptor';\nimport { AppLoggerModule } from './logger/logger.module';\nimport { PrismaService } from './prisma-module/prisma.service';\n\n@Module({\n  imports: [ConfigModule.forRoot(configModuleOptions), AppLoggerModule],\n  exports: [AppLoggerModule, ConfigModule, PrismaService],\n  providers: [\n    { provide: APP_INTERCEPTOR, useClass: LoggingInterceptor },\n\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    PrismaService,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagApiResponse.html":{"url":"classes/TagApiResponse.html","title":"class - TagApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagArrayApiResponse.html":{"url":"classes/TagArrayApiResponse.html","title":"class - TagArrayApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagArrayApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagController.html":{"url":"controllers/TagController.html","title":"controller - TagController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/controllers/tags.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getTags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getTagsType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTag(ctx: RequestContext, payload: AddTagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Post()@ApiOperation({summary: 'Add a new tag'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/tags/controllers/tags.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            AddTagDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTags(ctx: RequestContext, query: TagSearchInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get tags API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/tags/controllers/tags.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            TagSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getTagsType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTagsType(ctx: RequestContext, tagType: TagsType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get('/:type')@ApiOperation({summary: 'Get tags by type API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/tags/controllers/tags.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tagType\n                                            \n                                                            TagsType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UnauthorizedException,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { TagsService } from \"../services/tags.service\";\nimport { TagOutputDto } from \"../dto/tags-output.dto\";\nimport { AddTagDto, TagSearchInput, TagsType } from \"../dto/tags-input.dto\";\n\n@ApiTags(\"tags\")\n@Controller(\"tags\")\nexport class TagController {\n  constructor(\n    private readonly tagsService: TagsService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(TagController.name);\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get tags API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([TagOutputDto]),\n    \n    \n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getTags(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: TagSearchInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.getTags.name} was called`);\n\n    const { tags, count } = await this.tagsService.getTags(ctx, query);\n    return { data: tags, meta: { count } };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"/:type\")\n  @ApiOperation({\n    summary: \"Get tags by type API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([TagOutputDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getTagsType(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"type\") tagType: TagsType\n  ): Promise> {\n    this.logger.log(ctx, `${this.getTagsType.name} was called`);\n\n    const { tags, count } = await this.tagsService.getTagsByType(ctx, tagType);\n    return { data: tags, meta: { count } };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post()\n  @ApiOperation({\n    summary: \"Add a new tag\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(TagOutputDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async addTag(\n    @ReqContext() ctx: RequestContext,\n    @Body() payload: AddTagDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.addTag.name} was called`);\n    const roleData = await this.tagsService.addTag(ctx, payload);\n    return { data: roleData, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagOutputDto.html":{"url":"classes/TagOutputDto.html","title":"class - TagOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/dto/tags-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isEventTag\n                            \n                            \n                                    \n                                    \n                                isNewsTag\n                            \n                            \n                                    \n                                    \n                                isOpportunityTag\n                            \n                            \n                                    \n                                    \n                                isOrganizationTag\n                            \n                            \n                                    \n                                    \n                                isUserTag\n                            \n                            \n                                    \n                                    \n                                tag\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isEventTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isNewsTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isOpportunityTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isOrganizationTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isUserTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from \"class-transformer\";\nimport { IsBoolean, IsOptional, IsString, IsDate } from \"class-validator\";\n\nexport class TagOutputDto {\n  @IsString()\n  @Expose()\n  id: string;\n\n  @IsString()\n  @Expose()\n  tag: string;\n\n  @IsBoolean()\n  @Expose()\n  isUserTag: boolean;\n\n  @IsBoolean()\n  @Expose()\n  isOrganizationTag: boolean;\n\n  @IsBoolean()\n  @Expose()\n  isEventTag: boolean;\n\n  @IsBoolean()\n  @Expose()\n  isNewsTag: boolean;\n\n  @IsBoolean()\n  @Expose()\n  isOpportunityTag: boolean;\n\n  @IsDate()\n  @Expose()\n  createdAt: Date;\n\n  @IsDate()\n  @Expose()\n  updatedAt: Date;\n\n  @IsOptional()\n  @IsDate()\n  @Expose()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagSearchInput.html":{"url":"classes/TagSearchInput.html","title":"class - TagSearchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagSearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/dto/tags-input.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationParamsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isEventTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isNewsTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isOpportunityTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isOrganizationTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isUserTag\n                            \n                            \n                                    \n                                    \n                                    \n                                tag\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isEventTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isNewsTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isOpportunityTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isOrganizationTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isUserTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsBoolean, IsOptional, IsString } from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\n\nexport type TagsType =\n  | \"USER\"\n  | \"ORGANIZATION\"\n  | \"EVENT\"\n  | \"NEWS\"\n  | \"OPPORTUNITY\";\n\nexport class TagSearchInput extends PaginationParamsDto {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  tag: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isUserTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isOrganizationTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isEventTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isNewsTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isOpportunityTag?: boolean;\n}\n\nexport class AddTagDto {\n  @ApiProperty({\n    description: \"The name of the tag\",\n    example: \"Tech\",\n    required: true,\n  })\n  @IsString()\n  tag: string;\n\n  @ApiProperty({\n    description: \"Indicates if this is a user tag\",\n    example: true,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isUserTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an organization tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isOrganizationTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an event tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isEventTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is a news tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isNewsTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an opportunity tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isOpportunityTag?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_imports\n\n\n\ncluster_TagsModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nTagsModule\n\nTagsModule\n\nTagsModule -->\n\nSharedModule->TagsModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { TagsService } from \"./services/tags.service\";\nimport { TagController } from \"./controllers/tags.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [TagsService],\n  controllers: [TagController],\n  exports: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/services/tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTag\n                            \n                            \n                                    Async\n                                getTags\n                            \n                            \n                                    Async\n                                getTagsByType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/tags/services/tags.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTag(ctx: RequestContext, payload: AddTagDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tags/services/tags.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            AddTagDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTags(ctx: RequestContext, query: TagSearchInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tags/services/tags.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            TagSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTagsByType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTagsByType(ctx: RequestContext, type: TagsType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tags/services/tags.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            TagsType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { plainToClass, plainToInstance } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport { TagOutputDto } from \"../dto/tags-output.dto\";\nimport { AddTagDto, TagSearchInput, TagsType } from \"../dto/tags-input.dto\";\nimport { applyFilters } from \"../../shared/filters/prisma-filter.filter\";\nimport { Prisma } from \"@prisma/client\";\nimport { createSearchKey } from \"../../shared/utils/createSearchKey\";\n\n@Injectable()\nexport class TagsService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(TagsService.name);\n  }\n\n  async getTags(\n    ctx: RequestContext,\n    query: TagSearchInput\n  ): Promise {\n    this.logger.log(ctx, `${this.getTags.name} was called`);\n    const { limit, offset, ...restQuery } = query;\n\n    const { whereBuilder: tagsWhereQuery } =\n      await applyFilters({\n        appliedFiltersInput: restQuery,\n        availableFilters: {\n          tag: async ({ filter }) => {\n            const searchKey = createSearchKey(String(filter), \"AND\");\n            return {\n              where: {\n                OR: [\n                  {\n                    tag: {\n                      search: searchKey,\n                      mode: \"insensitive\",\n                    },\n                  },\n                  {\n                    tag: {\n                      contains: String(filter),\n                      mode: \"insensitive\",\n                    },\n                  },\n                ],\n              },\n            };\n          },\n          isUserTag: async ({ filter }) => {\n            return {\n              where: {\n                isUserTag: true,\n              },\n            };\n          },\n          isOrganizationTag: async ({ filter }) => {\n            return {\n              where: {\n                isOrganizationTag: true,\n              },\n            };\n          },\n\n          isEventTag: async ({ filter }) => {\n            return {\n              where: {\n                isEventTag: true,\n              },\n            };\n          },\n\n          isNewsTag: async ({ filter }) => {\n            return {\n              where: {\n                isNewsTag: true,\n              },\n            };\n          },\n        },\n      });\n\n    const tags = await this.prismaService.tags.findMany({\n      where: {\n        AND: [tagsWhereQuery],\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    console.log(\"==tags\", tags);\n    const tagsCount = await this.prismaService.tags.count({\n      where: {\n        AND: [tagsWhereQuery],\n      },\n    });\n\n    return {\n      tags: plainToInstance(TagOutputDto, tags, {\n        excludeExtraneousValues: true,\n      }),\n      count: tagsCount,\n    };\n  }\n\n  async getTagsByType(\n    ctx: RequestContext,\n    type: TagsType\n  ): Promise {\n    this.logger.log(ctx, `${this.getTagsByType.name} was called`);\n    const { whereBuilder: tagsWhereQuery } =\n      await applyFilters({\n        appliedFiltersInput: {\n          type,\n        },\n        availableFilters: {\n          type: async ({ filter }) => {\n            const tagType = filter as TagsType;\n            if (tagType === \"NEWS\") {\n              return {\n                where: {\n                  isNewsTag: true,\n                },\n              };\n            }\n            if (tagType === \"EVENT\") {\n              return {\n                where: {\n                  isEventTag: true,\n                },\n              };\n            }\n            if (tagType === \"OPPORTUNITY\") {\n              return {\n                where: {\n                  isOpportunityTag: true,\n                },\n              };\n            }\n            if (tagType === \"ORGANIZATION\") {\n              return {\n                where: {\n                  isOrganizationTag: true,\n                },\n              };\n            }\n            if (tagType === \"USER\") {\n              return {\n                where: {\n                  isUserTag: true,\n                },\n              };\n            }\n            return {\n              where: {},\n            };\n          },\n        },\n      });\n\n    const tags = await this.prismaService.tags.findMany({\n      where: {\n        AND: [tagsWhereQuery],\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n    const tagsCount = await this.prismaService.tags.count({\n      where: {\n        AND: [tagsWhereQuery],\n      },\n    });\n\n    return {\n      tags: plainToInstance(TagOutputDto, tags, {\n        excludeExtraneousValues: true,\n      }),\n      count: tagsCount,\n    };\n  }\n\n  async addTag(ctx: RequestContext, payload: AddTagDto): Promise {\n    this.logger.log(ctx, `${this.addTag.name} was called`);\n    const tag = await this.prismaService.tags.create({\n      data: {\n        ...payload,\n      },\n    });\n\n    return plainToClass(TagOutputDto, tag, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeMapping.html":{"url":"interfaces/TypeMapping.html","title":"interface - TypeMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TypeMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/base-api-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/shared/dtos/base-api-response.dto.ts:49\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport {\n  ApiProperty,\n  ApiPropertyOptional,\n  getSchemaPath,\n} from \"@nestjs/swagger\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { EventResponseDto } from \"../../events/dto/events.dto\";\nimport { OrganizationResponseDto } from \"../../organization/dto/organization.dto\";\nimport { OpportunityResponseDto } from \"../../opportunity/dto/opportunities.dto\";\nimport { AuthTokenOutput } from \"../../auth/dtos/auth-token-output.dto\";\nimport { RegisterOutput } from \"../../auth/dtos/auth-register-output.dto\";\nimport { ImagekitResponseDto } from \"../../imagekit/imagekit.dto\";\nimport {\n  UserApiResponse,\n  UserArrayApiResponse,\n  TagApiResponse,\n  TagArrayApiResponse,\n  EventApiResponse,\n  EventArrayApiResponse,\n  OrganizationApiResponse,\n  OrganizationArrayApiResponse,\n  OpportunityApiResponse,\n  OpportunityArrayApiResponse,\n  AuthTokenApiResponse,\n  RegisterApiResponse,\n  ImagekitApiResponse,\n} from \"./specific-api-responses.dto\";\n\n// Keeping this for backward compatibility\nexport class BaseApiResponse {\n  public data: T;\n\n  @ApiProperty({ type: Object })\n  public meta: Record = {};\n}\n\n// API property type definition\ntype ApiPropertyType =\n  | Type\n  | Function\n  | [Function]\n  | string\n  | number\n  | boolean;\n\n// Type mapping dictionary - maps type names to response classes\ninterface TypeMapping {\n  [key: string]: any;\n}\n\n// Non-generic response type mapping\nconst responseTypeMap: TypeMapping = {\n  UserOutput: UserApiResponse,\n  \"UserOutput[]\": UserArrayApiResponse,\n  TagOutputDto: TagApiResponse,\n  \"TagOutputDto[]\": TagArrayApiResponse,\n  EventResponseDto: EventApiResponse,\n  \"EventResponseDto[]\": EventArrayApiResponse,\n  OrganizationResponseDto: OrganizationApiResponse,\n  \"OrganizationResponseDto[]\": OrganizationArrayApiResponse,\n  OpportunityResponseDto: OpportunityApiResponse,\n  \"OpportunityResponseDto[]\": OpportunityArrayApiResponse,\n  AuthTokenOutput: AuthTokenApiResponse,\n  RegisterOutput: RegisterApiResponse,\n  ImagekitResponseDto: ImagekitApiResponse,\n};\n\n/**\n * Returns a proper OpenAPI compatible response class\n * This function avoids using generics in OpenAPI schema generation\n */\nexport function SwaggerBaseApiResponse(\n  type: T\n): any {\n  let typeName: string;\n  if (Array.isArray(type)) {\n    typeName = `${type[0].name}[]`;\n  } else if (typeof type === \"function\") {\n    typeName = (type as Function).name;\n  } else {\n    typeName = String(type);\n  }\n\n  if (responseTypeMap[typeName]) {\n    return responseTypeMap[typeName];\n  }\n\n  const className = `ApiResponseOf${typeName.replace(\"[]\", \"Array\")}`;\n\n  class CustomApiResponse extends BaseApiResponse {\n    @ApiProperty(\n      Array.isArray(type)\n        ? {\n            type: \"array\",\n            items: {\n              $ref: getSchemaPath(type[0]),\n            },\n          }\n        : { type: type as any }\n    )\n    public declare data: any;\n  }\n\n  Object.defineProperty(CustomApiResponse, \"name\", {\n    value: className,\n  });\n\n  return CustomApiResponse;\n}\n\nexport class BaseApiErrorObject {\n  @ApiProperty({ type: Number })\n  public statusCode: number;\n\n  @ApiProperty({ type: String })\n  public message: string;\n\n  @ApiPropertyOptional({ type: String })\n  public localizedMessage: string;\n\n  @ApiProperty({ type: String })\n  public errorName: string;\n\n  @ApiProperty({ type: Object })\n  public details: unknown;\n\n  @ApiProperty({ type: String })\n  public path: string;\n\n  @ApiProperty({ type: String })\n  public requestId: string;\n\n  @ApiProperty({ type: String })\n  public timestamp: string;\n}\n\nexport class BaseApiErrorResponse {\n  @ApiProperty({ type: BaseApiErrorObject })\n  public error: BaseApiErrorObject;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEventDto.html":{"url":"classes/UpdateEventDto.html","title":"class - UpdateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/events.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                format\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                gallery\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isDraft\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                locationType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                organizer\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationLink\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:285\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:313\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:308\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:261\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:229\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:277\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event description', example: 'A leading technology company'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:194\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:222\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        gallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Gallery iamges', required: false, example: '5551234567'})@ValidateNested({each: true})@Type(undefined)@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:296\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event status'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:328\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:201\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:208\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:186\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        registrationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:245\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        registrationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'link', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:253\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:300\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:237\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:269\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:321\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event name', example: 'Tech Innovations'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:215\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class EventsSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsOptional()\n  @IsString()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer?: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  type?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  format?: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Event status\",\n  })\n  @IsBoolean()\n  @IsOptional()\n  isDraft?: boolean;\n}\n\nexport class EventResponseDto {\n  @ApiProperty({\n    description: \"Event id\",\n    example: \"abcd\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  eventGallery: GalleryResponse[];\n\n  @ApiProperty({ description: \"Draft status\" })\n  @Expose()\n  isDraft: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsDto.html":{"url":"classes/UpdateNewsDto.html","title":"class - UpdateNewsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/dto/news.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                mode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                newsLink\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                publishedDate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                publishedYear\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                source\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/news-banner.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by', example: 'admin'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News mode', example: 'Online'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        newsLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News link', example: 'https://example.com/news-article'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Published date'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        publishedYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Published year'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News source', example: 'Tech News Portal'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News title', example: 'New Technology Breakthrough'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:104\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsDate,\n  IsDateString,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { Expose } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\n\nexport class NewsSearchInput extends PaginationParamsDto {\n  @ApiProperty({ required: false })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsArray()\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class CreateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n    example: \"2025-04-15T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n    example: \"2025-01-01T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsUrl()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  contributedBy: string;\n}\n\nexport class UpdateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @IsOptional()\n  mode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Published date\",\n  })\n  @IsOptional()\n  publishedDate?: Date;\n\n  @ApiPropertyOptional({\n    description: \"Published year\",\n  })\n  @IsOptional()\n  publishedYear?: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @IsOptional()\n  newsLink?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n}\n\nexport class NewsResponseDto {\n  @ApiProperty({\n    description: \"News ID\",\n    example: \"clgf7xhig0000qof3m53ibdz1\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @Expose()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @Expose()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n  })\n  @Expose()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n  })\n  @Expose()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @Expose()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiProperty({\n    description: \"Created at\",\n  })\n  @Expose()\n  createdAt: Date;\n\n  @ApiProperty({\n    description: \"Updated at\",\n  })\n  @Expose()\n  updatedAt: Date;\n\n  @ApiPropertyOptional({\n    description: \"Deleted at\",\n  })\n  @IsOptional()\n  @Expose()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOpportunityDto.html":{"url":"classes/UpdateOpportunityDto.html","title":"class - UpdateOpportunityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOpportunityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/dto/opportunities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                applicationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                locationType\n                            \n                            \n                                    \n                                    \n                                    \n                                organizer\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:249\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        applicationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:217\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:265\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:260\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:225\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:209\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:241\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity description', example: 'A leading technology company'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:174\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:202\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:181\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:253\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:233\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:273\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity name', example: 'Tech Innovations'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:195\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OpportunitySearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"The Green Fellows Program\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"opportunity format\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"duration\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  duration?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OpportunityResponseDto {\n  @ApiProperty({\n    description: \"Opportunity ID\",\n    example: \"cm92hbrpe00049kz8bwoaz1rh\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  OpportunityGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrganizationDto.html":{"url":"classes/UpdateOrganizationDto.html","title":"class - UpdateOrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/dto/organization.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                gallery\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                logoImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                logoImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneCountryCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:195\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization description', example: 'A leading technology company'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization email', example: 'contact@techinnovations.com'})@IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        gallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Gallery iamges', required: false, example: '5551234567'})@ValidateNested({each: true})@Type(undefined)@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:183\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        logoImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Logo image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:213\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        logoImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Logo image URL', example: 'https://example.com/org-logo.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:208\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization name', example: 'Tech Innovations Inc.'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneCountryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone country code', required: false, example: '+1'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone number', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:187\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:217\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OrganizationSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  logoImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OrganizationResponseDto {\n  @ApiProperty({\n    description: \"Organization id\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @Expose()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @Expose()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @Expose()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @Expose()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  organizationGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user-update-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsNotEmpty()@MaxLength(100)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-update-input.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsNotEmpty()@Length(6, 100)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-update-input.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n  MaxLength,\n} from 'class-validator';\n\nexport class UpdateUserInput {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsNotEmpty()\n  @MaxLength(100)\n  @IsString()\n  name: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsNotEmpty()\n  @Length(6, 100)\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAccessTokenClaims.html":{"url":"classes/UserAccessTokenClaims.html","title":"class - UserAccessTokenClaims","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAccessTokenClaims\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-token-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isAccountVerified\n                            \n                            \n                                    \n                                isSuperAdmin\n                            \n                            \n                                    \n                                phoneCountryCode\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isAccountVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isSuperAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneCountryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nexport class AuthTokenOutput {\n  @Expose()\n  @ApiProperty()\n  accessToken: string;\n\n  @Expose()\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class UserAccessTokenClaims {\n  @Expose()\n  id: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  fullName: string;\n\n  @Expose()\n  isSuperAdmin: boolean;\n\n  @Expose()\n  isAccountVerified: boolean;\n\n  @Expose()\n  gender: string | null;\n\n  @Expose()\n  phoneCountryCode: string | null;\n\n  @Expose()\n  phoneNumber: string | null;\n}\n\nexport class UserRefreshTokenClaims {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAclService.html":{"url":"injectables/UserAclService.html","title":"injectable - UserAclService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAclService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/services/user-acl.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAclService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                aclRules\n                            \n                            \n                                    Public\n                                forActor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isUserItself\n                            \n                            \n                                    Protected\n                                canDo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/user/services/user-acl.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isUserItself\n                        \n                    \n                \n            \n            \n                \nisUserItself(resource: User, actor: Actor)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user-acl.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actor\n                                            \n                                                            Actor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        canDo\n                        \n                    \n                \n            \n            \n                \n                        \n                    canDo(role: ROLE, actions: Action[], ruleCallback?: RuleCallback)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAclService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAclService:15\n\n                        \n                    \n\n\n            \n                \n                        Set ACL rule for a role\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            ROLE\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actions\n                                            \n                                                            Action[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ruleCallback\n                                            \n                                                            RuleCallback\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        aclRules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AclRule[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         BaseAclService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAclService:10\n\n                        \n                    \n\n            \n                \n                    ACL rules\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forActor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         BaseAclService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAclService:28\n\n                        \n                    \n\n            \n                \n                    create user specific acl object to check ability to perform any action\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { BaseAclService } from \"../../shared/acl/acl.service\";\nimport { ROLE } from \"./../../auth/constants/role.constant\";\nimport { Action } from \"./../../shared/acl/action.constant\";\nimport { Actor } from \"./../../shared/acl/actor.constant\";\nimport { User } from \"@prisma/client\";\n\n@Injectable()\nexport class UserAclService extends BaseAclService {\n  constructor() {\n    super();\n    // Admin can do all action\n    this.canDo(ROLE.ADMIN, [Action.Manage]);\n    //user can read himself or any other user\n    this.canDo(ROLE.USER, [Action.Read]);\n    // user can only update himself\n    this.canDo(ROLE.USER, [Action.Update], this.isUserItself);\n  }\n\n  isUserItself(resource: User, actor: Actor): boolean {\n    return resource.id === actor.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApiResponse.html":{"url":"classes/UserApiResponse.html","title":"class - UserApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserOutput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserArrayApiResponse.html":{"url":"classes/UserArrayApiResponse.html","title":"class - UserArrayApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserArrayApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserOutput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getMyProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getMyProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyProfile(ctx: RequestContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Get('me')@ApiOperation({summary: 'Get user me API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controllers/user.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(ctx: RequestContext, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get(':id')@ApiOperation({summary: 'Get user by id API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controllers/user.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(ctx: RequestContext, query: PaginationParamsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get users as a list API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(ROLE.ADMIN, ROLE.USER)@ApiBearerAuth()\n                \n            \n\n                    \n                        \n                            Defined in src/user/controllers/user.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            PaginationParamsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(ctx: RequestContext, userId: number, input: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update user API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/user/controllers/user.controller.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Query,\n  UnauthorizedException,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { ROLE } from \"../../auth/constants/role.constant\";\nimport { Roles } from \"../../auth/decorators/role.decorator\";\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport { RolesGuard } from \"../../auth/guards/roles.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { UserOutput } from \"../dtos/user-output.dto\";\nimport { UpdateUserInput } from \"../dtos/user-update-input.dto\";\nimport { UserService } from \"../services/user.service\";\n\n@ApiTags(\"users\")\n@Controller(\"users\")\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(UserController.name);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"me\")\n  @ApiOperation({\n    summary: \"Get user me API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(UserOutput),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getMyProfile(\n    @ReqContext() ctx: RequestContext\n  ): Promise> {\n    this.logger.log(ctx, `${this.getMyProfile.name} was called`);\n\n    const user = await this.userService.findById(ctx, ctx.user!.id);\n    return { data: user, meta: {} };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get users as a list API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([UserOutput]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(ROLE.ADMIN, ROLE.USER)\n  @ApiBearerAuth()\n  async getUsers(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: PaginationParamsDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.getUsers.name} was called`);\n\n    const { users, count } = await this.userService.getUsers(\n      ctx,\n      query.limit,\n      query.offset\n    );\n\n    return { data: users, meta: { count } };\n  }\n\n  // TODO: ADD RoleGuard\n  // NOTE : This can be made a admin only endpoint. For normal users they can use GET /me\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\":id\")\n  @ApiOperation({\n    summary: \"Get user by id API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(UserOutput),\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    type: BaseApiErrorResponse,\n  })\n  async getUser(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: number\n  ): Promise> {\n    this.logger.log(ctx, `${this.getUser.name} was called`);\n\n    const user = await this.userService.getUserById(ctx, id);\n    return { data: user, meta: {} };\n  }\n\n  // TODO: ADD RoleGuard\n  // NOTE : This can be made a admin only endpoint. For normal users they can use PATCH /me\n  @Patch(\":id\")\n  @ApiOperation({\n    summary: \"Update user API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(UserOutput),\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    type: BaseApiErrorResponse,\n  })\n  @UseInterceptors(ClassSerializerInterceptor)\n  async updateUser(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") userId: number,\n    @Body() input: UpdateUserInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.updateUser.name} was called`);\n\n    const user = await this.userService.updateUser(ctx, userId, input);\n    return { data: user, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nSharedModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nUserModule -->\n\nJwtAuthStrategy->UserModule\n\n\n\n\n\nUserAclService\n\nUserAclService\n\nUserModule -->\n\nUserAclService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAuthStrategy\n                        \n                        \n                            UserAclService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { JwtAuthStrategy } from '../auth/strategies/jwt-auth.strategy';\nimport { SharedModule } from '../shared/shared.module';\nimport { UserController } from './controllers/user.controller';\nimport { UserService } from './services/user.service';\nimport { UserAclService } from './services/user-acl.service';\n\n@Module({\n  imports: [SharedModule],\n  providers: [UserService, JwtAuthStrategy, UserAclService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserOutput.html":{"url":"classes/UserOutput.html","title":"class - UserOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                fullName\n                            \n                            \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isAccountVerified\n                            \n                            \n                                    \n                                    \n                                isSuperAdmin\n                            \n                            \n                                    \n                                    \n                                phoneCountryCode\n                            \n                            \n                                    \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isAccountVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isSuperAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phoneCountryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nexport class UserOutput {\n  @Expose()\n  @ApiProperty()\n  id: string;\n\n  @Expose()\n  @ApiProperty()\n  email: string;\n\n  @Expose()\n  @ApiProperty()\n  fullName: string;\n\n  @Expose()\n  @ApiProperty()\n  isSuperAdmin: boolean;\n\n  @Expose()\n  @ApiProperty()\n  isAccountVerified: boolean;\n\n  @ApiProperty()\n  @Expose()\n  gender: string | null;\n\n  @ApiProperty()\n  @Expose()\n  phoneCountryCode: string | null;\n\n  @ApiProperty()\n  @Expose()\n  phoneNumber: string | null;\n\n  @ApiProperty()\n  @Expose()\n  createdAt: string;\n\n  @ApiProperty()\n  @Expose()\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRefreshTokenClaims.html":{"url":"classes/UserRefreshTokenClaims.html","title":"class - UserRefreshTokenClaims","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRefreshTokenClaims\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-token-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nexport class AuthTokenOutput {\n  @Expose()\n  @ApiProperty()\n  accessToken: string;\n\n  @Expose()\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class UserAccessTokenClaims {\n  @Expose()\n  id: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  fullName: string;\n\n  @Expose()\n  isSuperAdmin: boolean;\n\n  @Expose()\n  isAccountVerified: boolean;\n\n  @Expose()\n  gender: string | null;\n\n  @Expose()\n  phoneCountryCode: string | null;\n\n  @Expose()\n  phoneNumber: string | null;\n}\n\nexport class UserRefreshTokenClaims {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                validateUsernamePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(ctx: RequestContext, input: CreateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(ctx: RequestContext, username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(ctx: RequestContext, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(ctx: RequestContext, limit: number, offset: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(ctx: RequestContext, userId: number, input: UpdateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUsernamePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUsernamePassword(ctx: RequestContext, email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\n// import { compare, hash } from \"bcrypt\";\nimport { plainToClass } from \"class-transformer\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { CreateUserInput } from \"../dtos/user-create-input.dto\";\nimport { UserOutput } from \"../dtos/user-output.dto\";\nimport { UpdateUserInput } from \"../dtos/user-update-input.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(UserService.name);\n  }\n  async createUser(\n    ctx: RequestContext,\n    input: CreateUserInput\n  ): Promise {\n    this.logger.log(ctx, `${this.createUser.name} was called`);\n\n    return plainToClass(\n      UserOutput,\n      {},\n      {\n        excludeExtraneousValues: true,\n      }\n    );\n  }\n\n  async validateUsernamePassword(\n    ctx: RequestContext,\n    email: string,\n    pass: string\n  ): Promise {\n    this.logger.log(ctx, `${this.validateUsernamePassword.name} was called`);\n\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        email,\n      },\n    });\n\n    if (!user) throw new UnauthorizedException(\"User not found.\");\n    // const match = await compare(pass, user.password);\n    const match = true;\n    if (!match) throw new UnauthorizedException(\"Email or password mismatch.\");\n\n    return plainToClass(UserOutput, user, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async getUsers(\n    ctx: RequestContext,\n    limit: number,\n    offset: number\n  ): Promise {\n    this.logger.log(ctx, `${this.getUsers.name} was called`);\n\n    const usersOutput = plainToClass(UserOutput, [], {\n      excludeExtraneousValues: true,\n    });\n\n    return { users: usersOutput, count: 1 };\n  }\n\n  async findById(ctx: RequestContext, id: string): Promise {\n    this.logger.log(ctx, `${this.findById.name} was called`);\n\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!user) throw new UnauthorizedException(\"User not found.\");\n\n    return plainToClass(UserOutput, user, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async getUserById(ctx: RequestContext, id: number): Promise {\n    this.logger.log(ctx, `${this.getUserById.name} was called`);\n\n    return plainToClass(\n      UserOutput,\n      {},\n      {\n        excludeExtraneousValues: true,\n      }\n    );\n  }\n\n  async findByUsername(\n    ctx: RequestContext,\n    username: string\n  ): Promise {\n    this.logger.log(ctx, `${this.findByUsername.name} was called`);\n\n    return plainToClass(\n      UserOutput,\n      {},\n      {\n        excludeExtraneousValues: true,\n      }\n    );\n  }\n\n  async updateUser(\n    ctx: RequestContext,\n    userId: number,\n    input: UpdateUserInput\n  ): Promise {\n    this.logger.log(ctx, `${this.updateUser.name} was called`);\n\n    // Hash the password if it exists in the input payload.\n    if (input.password) {\n      // input.password = await hash(input.password, 10);\n    }\n\n    return plainToClass(\n      UserOutput,\n      {},\n      {\n        excludeExtraneousValues: true,\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        scripts/seed/user.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        scripts/seed/user.ts\n            \n            variable\n            seedSuperAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/analytics/controllers/analytics.controller.ts\n            \n            controller\n            AnalyticsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/analytics/dtos/admin-analytics-output.dto.ts\n            \n            class\n            AdminAnalyticsOutput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/analytics/services/analytics.service.ts\n            \n            injectable\n            AnalyticsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/constants/strategy.constant.ts\n            \n            variable\n            STRATEGY_JWT_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/strategy.constant.ts\n            \n            variable\n            STRATEGY_JWT_REFRESH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/strategy.constant.ts\n            \n            variable\n            STRATEGY_LOCAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/controllers/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/auth/decorators/role.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/role.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-login-input.dto.ts\n            \n            class\n            LoginInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-refresh-token-input.dto.ts\n            \n            class\n            RefreshTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-register-input.dto.ts\n            \n            class\n            RegisterInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-register-output.dto.ts\n            \n            class\n            RegisterOutput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-token-output.dto.ts\n            \n            class\n            AuthTokenOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-token-output.dto.ts\n            \n            class\n            UserAccessTokenClaims\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-token-output.dto.ts\n            \n            class\n            UserRefreshTokenClaims\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-refresh.guard.ts\n            \n            injectable\n            JwtRefreshGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt-auth.strategy.ts\n            \n            injectable\n            JwtAuthStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt-refresh.strategy.ts\n            \n            injectable\n            JwtRefreshStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/events/controllers/events.controller.ts\n            \n            controller\n            EventsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/events/dto/events.dto.ts\n            \n            class\n            CreateEventDto\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/events/dto/events.dto.ts\n            \n            class\n            EventResponseDto\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/events/dto/events.dto.ts\n            \n            class\n            EventsSearchInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/events/dto/events.dto.ts\n            \n            class\n            UpdateEventDto\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/events/services/events.service.ts\n            \n            injectable\n            EventsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/imagekit/imagekit.controller.ts\n            \n            controller\n            ImagekitController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/imagekit/imagekit.dto.ts\n            \n            class\n            ImagekitAuthParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/imagekit/imagekit.dto.ts\n            \n            class\n            ImagekitResponseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/imagekit/imagekit.service.ts\n            \n            injectable\n            ImagekitService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            updateReferences\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/news/controllers/news.controller.ts\n            \n            controller\n            NewsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/news/dto/news.dto.ts\n            \n            class\n            CreateNewsDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/news/dto/news.dto.ts\n            \n            class\n            NewsResponseDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/news/dto/news.dto.ts\n            \n            class\n            NewsSearchInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/news/dto/news.dto.ts\n            \n            class\n            UpdateNewsDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/news/services/news.service.ts\n            \n            injectable\n            NewsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/opportunity/controllers/opportunities.controller.ts\n            \n            controller\n            OpportunityController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/opportunity/dto/opportunities.dto.ts\n            \n            class\n            CreateOpportunityDto\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/opportunity/dto/opportunities.dto.ts\n            \n            class\n            OpportunityResponseDto\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/opportunity/dto/opportunities.dto.ts\n            \n            class\n            OpportunitySearchInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/opportunity/dto/opportunities.dto.ts\n            \n            class\n            UpdateOpportunityDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/opportunity/services/opportunities.service.ts\n            \n            injectable\n            OpportunityService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/organization/controllers/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/organization/dto/organization.dto.ts\n            \n            class\n            CreateOrganizationDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/organization/dto/organization.dto.ts\n            \n            class\n            OrganizationResponseDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/organization/dto/organization.dto.ts\n            \n            class\n            OrganizationSearchInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/organization/dto/organization.dto.ts\n            \n            class\n            UpdateOrganizationDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/organization/services/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/shared/acl/acl-rule.constant.ts\n            \n            type alias\n            AclRule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/shared/acl/acl-rule.constant.ts\n            \n            type alias\n            RuleCallback\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/shared/acl/acl.service.ts\n            \n            class\n            BaseAclService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/shared/acl/actor.constant.ts\n            \n            interface\n            Actor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/shared/configs/module-options.ts\n            \n            variable\n            configModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/common.ts\n            \n            variable\n            FORWARDED_FOR_TOKEN_HEADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/common.ts\n            \n            variable\n            REQUEST_ID_TOKEN_HEADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/common.ts\n            \n            variable\n            VALIDATION_PIPE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/index.ts\n            \n            variable\n            permissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/index.ts\n            \n            type alias\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/index.ts\n            \n            type alias\n            PermissionActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/index.ts\n            \n            type alias\n            PermissionModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/roles.permissions.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/users.permissions.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/decorators/sorting-params-swagger.decorator.ts\n            \n            variable\n            ApiSortingQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/decorators/sorting-params.decorator.ts\n            \n            variable\n            SortingParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/decorators/sorting-params.decorator.ts\n            \n            type alias\n            SortingParam\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/dtos/address.dto.ts\n            \n            class\n            AddressInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/dtos/address.dto.ts\n            \n            class\n            AddressResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/dtos/base-api-response.dto.ts\n            \n            class\n            BaseApiErrorObject\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/shared/dtos/base-api-response.dto.ts\n            \n            class\n            BaseApiErrorResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/dtos/base-api-response.dto.ts\n            \n            class\n            BaseApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/base-api-response.dto.ts\n            \n            interface\n            TypeMapping\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/dtos/base-api-response.dto.ts\n            \n            function\n            SwaggerBaseApiResponse\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/shared/dtos/base-api-response.dto.ts\n            \n            variable\n            responseTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/dtos/base-api-response.dto.ts\n            \n            type alias\n            ApiPropertyType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/dtos/gallery.dto.ts\n            \n            class\n            GalleryInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/gallery.dto.ts\n            \n            class\n            GalleryResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/dtos/pagination-params.dto.ts\n            \n            class\n            PaginationParamsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            AuthTokenApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            EventApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            EventArrayApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            ImagekitApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            OpportunityApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            OpportunityArrayApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            OrganizationApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            OrganizationArrayApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            RegisterApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            ResponseMetadata\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            TagApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            TagArrayApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            UserApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            UserArrayApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/exceptions/base-api.exception.ts\n            \n            class\n            BaseApiException\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            function\n            mergeWithAnd\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            variable\n            applyFilters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IApplyFiltersInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IApplyFiltersOutput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IAvailableFilters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IAvailableFiltersInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IAvailableFiltersOutput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IDefaultFilters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/interceptors/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/logger/logger.service.ts\n            \n            injectable\n            AppLogger\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/shared/middlewares/request-id/request-id.middleware.ts\n            \n            variable\n            RequestIdMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/prisma-module/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/shared/request-context/req-context.decorator.ts\n            \n            variable\n            ReqContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/request-context/request-context.dto.ts\n            \n            class\n            RequestContext\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/shared/request-context/util/index.ts\n            \n            function\n            createRequestContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/utils/createSearchKey.ts\n            \n            variable\n            createSearchKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/utils/createSearchKey.ts\n            \n            variable\n            fullTextOperatorMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/utils/createSearchKey.ts\n            \n            type alias\n            Operators\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/controllers/tags.controller.ts\n            \n            controller\n            TagController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tags/dto/tags-input.dto.ts\n            \n            class\n            AddTagDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tags/dto/tags-input.dto.ts\n            \n            class\n            TagSearchInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/tags/dto/tags-input.dto.ts\n            \n            type alias\n            TagsType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/dto/tags-output.dto.ts\n            \n            class\n            TagOutputDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/tags/services/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dtos/user-create-input.dto.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dtos/user-output.dto.ts\n            \n            class\n            UserOutput\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/dtos/user-update-input.dto.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/services/user-acl.service.ts\n            \n            injectable\n            UserAclService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/user/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^11.0.11\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.11\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @prisma/client : 6.4.1\n        \n            @scalar/nestjs-api-reference : ^0.4.2\n        \n            @types/uuid : ^10.0.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            imagekit : ^6.0.0\n        \n            joi : ^17.13.3\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rimraf : ^6.0.1\n        \n            rxjs : ^7.8.2\n        \n            uuid : ^11.1.0\n        \n            winston : ^3.17.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (src/.../action.constant.ts)\n                        \n                        \n                            ROLE   (src/.../role.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/acl/action.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Action\n                    \n                \n                    \n                        \n                            ACL action list\n\n                        \n                    \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 Read\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 Update\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n                        \n                            \n                                 Delete\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n                        \n                            \n                                 Manage\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n                        \n                            \n                                 List\n                            \n                        \n                        \n                            \n                                Value : list\n                            \n                        \n            \n        \n\n    src/auth/constants/role.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ROLE\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createRequestContext   (src/.../index.ts)\n                        \n                        \n                            mergeWithAnd   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            SwaggerBaseApiResponse   (src/.../base-api-response.dto.ts)\n                        \n                        \n                            updateReferences   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateReferences\n                        \n                    \n                \n            \n            \n                \nupdateReferences(obj: Record, oldRef: string, newRef: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                oldRef\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newRef\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/shared/request-context/util/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRequestContext\n                        \n                    \n                \n            \n            \n                \ncreateRequestContext(request: Request)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RequestContext\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/shared/filters/prisma-filter.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mergeWithAnd\n                        \n                    \n                \n            \n            \n                \nmergeWithAnd(current: T, incoming: T)\n                \n            \n\n\n\n\n            \n                \n                        Merges two prisma where conditions into a top-level AND to avoid any overwrites.\nIf current is empty, return incoming. Otherwise, nest them under { AND: [current, incoming] }.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                incoming\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/shared/dtos/base-api-response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SwaggerBaseApiResponse\n                        \n                    \n                \n            \n            \n                \nSwaggerBaseApiResponse(type: T)\n                \n            \n\n\n\n\n            \n                \n                        Returns a proper OpenAPI compatible response class\nThis function avoids using generics in OpenAPI schema generation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNCH Backend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppLoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagekitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpportunityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_imports\n\n\n\ncluster_AnalyticsModule_exports\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_AppLoggerModule\n\n\n\ncluster_AppLoggerModule_exports\n\n\n\ncluster_AppLoggerModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_providers\n\n\n\ncluster_ImagekitModule\n\n\n\ncluster_ImagekitModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_OpportunityModule\n\n\n\ncluster_OpportunityModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_exports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nSharedModule->AnalyticsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nImagekitModule\n\nImagekitModule\n\nImagekitModule -->\n\nSharedModule->ImagekitModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nSharedModule->NewsModule\n\n\n\n\n\nOpportunityModule\n\nOpportunityModule\n\nOpportunityModule -->\n\nSharedModule->OpportunityModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nSharedModule->OrganizationModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nTagsModule -->\n\nSharedModule->TagsModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nSharedModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppLoggerModule \n\nAppLoggerModule \n\nAppLoggerModule  -->\n\nSharedModule->AppLoggerModule \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\n\n\nAnalyticsService \n\nAnalyticsService \n\nAnalyticsService  -->\n\nAnalyticsModule->AnalyticsService \n\n\n\nAppModule -->\n\nAnalyticsModule->AppModule\n\n\n\n\n\nAnalyticsService\n\nAnalyticsService\n\nAnalyticsModule -->\n\nAnalyticsService->AnalyticsModule\n\n\n\n\n\nAppLogger \n\nAppLogger \n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\nSharedModule -->\n\nAppLoggerModule->SharedModule\n\n\n\nAppLogger  -->\n\nAppLoggerModule->AppLogger \n\n\n\n\n\nAppLogger\n\nAppLogger\n\nAppLoggerModule -->\n\nAppLogger->AppLoggerModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\nAppModule -->\n\nImagekitModule->AppModule\n\n\n\nAppModule -->\n\nNewsModule->AppModule\n\n\n\nAppModule -->\n\nOpportunityModule->AppModule\n\n\n\nAppModule -->\n\nOrganizationModule->AppModule\n\n\n\n\n\nOrganizationService \n\nOrganizationService \n\nOrganizationService  -->\n\nOrganizationModule->OrganizationService \n\n\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nAuthModule -->\n\nJwtAuthStrategy->AuthModule\n\n\n\nEventsModule -->\n\nJwtAuthStrategy->EventsModule\n\n\n\nNewsModule -->\n\nJwtAuthStrategy->NewsModule\n\n\n\nOpportunityModule -->\n\nJwtAuthStrategy->OpportunityModule\n\n\n\nOrganizationModule -->\n\nJwtAuthStrategy->OrganizationModule\n\n\n\nUserModule -->\n\nJwtAuthStrategy->UserModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\n\n\nImagekitService\n\nImagekitService\n\nImagekitModule -->\n\nImagekitService->ImagekitModule\n\n\n\n\n\nNewsService\n\nNewsService\n\nNewsModule -->\n\nNewsService->NewsModule\n\n\n\n\n\nOpportunityService\n\nOpportunityService\n\nOpportunityModule -->\n\nOpportunityService->OpportunityModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\nUserAclService\n\nUserAclService\n\nUserModule -->\n\nUserAclService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    58 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : NCH CMS Backend\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AclRule   (src/.../acl-rule.constant.ts)\n                        \n                        \n                            ApiPropertyType   (src/.../base-api-response.dto.ts)\n                        \n                        \n                            IApplyFiltersInput   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            IApplyFiltersOutput   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            IAvailableFilters   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            IAvailableFiltersInput   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            IAvailableFiltersOutput   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            IDefaultFilters   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            Operators   (src/.../createSearchKey.ts)\n                        \n                        \n                            Permission   (src/.../index.ts)\n                        \n                        \n                            PermissionActions   (src/.../index.ts)\n                        \n                        \n                            PermissionModule   (src/.../index.ts)\n                        \n                        \n                            RuleCallback   (src/.../acl-rule.constant.ts)\n                        \n                        \n                            SortingParam   (src/.../sorting-params.decorator.ts)\n                        \n                        \n                            TagsType   (src/.../tags-input.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/acl/acl-rule.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AclRule\n                \n            \n            \n                \n                    ACL rule format\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RuleCallback\n                \n            \n            \n                \n                    Custom rule callback definition\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/shared/dtos/base-api-response.dto.ts\n    \n    \n        \n            \n                \n                    \n                    ApiPropertyType\n                \n            \n            \n                \n                        Type<> | Function |  | string | number | boolean\n\n                \n            \n        \n    \n    src/shared/filters/prisma-filter.filter.ts\n    \n    \n        \n            \n                \n                    \n                    IApplyFiltersInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IApplyFiltersOutput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IAvailableFilters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IAvailableFiltersInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IAvailableFiltersOutput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDefaultFilters\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/shared/utils/createSearchKey.ts\n    \n    \n        \n            \n                \n                    \n                    Operators\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/shared/constants/permissions/index.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PermissionActions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PermissionModule\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/shared/decorators/sorting-params.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    SortingParam\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/tags/dto/tags-input.dto.ts\n    \n    \n        \n            \n                \n                    \n                    TagsType\n                \n            \n            \n                \n                        \"USER\" | \"ORGANIZATION\" | \"EVENT\" | \"NEWS\" | \"OPPORTUNITY\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSortingQuery   (src/.../sorting-params-swagger.decorator.ts)\n                        \n                        \n                            applyFilters   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            config   (src/.../roles.permissions.ts)\n                        \n                        \n                            config   (src/.../users.permissions.ts)\n                        \n                        \n                            configModuleOptions   (src/.../module-options.ts)\n                        \n                        \n                            createSearchKey   (src/.../createSearchKey.ts)\n                        \n                        \n                            FORWARDED_FOR_TOKEN_HEADER   (src/.../common.ts)\n                        \n                        \n                            fullTextOperatorMap   (src/.../createSearchKey.ts)\n                        \n                        \n                            permissions   (src/.../index.ts)\n                        \n                        \n                            prisma   (scripts/.../user.ts)\n                        \n                        \n                            ReqContext   (src/.../req-context.decorator.ts)\n                        \n                        \n                            REQUEST_ID_TOKEN_HEADER   (src/.../common.ts)\n                        \n                        \n                            RequestIdMiddleware   (src/.../request-id.middleware.ts)\n                        \n                        \n                            responseTypeMap   (src/.../base-api-response.dto.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.decorator.ts)\n                        \n                        \n                            seedSuperAdmin   (scripts/.../user.ts)\n                        \n                        \n                            SortingParams   (src/.../sorting-params.decorator.ts)\n                        \n                        \n                            STRATEGY_JWT_AUTH   (src/.../strategy.constant.ts)\n                        \n                        \n                            STRATEGY_JWT_REFRESH   (src/.../strategy.constant.ts)\n                        \n                        \n                            STRATEGY_LOCAL   (src/.../strategy.constant.ts)\n                        \n                        \n                            VALIDATION_PIPE_OPTIONS   (src/.../common.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/sorting-params-swagger.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiSortingQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (params: string[]) => {\n  return applyDecorators(\n    ApiQuery({\n      // the name of the query property to pass to the query object of the request.\n      name: 'sort',\n      // make optional\n      required: false,\n      // ensures that the sort parameter is serialized as a single string\n      explode: false,\n      type: String,\n      description: `param to sort in format: ?sort=property:(asc|desc), allowed: ${params.join(', ')}`,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/filters/prisma-filter.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  params: IApplyFiltersInput\n): Promise> => {\n  const { availableFilters, appliedFiltersInput } = params;\n  let whereBuilder: T = {} as T;\n\n  for (const [key, value] of Object.entries(appliedFiltersInput as any)) {\n    if (availableFilters[key] && value) {\n      const { where } = await availableFilters[key]({\n        filter: value,\n      });\n      whereBuilder = mergeWithAnd(whereBuilder, where);\n    }\n  }\n\n  return {\n    whereBuilder,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/constants/permissions/roles.permissions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  key: \"ROLES\",\n  name: \"Role Management\",\n  description: \"Role Management\",\n  permissions: [\n    {\n      action: \"ROLES_FULL\",\n      description: \"Full Access\",\n    },\n    {\n      action: \"ROLES_VIEW\",\n      description: \"View Access\",\n    },\n  ],\n} as const\n                    \n                \n\n\n        \n    \n\n    src/shared/constants/permissions/users.permissions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  key: \"USERS\",\n  name: \"User Management\",\n  description: \"User Management\",\n  permissions: [\n    {\n      action: \"USERS_FULL\",\n      description: \"Full Access\",\n    },\n    {\n      action: \"USERS_VIEW\",\n      description: \"View Access\",\n    },\n  ],\n} as const\n                    \n                \n\n\n        \n    \n\n    src/shared/configs/module-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configModuleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  envFilePath: \".env\",\n  load: [configuration],\n  validationSchema: Joi.object({\n    APP_ENV: Joi.string()\n      .valid(\"development\", \"production\", \"test\")\n      .default(\"development\"),\n    APP_PORT: Joi.number().required(),\n    DATABASE_URL: Joi.string().required(),\n    JWT_PUBLIC_KEY_BASE64: Joi.string().required(),\n    JWT_PRIVATE_KEY_BASE64: Joi.string().required(),\n    JWT_ACCESS_TOKEN_EXP_IN_SEC: Joi.number().required(),\n    JWT_REFRESH_TOKEN_EXP_IN_SEC: Joi.number().required(),\n    IMAGEKIT_PUB_KEY: Joi.string().required(),\n    IMAGEKIT_PVT_KEY: Joi.string().required(),\n    IMAGEKIT_ENDPOINT: Joi.string().required(),\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/utils/createSearchKey.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createSearchKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (input: string, operator: Operators) => {\n  // remove special characters except spaces\n  const sanitizedInput = input.replace(/[^a-zA-Z0-9\\s]/g, '').trim();\n  const op = fullTextOperatorMap[operator];\n\n  // split by space, remove falsy elments and join with supplied operator\n  const searchKey = sanitizedInput.split(/\\s+/).filter(Boolean).join(` ${op} `);\n\n  return searchKey;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullTextOperatorMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  OR: '|',\n  AND: '&',\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/constants/common.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FORWARDED_FOR_TOKEN_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'x-forwarded-for'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_ID_TOKEN_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'x-request-id'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VALIDATION_PIPE_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { transform: true, whitelist: true }\n                    \n                \n\n\n        \n    \n\n    src/shared/constants/permissions/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [userPermissions, rolePermissions] as const\n                    \n                \n\n\n        \n    \n\n    scripts/seed/user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seedSuperAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const pass = \"Test@123\";\n  const hasedPW = await hash(pass, 10);\n\n  const superAdmin: Prisma.UserCreateInput[] = [\n    {\n      fullName: \"NCH Admin\",\n      email: \"nchadmin@mailinator.com\",\n      password: hasedPW,\n      isAccountVerified: true,\n      isSuperAdmin: true,\n      gender: \"Male\",\n    },\n    {\n      fullName: \"Mukesh Kumar Chaudhary\",\n      email: \"mukezhz@gmail.com\",\n      password: hasedPW,\n      isAccountVerified: true,\n      isSuperAdmin: true,\n      gender: \"Male\",\n    },\n  ];\n\n  await prisma.user.createMany({\n    data: superAdmin,\n    skipDuplicates: true,\n  });\n  console.log(\"Super admin seeded!\");\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/request-context/req-context.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReqContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext): RequestContext => {\n    const request = ctx.switchToHttp().getRequest();\n\n    return createRequestContext(request);\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/shared/middlewares/request-id/request-id.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RequestIdMiddleware\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  req: Request,\n  res: Response,\n  next: () => void,\n): void => {\n  /** set request id, if not being set yet */\n  const requestIdToken = req.header(REQUEST_ID_TOKEN_HEADER) || '';\n\n  if (!requestIdToken || !validate(requestIdToken)) {\n    req.headers[REQUEST_ID_TOKEN_HEADER] = uuidv4();\n  }\n\n  /** set res id in response from req */\n  res.set(REQUEST_ID_TOKEN_HEADER, req.headers[REQUEST_ID_TOKEN_HEADER]);\n  next();\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/dtos/base-api-response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        responseTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeMapping\n\n                    \n                \n                \n                    \n                        Default value : {\n  UserOutput: UserApiResponse,\n  \"UserOutput[]\": UserArrayApiResponse,\n  TagOutputDto: TagApiResponse,\n  \"TagOutputDto[]\": TagArrayApiResponse,\n  EventResponseDto: EventApiResponse,\n  \"EventResponseDto[]\": EventArrayApiResponse,\n  OrganizationResponseDto: OrganizationApiResponse,\n  \"OrganizationResponseDto[]\": OrganizationArrayApiResponse,\n  OpportunityResponseDto: OpportunityApiResponse,\n  \"OpportunityResponseDto[]\": OpportunityArrayApiResponse,\n  AuthTokenOutput: AuthTokenApiResponse,\n  RegisterOutput: RegisterApiResponse,\n  ImagekitResponseDto: ImagekitApiResponse,\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: ROLE[]): CustomDecorator =>\n  SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/shared/decorators/sorting-params.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SortingParams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (validParams, ctx: ExecutionContext): SortingParam | null => {\n    const req: Request = ctx.switchToHttp().getRequest();\n    const sort = req.query.sort as string;\n    if (!sort) return null;\n\n    // check if the valid params sent is an array\n    if (typeof validParams != \"object\")\n      throw new NotAcceptableException(\"Invalid sort parameter\");\n\n    const schema = Joi.object({\n      property: Joi.string()\n        .valid(...validParams)\n        .required(),\n      direction: Joi.string().valid(\"asc\", \"desc\").required(),\n    });\n    const { error, value } = schema.validate({\n      property: sort.split(\":\")[0],\n      direction: sort.split(\":\")[1],\n    });\n    if (error) throw new NotAcceptableException(error.message);\n    const { property, direction } = value;\n    return { property, direction };\n  }\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants/strategy.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STRATEGY_JWT_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'jwt-auth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGY_JWT_REFRESH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'jwt-refresh'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGY_LOCAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'local'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
