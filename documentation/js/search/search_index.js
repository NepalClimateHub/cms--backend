var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Actor.html",[0,2.628,1,3.069]],["body/interfaces/Actor.html",[0,3.952,1,6.001,2,5.302,3,0.147,4,0.147,5,0.132,6,5.815,7,2.11,8,7.793,9,5.455,10,0.286,11,1.053,12,2.098,13,5.139,14,1.231,15,0.357,16,0.009,17,0.147,18,3.492,19,4.614,20,0.147,21,0.008,22,0.008]],["title/classes/AddTagDto.html",[23,0.268,24,2.9]],["body/classes/AddTagDto.html",[3,0.101,4,0.101,5,0.091,7,2.578,10,0.197,11,0.831,14,0.968,15,0.377,16,0.009,17,0.156,20,0.156,21,0.006,22,0.006,23,0.426,24,4.069,25,0.664,26,5.765,27,2.606,28,1.323,29,5.233,30,5.233,31,5.233,32,5.233,33,5.58,34,3.635,35,3.237,36,1.088,37,3.595,38,7.573,39,2.476,40,3.018,41,2.256,42,2.296,43,7.813,44,0.45,45,4.542,46,3.841,47,4.542,48,2.544,49,4.542,50,2.476,51,4.542,52,1.925,53,2.35,54,4.542,55,0.997,56,2.583,57,4.542,58,4.006,59,1.548,60,2.636,61,0.597,62,4.828,63,3.099,64,2.751,65,1.383,66,2.243,67,1.8,68,1.8,69,3.004,70,3.004,71,1.349]],["title/classes/AddressInput.html",[23,0.268,72,1.957]],["body/classes/AddressInput.html",[3,0.109,4,0.109,5,0.098,7,2.783,10,0.211,11,0.87,14,1.243,15,0.366,16,0.009,17,0.161,20,0.144,21,0.007,22,0.007,23,0.469,25,0.712,28,1.339,36,1.08,40,3.097,41,2.299,42,2.355,44,0.447,60,2.806,61,0.64,63,2.839,64,2.625,65,1.482,72,2.875,73,3.914,74,7.247,75,5.434,76,7.247,77,7.247,78,7.731,79,3.168,80,4.173,81,4.866,82,5.737,83,4.866,84,4.866,85,4.866,86,4.866,87,2.496,88,1.191,89,2.172]],["title/classes/AddressResponse.html",[23,0.268,89,1.957]],["body/classes/AddressResponse.html",[3,0.109,4,0.109,5,0.098,7,2.783,10,0.211,11,0.87,14,1.243,15,0.366,16,0.009,17,0.161,20,0.144,21,0.007,22,0.007,23,0.469,25,0.712,28,1.339,36,1.08,40,3.097,41,2.299,42,2.355,44,0.447,60,2.806,61,0.64,63,2.839,64,2.625,65,1.482,72,2.172,73,3.914,74,7.053,75,5.289,76,7.053,77,7.053,78,7.899,79,3.168,80,4.173,87,2.496,88,1.191,89,2.875,90,4.866,91,5.737,92,4.866,93,4.866,94,4.866,95,4.866]],["title/classes/AdminAnalyticsOutput.html",[23,0.268,96,3.069]],["body/classes/AdminAnalyticsOutput.html",[3,0.136,4,0.136,5,0.122,10,0.264,11,1.003,14,1.208,15,0.382,16,0.009,17,0.166,20,0.136,21,0.008,22,0.008,23,0.454,25,0.89,36,1.128,44,0.466,59,1.609,61,0.8,87,2.672,88,1.489,96,5.198,97,7.549,98,6.388,99,3.647,100,6.447,101,6.447,102,7.07,103,7.07,104,6.229,105,4.894,106,1.861,107,4.541,108,4.541,109,4.541]],["title/classes/AllExceptionsFilter.html",[23,0.268,110,3.272]],["body/classes/AllExceptionsFilter.html",[3,0.093,4,0.093,5,0.083,10,0.18,14,0.998,15,0.264,16,0.01,17,0.179,20,0.093,21,0.006,22,0.006,23,0.253,25,0.607,28,0.89,44,0.323,55,0.937,110,4.312,111,5.866,112,3.657,113,4.312,114,6.651,115,1.674,116,7.194,117,1.804,118,4.147,119,4.52,120,2.758,121,2.303,122,4.147,123,3.816,124,3.822,125,1.634,126,4.648,127,5.778,128,4.179,129,6.651,130,7.194,131,4.147,132,5.369,133,1.065,134,5.097,135,3.182,136,0.78,137,2.379,138,3.987,139,2.492,140,3.335,141,3.335,142,4.147,143,4.312,144,4.147,145,4.147,146,3.657,147,2.903,148,3.335,149,2.107,150,1.472,151,4.147,152,2.567,153,1.434,154,4.147,155,3.657,156,4.147,157,3.095,158,4.147,159,4.045,160,4.147,161,3.822,162,1.643,163,3.657,164,3.822,165,3.657,166,1.362,167,4.147,168,6.651,169,5.316,170,2.595,171,5.626,172,5.151,173,5.003,174,1.554,175,4.312,176,2.743,177,4.147,178,1.691,179,4.147,180,1.065,181,4.147,182,4.147,183,4.147,184,4.399,185,4.147,186,4.147,187,4.147,188,4.147,189,5.097,190,4.147,191,4.147,192,5.232,193,4.147,194,6.651,195,5.778,196,6.651,197,6.651,198,4.147,199,4.147,200,4.147,201,5.778,202,4.147,203,7.194,204,7.194,205,3.657,206,4.147,207,4.147,208,5.778,209,4.147,210,3.657,211,3.657,212,4.147,213,3.095,214,4.147,215,4.147,216,1.294,217,4.147,218,4.147,219,5.778,220,4.147,221,4.147,222,4.147,223,2.283,224,5.778,225,4.147,226,4.147,227,4.147]],["title/controllers/AnalyticsController.html",[228,1.689,229,3.272]],["body/controllers/AnalyticsController.html",[3,0.121,4,0.121,5,0.109,10,0.235,15,0.348,16,0.009,17,0.196,20,0.121,21,0.007,22,0.007,23,0.332,28,0.836,36,0.734,44,0.303,55,0.88,61,0.714,96,3.8,98,5.162,115,2.004,117,1.695,120,1.98,121,2.214,125,1.535,133,1.394,135,2.99,136,1.021,149,2.522,150,2.456,152,1.653,153,2.392,157,5.162,166,2.632,170,2.106,180,1.394,216,1.695,228,2.091,229,5.162,230,2.091,231,4.788,232,3.115,233,2.702,234,7.612,235,5.429,236,5.429,237,5.429,238,3.663,239,7.612,240,5.429,241,5.429,242,2.456,243,3.254,244,3.115,245,4.788,246,3.411,247,3.115,248,3.115,249,3.969,250,3.969,251,3.115,252,2.501,253,2.501,254,2.501,255,3.115,256,1.573,257,3.115,258,2.091,259,3.53,260,2.664,261,2.771,262,2.99,263,1.98,264,2.091,265,3.591,266,2.151,267,1.927,268,3.411,269,4.788,270,1.124,271,5.035,272,4.788,273,5.429,274,5.429,275,5.429,276,5.429,277,3.115,278,1.956,279,2.279,280,3.115,281,5.429,282,2.091,283,5.429]],["title/modules/AnalyticsModule.html",[284,1.369,285,3.069]],["body/modules/AnalyticsModule.html",[3,0.138,4,0.138,5,0.124,16,0.009,17,0.187,20,0.138,21,0.008,22,0.008,23,0.377,136,1.16,229,6.019,230,2.885,271,6.028,272,5.443,284,2.518,285,6.289,286,2.843,287,2.843,288,3.04,289,3.04,290,2.843,291,3.973,292,3.973,293,5.443,294,5.443,295,5.443,296,5.443,297,4.159,298,3.69,299,3.04,300,3.04,301,6.171,302,3.823,303,3.398,304,6.171]],["title/injectables/AnalyticsService.html",[271,2.9,305,0.999]],["body/injectables/AnalyticsService.html",[3,0.12,4,0.12,5,0.108,10,0.233,15,0.315,16,0.009,17,0.197,20,0.12,21,0.007,22,0.007,23,0.42,28,1.06,44,0.385,53,1.815,55,1.116,88,1.318,96,4.818,98,4.02,100,4.333,101,4.333,102,4.751,103,4.751,115,1.994,117,2.148,119,3.385,120,2.51,121,2.558,125,1.946,133,1.383,136,1.013,137,3.091,149,2.51,150,2.443,152,1.64,153,2.38,157,5.136,166,2.624,180,1.383,233,2.693,242,2.443,258,2.075,260,2.075,263,1.964,264,2.075,269,4.751,270,1.425,271,4.552,282,3.181,305,1.568,306,2.075,307,4.751,308,7.584,309,3.229,310,4.229,311,5.387,312,5.387,313,5.387,314,3.229,315,4.751,316,4.02,317,4.126,318,1.815,319,2.134,320,3.229,321,4.751,322,3.229,323,3.091,324,5.387,325,2.134,326,5.387,327,2.262,328,5.387,329,5.387,330,4.751,331,4.751,332,4.751,333,5.387,334,5.387,335,5.387,336,5.387,337,5.387,338,3.229]],["title/controllers/AppController.html",[228,1.689,339,3.272]],["body/controllers/AppController.html",[3,0.136,4,0.136,5,0.123,10,0.265,14,1.034,15,0.28,16,0.009,17,0.191,20,0.136,21,0.008,22,0.008,23,0.374,28,0.942,36,0.826,44,0.342,55,0.991,115,2.159,117,1.909,120,2.23,121,2.385,125,1.73,133,1.57,136,1.15,149,2.717,150,2.645,153,2.576,166,2.746,180,1.57,228,3.095,230,2.356,258,2.356,259,3.122,260,2.87,261,3.122,262,3.368,263,2.23,264,2.356,325,2.423,339,5.56,340,5.395,341,6.571,342,5.395,343,6.117,344,5.314,345,5.395,346,6.117,347,6.117,348,5.395,349,5.395,350,5.395,351,6.117]],["title/injectables/AppLogger.html",[121,1.404,305,0.999]],["body/injectables/AppLogger.html",[3,0.091,4,0.091,5,0.082,10,0.177,11,0.772,14,1.239,15,0.374,16,0.009,17,0.147,20,0.091,21,0.006,22,0.006,23,0.249,28,1.258,44,0.464,55,1.263,115,1.655,117,2.058,120,3.206,121,1.828,124,4.973,125,2.204,133,2.001,136,0.767,138,2.445,149,2.841,152,2.289,153,3.041,161,5.619,162,3.087,163,6.632,166,2.887,172,5.629,174,3.278,180,2.001,192,4.142,216,2.796,263,1.487,264,1.571,305,1.301,306,1.571,352,3.597,353,6.592,354,6.592,355,2.279,356,5.712,357,6.592,358,6.592,359,4.078,360,4.078,361,4.078,362,5.611,363,4.078,364,4.078,365,4.078,366,3.952,367,4.078,368,5.712,369,4.078,370,3.998,371,4.078,372,4.078,373,4.078,374,4.078,375,4.078,376,4.078,377,5.712,378,5.712,379,5.712,380,3.597,381,4.078,382,7.792,383,4.078,384,4.078,385,4.078,386,7.519,387,4.078,388,4.078,389,4.078,390,5.712]],["title/modules/AppLoggerModule.html",[284,1.369,391,3.069]],["body/modules/AppLoggerModule.html",[3,0.144,4,0.144,5,0.129,16,0.009,17,0.171,20,0.144,21,0.008,22,0.008,23,0.393,121,2.932,136,1.21,284,2.563,286,2.964,287,2.964,288,3.169,289,3.169,290,2.964,291,4.045,292,4.045,298,3.784,299,3.169,300,3.169,302,3.284,391,6.24,392,5.675,393,5.675,394,5.675,395,6.434,396,6.434]],["title/modules/AppModule.html",[284,1.369,397,3.272]],["body/modules/AppModule.html",[3,0.116,4,0.116,5,0.104,16,0.009,17,0.2,20,0.116,21,0.007,22,0.007,23,0.316,136,0.974,230,2.584,284,2.323,285,5.85,286,2.386,287,2.386,288,2.551,289,2.551,290,2.386,291,3.667,292,2.551,297,3.979,298,3.305,299,2.551,300,2.551,302,3.425,303,2.851,339,5.555,344,5.528,345,4.567,397,6.888,398,4.567,399,4.567,400,4.567,401,5.85,402,5.85,403,5.85,404,5.85,405,5.85,406,5.85,407,5.85,408,5.528,409,5.178,410,5.178,411,5.178,412,4.567,413,5.178,414,5.178,415,5.178,416,5.178,417,5.178,418,5.178,419,5.178]],["title/injectables/AppService.html",[305,0.999,344,2.9]],["body/injectables/AppService.html",[3,0.138,4,0.138,5,0.125,10,0.269,14,1.043,15,0.344,16,0.009,17,0.18,20,0.138,21,0.008,22,0.008,23,0.379,28,1.158,44,0.42,55,1.218,115,2.178,117,1.937,120,2.74,121,2.69,125,2.125,133,1.593,136,1.166,150,2.203,153,2.145,166,2.759,180,1.593,258,2.39,260,2.39,263,2.262,264,2.39,305,1.712,306,2.39,309,3.719,325,2.458,341,6.628,342,6.628,344,4.97,348,6.628,349,6.628,350,5.472,420,5.472,421,6.204,422,6.204,423,4.63,424,6.204,425,5.472]],["title/controllers/AuthController.html",[228,1.689,426,3.272]],["body/controllers/AuthController.html",[3,0.091,4,0.091,5,0.082,10,0.176,15,0.395,16,0.009,17,0.194,20,0.091,21,0.006,22,0.006,23,0.248,28,1.014,36,0.889,44,0.368,52,1.968,55,1.066,61,0.534,115,1.651,117,1.269,120,1.482,121,1.824,125,1.861,133,1.689,135,2.238,136,0.764,149,2.078,150,2.023,152,2.003,153,2.692,166,2.758,170,2.37,180,1.689,216,2.054,228,1.565,230,1.565,232,2.332,233,2.763,242,2.532,243,4.275,244,2.332,245,3.585,246,2.554,247,2.332,248,2.332,249,4.092,250,4.466,251,2.332,252,3.031,253,3.031,254,1.873,255,2.332,256,2.066,257,2.332,258,1.565,259,3.64,260,2.195,261,2.074,262,2.238,263,1.482,264,1.565,265,4.717,267,2.023,268,4.134,270,1.18,277,3.775,278,1.861,279,3.153,280,3.269,282,2.195,325,2.257,327,2.392,426,4.252,427,3.585,428,1.657,429,5.809,430,4.352,431,6.579,432,3.585,433,6.579,434,5.322,435,4.064,436,4.134,437,3.416,438,4.064,439,4.064,440,3.585,441,6.579,442,5.322,443,5.698,444,4.064,445,4.91,446,4.252,447,2.23,448,4.064,449,4.064,450,4.064,451,4.992,452,4.064,453,5.698,454,4.064,455,5.256,456,1.443,457,1.369,458,3.033,459,4.064,460,4.064,461,3.033,462,4.064,463,2.436,464,4.134,465,3.269,466,4.064,467,4.064,468,4.064,469,4.064,470,5.698,471,3.416,472,5.698,473,4.064,474,3.416,475,3.585,476,6.29,477,4.064,478,4.064,479,4.064,480,4.064,481,5.026,482,4.064,483,4.064,484,2.845,485,2.845,486,2.554,487,2.845,488,2.845,489,4.064,490,4.064,491,4.064,492,3.585,493,4.064]],["title/modules/AuthModule.html",[284,1.369,401,3.069]],["body/modules/AuthModule.html",[3,0.119,4,0.119,5,0.107,16,0.009,17,0.199,20,0.119,21,0.007,22,0.007,23,0.324,119,4.996,136,0.999,137,3.048,230,2.628,233,1.886,284,2.352,286,2.448,287,2.448,288,2.617,289,2.617,290,2.448,291,3.712,292,2.617,297,4.075,298,3.361,299,2.617,300,2.617,302,3.846,303,2.926,316,3.965,401,6.354,408,5.566,412,4.686,426,5.623,464,5.288,465,4.273,494,4.686,495,4.686,496,5.313,497,4.634,498,5.89,499,5.89,500,5.313,501,5.313,502,5.313,503,3.185,504,4.775,505,3.338,506,5.313,507,6.822,508,3.514,509,5.313,510,5.313,511,5.313,512,5.313,513,5.313,514,5.313,515,3.965,516,4.686,517,4.686,518,5.313,519,5.313,520,5.313,521,4.273,522,5.313]],["title/injectables/AuthService.html",[305,0.999,464,2.755]],["body/injectables/AuthService.html",[3,0.086,4,0.086,5,0.077,10,0.167,12,1.341,14,1.061,15,0.35,16,0.01,17,0.189,18,2.901,20,0.086,21,0.006,22,0.006,23,0.335,28,1.178,41,0.987,44,0.427,52,2.291,53,1.846,55,1.239,88,0.941,115,1.587,117,1.71,119,4.943,120,2.327,121,2.227,125,2.162,133,1.888,136,0.723,137,2.206,149,2.537,150,1.365,152,2.327,153,2.83,162,2.17,166,2.864,175,2.869,180,1.888,189,3.39,233,2.905,238,2.036,242,2.714,258,1.481,260,1.481,263,1.402,264,1.481,265,4.601,267,2.611,268,2.415,270,1.322,282,2.458,305,1.248,306,1.481,314,2.304,315,6.938,316,2.869,317,2.304,318,2.344,319,1.523,320,4.715,321,3.39,325,2.913,327,3.087,338,3.284,429,4.088,430,4.221,432,4.832,440,4.832,447,1.142,451,4.869,455,4.467,456,1.365,457,2.477,464,3.442,475,3.39,476,4.832,481,4.832,492,3.39,523,3.39,524,6.382,525,6.382,526,3.844,527,3.844,528,3.844,529,3.991,530,3.844,531,3.844,532,3.844,533,3.844,534,3.844,535,3.844,536,2.611,537,5.595,538,3.844,539,2.869,540,3.844,541,3.844,542,3.38,543,3.844,544,3.844,545,3.844,546,3.844,547,3.844,548,3.844,549,4.088,550,3.844,551,3.844,552,3.844,553,3.844,554,3.844,555,5.478,556,3.844,557,3.844,558,3.844,559,1.962,560,2.415,561,2.117,562,3.39,563,3.844,564,3.844,565,3.844,566,3.844,567,2.869,568,3.844,569,3.844,570,3.844,571,3.39,572,3.39,573,3.844,574,3.844,575,5.478,576,3.844,577,5.478,578,2.608,579,3.844,580,3.844,581,5.478,582,3.844,583,2.869,584,3.844,585,3.844,586,3.844]],["title/classes/AuthTokenApiResponse.html",[23,0.268,587,1.689]],["body/classes/AuthTokenApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.724,61,0.568,106,1.083,139,1.619,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.29,587,2.29,588,3.132,589,1.991,590,4.322,591,3.936,592,4.322,593,1.75,594,1.193,595,2.404,596,1.815,597,2.404,598,1.815,599,2.404,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,1.665,613,1.665,614,1.665,615,1.665,616,1.665,617,1.665,618,1.665,619,1.665,620,1.665,621,1.762,622,1.665]],["title/classes/AuthTokenOutput.html",[23,0.268,457,1.477]],["body/classes/AuthTokenOutput.html",[3,0.133,4,0.133,5,0.12,10,0.259,11,0.993,12,1.798,14,1.248,15,0.336,16,0.009,17,0.164,20,0.177,21,0.007,22,0.007,23,0.507,25,0.875,35,2.679,36,0.993,44,0.411,59,1.496,61,0.786,87,2.822,88,1.463,99,3.585,104,5.484,106,1.499,107,4.463,109,4.463,366,4.768,430,5.261,447,2.362,457,2.476,529,3.431,536,2.123,583,5.937,623,4.768,624,4.186,625,4.186,626,4.186,627,4.186,628,3.585,629,3.585,630,3.955]],["title/classes/BaseAclService.html",[23,0.268,631,3.272]],["body/classes/BaseAclService.html",[1,5.313,3,0.105,4,0.105,5,0.095,9,6.051,10,0.204,11,0.852,15,0.289,16,0.01,17,0.169,18,4.618,19,3.3,20,0.105,21,0.006,22,0.006,23,0.288,25,0.69,28,0.726,41,1.21,42,1.24,44,0.397,52,1.962,53,2.125,55,0.764,115,1.828,123,3.619,125,1.333,133,1.21,152,1.92,162,1.868,178,2.572,180,2.09,213,5.905,355,2.458,362,3.519,370,4.415,446,4.708,542,2.497,559,3.22,607,1.659,631,4.708,632,4.158,633,7.182,634,6.695,635,6.27,636,6.27,637,5.305,638,4.715,639,6.206,640,6.27,641,4.715,642,3.474,643,4.172,644,5.564,645,5.564,646,4.158,647,6.979,648,6.507,649,4.715,650,6.105,651,4.715,652,4.715,653,4.715,654,6.308,655,8.315,656,6.27,657,4.715,658,6.308,659,4.715,660,4.715,661,4.715,662,4.715,663,4.715,664,2.596,665,5.074,666,4.715,667,7.109,668,4.715,669,4.715,670,3.519,671,4.158,672,4.715,673,4.715,674,4.715]],["title/classes/BaseApiErrorObject.html",[23,0.268,675,2.9]],["body/classes/BaseApiErrorObject.html",[0,2.204,3,0.082,4,0.082,5,0.074,10,0.159,11,0.717,14,1.249,15,0.414,16,0.01,17,0.186,20,0.152,21,0.005,22,0.005,23,0.441,25,0.776,35,1.341,36,1.074,44,0.444,55,0.596,59,1.565,60,1.699,61,0.484,71,1.092,106,1.812,128,3.334,133,0.944,136,0.691,139,2.333,152,1.615,159,4.358,161,4.118,164,4.118,169,4.118,171,4.358,172,3.912,173,4.118,174,1.378,178,1.499,180,1.362,184,4.118,192,2.311,216,1.148,252,1.694,253,2.445,254,1.694,256,2.412,266,2.102,267,1.305,270,1.411,278,1.501,318,2.098,319,1.457,355,3.117,447,1.092,456,1.884,457,1.788,587,2.044,593,1.488,594,1.015,595,2.044,596,1.544,597,2.044,598,1.544,599,2.044,600,1.544,601,1.835,602,1.544,607,1.637,610,2.044,611,2.044,612,2.044,613,2.044,614,2.044,615,2.044,616,2.044,617,2.044,618,2.044,619,2.044,620,2.044,622,2.044,643,2.432,675,4.508,676,4.853,677,2.204,678,4.454,679,3.677,680,3.677,681,3.677,682,3.677,683,3.677,684,3.677,685,3.677,686,3.677,687,3.677,688,2.744,689,2.744,690,2.744,691,2.744,692,2.744,693,2.574,694,2.574,695,2.432,696,4.542,697,3.96,698,2.744,699,2.744,700,2.744,701,3.334,702,2.311,703,2.744,704,2.744,705,2.432,706,2.574,707,3.714,708,2.574,709,2.574,710,2.574,711,2.574,712,2.432,713,2.574,714,5.087,715,3.96,716,2.744,717,2.574,718,2.744,719,2.744,720,3.96,721,3.96,722,2.744,723,3.714,724,3.96,725,2.432,726,2.744,727,2.744,728,2.744,729,2.744,730,2.574]],["title/classes/BaseApiErrorResponse.html",[23,0.268,252,2.02]],["body/classes/BaseApiErrorResponse.html",[0,2.471,3,0.092,4,0.092,5,0.083,10,0.179,11,0.778,14,1.216,15,0.414,16,0.01,17,0.19,20,0.16,21,0.006,22,0.006,23,0.461,25,0.842,35,1.503,36,0.557,44,0.23,55,0.668,59,1.6,60,1.842,61,0.542,71,1.224,106,1.662,128,3.616,133,1.058,136,0.775,139,2.484,152,1.752,159,2.885,161,2.726,164,2.726,169,2.726,171,2.885,172,2.59,173,2.726,174,1.544,178,1.681,180,1.477,184,2.726,192,4.166,216,1.287,252,2.651,253,2.651,254,1.899,256,2.079,266,2.28,267,1.463,270,1.486,278,1.627,318,2.234,319,1.633,355,3.012,447,1.224,456,2.043,457,1.939,587,2.217,593,1.584,594,1.138,595,2.177,596,1.731,597,2.177,598,1.731,599,2.177,600,1.731,601,1.99,602,1.731,607,1.513,610,2.217,611,2.217,612,2.217,613,2.217,614,2.217,615,2.217,616,2.217,617,2.217,618,2.217,619,2.217,620,2.217,622,2.217,643,2.726,675,4.992,676,3.45,677,2.471,678,2.365,688,3.076,689,3.076,690,3.076,691,3.076,692,3.076,693,2.885,694,2.885,695,2.726,696,4.743,697,4.295,698,3.076,699,3.076,700,3.076,701,3.616,702,2.59,703,3.076,704,3.076,705,2.726,706,2.885,707,4.028,708,2.885,709,2.885,710,2.885,711,2.885,712,2.726,713,2.885,714,5.355,715,4.295,716,3.076,717,2.885,718,3.076,719,3.076,720,4.295,721,4.295,722,3.076,723,4.028,724,4.295,725,2.726,726,3.076,727,3.076,728,3.076,729,3.076,730,2.885,731,4.122]],["title/classes/BaseApiException.html",[23,0.268,143,3.272]],["body/classes/BaseApiException.html",[3,0.128,4,0.128,5,0.115,10,0.249,11,0.968,14,1.222,15,0.358,16,0.009,17,0.128,20,0.128,21,0.007,22,0.007,23,0.438,25,0.84,28,0.885,44,0.436,55,0.931,71,2.128,106,1.958,117,2.438,125,1.624,132,4.286,134,6.89,136,1.08,143,5.348,170,2.49,172,4.503,173,5.759,174,3.349,184,5.759,279,3.435,355,2.968,362,5.348,603,2.646,732,7.215,733,5.065,734,5.743,735,7.166,736,5.743,737,5.743,738,5.743,739,5.743,740,5.743,741,5.743,742,5.743,743,5.743]],["title/classes/BaseApiResponse.html",[23,0.268,253,2.02]],["body/classes/BaseApiResponse.html",[0,2.428,3,0.09,4,0.09,5,0.081,10,0.175,11,0.768,14,1.213,15,0.414,16,0.01,17,0.189,20,0.159,21,0.006,22,0.006,23,0.458,25,0.831,35,1.477,36,0.547,44,0.318,55,0.656,59,1.595,60,1.819,61,0.533,71,1.203,106,1.646,128,4.126,133,1.04,136,0.761,139,2.461,152,1.73,159,2.835,161,2.679,164,2.679,169,2.679,171,2.835,172,2.545,173,2.679,174,2.13,178,2.317,180,1.459,184,2.679,192,2.545,216,2.05,252,1.866,253,3.026,254,1.866,256,2.173,266,2.252,267,1.438,270,1.474,278,2.013,318,2.212,319,1.605,355,3.038,447,1.203,456,2.018,457,1.915,559,2.067,587,2.189,593,1.569,594,1.118,595,2.156,596,1.701,597,2.156,598,1.701,599,2.156,600,1.701,601,1.965,602,1.701,607,1.727,610,2.189,611,2.189,612,2.189,613,2.189,614,2.189,615,2.189,616,2.189,617,2.189,618,2.189,619,2.189,620,2.189,622,2.189,643,2.679,675,4.343,676,3.937,677,2.428,678,2.324,688,3.023,689,3.023,690,3.023,691,3.023,692,3.023,693,2.835,694,2.835,695,2.679,696,4.712,697,4.242,698,3.023,699,3.023,700,3.023,701,3.572,702,2.545,703,3.023,704,3.023,705,2.679,706,2.835,707,3.979,708,2.835,709,2.835,710,2.835,711,2.835,712,2.679,713,2.835,714,5.314,715,4.242,716,3.023,717,2.835,718,3.023,719,3.023,720,4.242,721,4.242,722,3.023,723,3.979,724,4.242,725,2.679,726,3.023,727,3.023,728,3.023,729,3.023,730,2.835,744,4.05,745,4.05]],["title/classes/CreateEventDto.html",[23,0.268,746,2.628]],["body/classes/CreateEventDto.html",[3,0.051,4,0.051,5,0.046,7,2.92,10,0.098,11,0.495,12,1.521,14,1.268,15,0.405,16,0.009,17,0.146,20,0.118,21,0.004,22,0.004,23,0.38,25,0.332,28,1.295,35,1.337,36,1.11,37,3.138,39,2.872,40,2.84,41,2.247,42,2.339,44,0.459,53,1.235,55,0.858,56,2.223,59,1.641,60,2.773,61,0.299,62,2.198,63,3.143,64,2.933,65,0.691,66,1.337,67,0.899,68,0.899,71,0.674,72,2.363,79,2.925,80,2.767,87,2.611,88,0.556,89,1.636,170,0.691,270,0.47,279,3.1,536,1.88,593,0.876,594,0.626,595,0.745,607,1.393,664,2.019,746,2.198,747,1.589,748,3.239,749,2.594,750,2.594,751,3.484,752,2.863,753,4.214,754,3.2,755,3.241,756,4.51,757,3.484,758,4.081,759,4.337,760,4.337,761,3.239,762,4.337,763,2.302,764,2.864,765,1.501,766,2.27,767,3.038,768,3.038,769,1.302,770,2.27,771,2.159,772,2.703,773,2.27,774,2.27,775,3.174,776,1.694,777,2.27,778,2.703,779,2.002,780,2.27,781,4.337,782,2.27,783,2.703,784,2.363,785,1.826,786,2.27,787,4.068,788,2.27,789,2.774,790,2.765,791,1.694,792,1.694,793,2.27,794,2.002,795,2.27,796,2.27,797,2.002,798,2.27,799,3.353,800,2.27,801,3.174,802,2.27,803,2.198,804,2.27,805,2.27,806,2.27,807,2.177,808,2.363,809,2.27,810,2.27,811,2.27,812,2.27,813,2.291,814,2.44,815,2.354,816,1.159,817,1.636,818,1.159,819,1.361,820,2.354,821,2.354,822,2.058,823,1.361,824,2.736,825,1.694,826,1.589,827,1.694]],["title/classes/CreateNewsDto.html",[23,0.268,828,2.628]],["body/classes/CreateNewsDto.html",[3,0.074,4,0.179,5,0.067,7,2.882,10,0.144,11,0.667,12,1.78,14,1.257,15,0.382,16,0.009,17,0.155,20,0.145,21,0.005,22,0.005,23,0.444,25,0.487,28,1.002,36,1.045,37,3.246,40,3.066,41,1.985,42,2.113,44,0.432,46,4.82,56,2.731,59,1.676,60,2.528,61,0.438,63,3.049,64,2.885,65,1.014,66,1.8,67,1.32,68,1.32,71,0.99,79,1.956,87,2.646,88,0.815,162,2.577,170,1.014,223,4.348,238,2.615,270,0.69,593,1.18,594,0.92,749,3.099,750,3.099,752,2.432,763,2.751,764,3.701,767,3.45,768,3.45,769,1.912,771,2.652,778,2.52,784,2.903,799,4.106,801,3.899,803,1.997,807,2.602,808,2.903,813,2.136,822,2.625,828,2.96,829,2.332,830,5.183,831,5.183,832,3.332,833,5.77,834,2.68,835,3.332,836,3.332,837,3.332,838,3.332,839,3.332,840,5.428,841,3.685,842,3.685,843,3.332,844,3.332,845,3.332,846,3.332,847,3.332,848,3.332,849,3.332,850,2.332,851,3.685,852,3.685,853,1.997,854,4.39,855,4.39,856,4.39,857,2.487,858,4.39,859,1.997,860,3.685,861,3.456,862,1.997,863,2.487,864,2.487,865,1.586,866,2.487,867,1.912,868,2.487,869,2.094]],["title/classes/CreateOpportunityDto.html",[23,0.268,870,2.628]],["body/classes/CreateOpportunityDto.html",[3,0.056,4,0.056,5,0.05,7,2.92,10,0.109,11,0.537,12,1.591,14,1.269,15,0.405,16,0.009,17,0.152,20,0.125,21,0.004,22,0.004,23,0.397,25,0.367,28,1.288,36,1.114,37,3.245,40,2.829,41,2.217,42,2.32,44,0.461,48,2.984,55,0.909,56,1.669,59,1.651,60,2.743,61,0.33,63,3.126,64,2.938,65,0.764,66,1.449,67,0.995,68,0.995,71,0.746,72,2.503,79,2.88,80,2.349,87,2.609,88,0.615,89,1.774,170,0.764,270,0.52,279,3.053,536,1.991,593,0.95,594,0.693,599,0.825,607,1.475,748,3.35,749,2.728,750,2.728,751,3.664,752,3.011,753,4.358,754,3.58,755,1.196,756,4.633,757,3.664,758,4.233,761,3.35,763,2.421,764,2.995,765,1.661,767,3.151,768,3.151,769,1.441,771,2.287,772,2.863,775,3.363,776,1.874,778,2.863,779,2.215,781,4.186,783,2.863,784,2.503,785,2.02,787,3.506,789,1.121,794,2.215,797,2.215,799,2.763,803,2.383,807,2.29,808,2.503,813,1.72,814,2.584,815,1.282,816,1.282,817,1.774,818,1.282,820,2.029,821,2.518,822,2.202,870,2.383,871,1.758,872,4.561,873,4.561,874,2.511,875,2.511,876,2.511,877,1.874,878,2.511,879,2.511,880,2.511,881,2.511,882,2.511,883,2.511,884,2.511,885,2.511,886,2.511,887,2.511,888,2.511,889,2.511,890,2.511,891,2.511,892,2.966,893,2.966,894,2.511,895,2.511,896,2.511,897,1.505,898,1.874,899,1.505,900,1.874,901,1.874]],["title/classes/CreateOrganizationDto.html",[23,0.268,902,2.628]],["body/classes/CreateOrganizationDto.html",[3,0.061,4,0.061,5,0.055,7,2.902,10,0.118,11,0.573,12,1.866,14,1.253,15,0.388,16,0.009,17,0.157,20,0.131,21,0.004,22,0.004,23,0.411,25,0.399,28,1.27,36,1.08,37,2.838,40,3.081,41,2.246,42,2.324,44,0.447,50,2.838,53,1.429,55,1.236,56,2.465,59,1.645,60,2.639,61,0.359,63,3.076,64,2.766,65,0.83,66,1.547,67,1.081,68,1.081,71,0.81,72,2.62,75,3.882,79,2.878,80,3.459,82,2.036,87,2.524,88,0.668,89,1.893,106,1.471,170,0.83,270,0.565,536,2.649,593,1.014,594,0.753,597,0.896,607,1.544,628,3.811,629,3.811,664,2.336,748,3.438,749,2.838,750,2.838,755,3.459,761,3.438,763,2.519,765,1.804,767,3.242,768,3.679,769,2.434,771,2.962,772,3.708,783,2.996,784,2.62,785,2.194,789,3.004,790,3.119,791,2.036,792,2.036,803,2.543,807,2.382,808,2.62,813,2.54,814,2.398,815,2.656,816,1.392,817,1.893,818,1.392,820,2.996,821,2.656,822,2.322,834,2.194,902,2.543,903,1.909,904,4.745,905,4.745,906,2.728,907,2.728,908,2.728,909,2.728,910,2.728,911,2.728,912,2.728,913,5.421,914,2.728,915,2.728,916,2.728,917,2.728,918,2.728,919,5.421,920,4.381,921,2.406,922,2.728,923,2.728,924,2.728,925,2.728,926,1.635,927,3.884,928,3.884,929,3.442,930,3.884,931,1.635,932,1.804,933,1.909]],["title/classes/CreateUserInput.html",[23,0.268,934,3.272]],["body/classes/CreateUserInput.html",[3,0.121,4,0.121,5,0.109,10,0.236,11,0.935,13,4.566,14,1.209,15,0.388,16,0.009,17,0.17,18,4.035,19,3.806,20,0.121,21,0.007,22,0.007,23,0.423,25,0.795,27,3.12,35,2.525,36,1.144,44,0.473,53,2.333,55,1.235,58,4.796,59,1.592,60,2.216,61,0.715,62,4.15,63,2.458,64,2.501,65,1.655,536,2.704,642,4.737,664,3.813,813,2.996,814,3.19,934,5.167,935,6.421,936,6.127,937,4.787,938,5.685,939,4.796,940,5.437,941,5.437,942,5.437,943,4.796,944,5.437,945,4.195,946,5.437,947,5.437,948,4.796,949,4.796,950,5.437,951,5.437,952,6.923,953,6.923,954,5.437,955,5.797,956,4.374,957,4.058,958,5.569,959,5.437,960,4.374]],["title/classes/EventApiResponse.html",[23,0.268,614,1.689]],["body/classes/EventApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.724,61,0.568,106,1.083,139,1.619,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.75,594,1.193,595,2.521,596,1.815,597,2.404,598,1.815,599,2.404,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,1.665,613,1.665,614,2.29,615,1.665,616,1.665,617,1.665,618,1.665,619,1.665,620,1.665,621,1.762,622,1.665,961,4.322,962,4.322]],["title/classes/EventArrayApiResponse.html",[23,0.268,615,1.689]],["body/classes/EventArrayApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.631,34,1.76,36,0.803,39,1.532,41,1.525,42,1.562,44,0.332,48,1.574,50,1.532,52,1.191,59,1.722,61,0.568,106,1.082,139,1.617,170,1.314,174,1.617,216,2.752,256,1.969,266,2.354,267,1.532,270,1.515,278,2.494,318,2.466,319,1.71,355,3.175,428,1.76,447,1.282,456,2.109,457,2.002,587,1.663,588,3.13,589,1.989,591,3.935,593,1.749,594,1.191,595,2.52,596,1.812,597,2.403,598,1.812,599,2.403,600,1.812,601,2.054,602,1.812,603,1.989,604,1.989,605,1.812,606,3.869,607,1.562,608,1.454,609,2.055,610,1.663,611,1.663,612,1.663,613,1.663,614,1.663,615,2.288,616,1.663,617,1.663,618,1.663,619,1.663,620,1.663,621,1.76,622,1.663,678,2.477,963,4.316,964,4.316]],["title/classes/EventResponseDto.html",[23,0.268,595,1.44]],["body/classes/EventResponseDto.html",[3,0.05,4,0.05,5,0.045,7,2.918,10,0.097,11,0.491,12,1.714,14,1.267,15,0.406,16,0.009,17,0.145,20,0.117,21,0.004,22,0.004,23,0.378,25,0.328,28,1.263,35,1.669,36,1.122,37,3.403,39,2.889,40,2.834,41,2.238,42,2.337,44,0.464,53,1.224,55,0.852,56,2.208,59,1.639,60,2.769,61,0.295,62,2.177,63,3.14,64,2.93,65,0.683,66,1.324,67,0.889,68,0.889,71,0.666,72,2.042,79,2.774,80,2.751,87,2.606,88,0.549,89,2.042,91,1.674,170,0.683,270,0.465,279,3.089,536,1.867,593,1.093,594,0.619,595,1.193,607,1.383,664,2,746,1.345,747,1.57,748,3.226,749,2.578,750,2.578,751,3.463,752,2.846,753,4.197,754,3.181,755,2.944,756,4.495,757,3.463,758,4.063,759,4.311,760,4.311,761,3.226,762,4.311,763,1.813,764,2.848,767,3.025,768,3.025,771,2.144,772,2.684,775,3.153,778,2.684,783,2.684,784,2.347,789,2.578,790,2.177,799,3.339,801,3.153,807,2.439,808,2.347,813,2.276,814,2.423,815,2.336,816,1.145,817,2.042,818,1.145,819,1.345,820,2.336,821,2.336,822,2.042,823,1.345,824,3.925,825,1.674,826,3.203,827,2.711,965,2.244,966,1.805,967,2.244,968,1.805,969,2.244,970,1.979,971,2.244,972,1.979,973,2.244,974,4.036,975,2.244,976,1.979,977,2.244,978,2.711,979,2.244,980,4.036,981,2.244,982,2.244,983,2.244,984,2.244,985,2.244,986,1.979,987,2.244,988,2.244,989,1.979,990,2.244,991,3.204,992,2.244,993,2.244,994,1.979,995,2.244,996,2.244,997,2.244,998,2.244,999,1.979,1000,2.244,1001,2.244]],["title/controllers/EventsController.html",[228,1.689,1002,3.272]],["body/controllers/EventsController.html",[3,0.076,4,0.076,5,0.069,10,0.148,12,2.031,14,1.104,15,0.407,16,0.009,17,0.177,20,0.076,21,0.005,22,0.005,23,0.209,28,1.082,36,0.949,39,2.767,44,0.393,55,1.139,61,0.451,115,1.461,117,1.07,120,1.25,121,1.614,125,1.987,133,1.804,135,1.887,136,0.644,149,1.838,150,1.79,152,2.139,153,2.797,166,2.815,170,2.462,180,1.804,216,2.193,228,1.32,230,1.32,232,1.966,233,3.024,242,2.871,243,3.585,244,1.966,246,3.168,247,1.966,248,1.966,249,4.216,250,4.705,251,1.966,252,3.778,253,1.579,254,1.579,255,1.966,256,2.129,257,1.966,258,1.32,259,3.75,260,1.942,261,1.749,262,1.887,263,1.25,264,1.32,277,4.031,278,1.987,279,3.396,280,4.031,282,2.706,325,2.784,327,2.95,436,4.415,437,4.212,463,2.054,471,4.212,474,4.212,561,2.776,578,3.851,595,1.125,608,1.698,746,3.952,819,3.952,823,3.952,1002,3.762,1003,3.023,1004,7.392,1005,5.274,1006,5.274,1007,5.274,1008,5.274,1009,5.274,1010,3.023,1011,2.399,1012,3.427,1013,3.023,1014,2.558,1015,4.186,1016,5.484,1017,3.427,1018,3.023,1019,3.75,1020,2.267,1021,3.427,1022,3.023,1023,2.558,1024,3.427,1025,3.023,1026,2.558,1027,2.483,1028,3.427,1029,2.153,1030,2.267,1031,4.143,1032,1.887,1033,2.153,1034,3.955,1035,3.023,1036,3.023,1037,3.427,1038,3.427,1039,3.427,1040,3.427,1041,3.023,1042,3.427,1043,3.757,1044,6.593,1045,3.023,1046,3.427,1047,2.558,1048,4.186,1049,3.023,1050,3.427,1051,2.558,1052,3.023,1053,3.427,1054,2.558,1055,3.023,1056,3.427,1057,3.427]],["title/modules/EventsModule.html",[284,1.369,402,3.069]],["body/modules/EventsModule.html",[3,0.137,4,0.137,5,0.123,16,0.009,17,0.191,20,0.137,21,0.008,22,0.008,23,0.375,136,1.154,230,2.876,284,2.512,286,2.828,287,2.828,288,3.024,289,3.024,290,2.828,291,3.964,292,3.024,297,4.154,298,3.678,299,3.024,300,3.024,302,3.811,303,3.38,402,6.32,497,4.804,508,4.06,1002,6.005,1034,5.771,1035,5.414,1058,5.414,1059,6.138,1060,5.414,1061,6.138,1062,4.297,1063,6.138]],["title/classes/EventsSearchInput.html",[23,0.268,819,2.628]],["body/classes/EventsSearchInput.html",[3,0.059,4,0.059,5,0.053,7,2.94,10,0.115,11,0.561,12,1.536,14,1.267,15,0.397,16,0.009,17,0.155,20,0.129,21,0.004,22,0.004,23,0.406,25,0.388,28,0.64,35,1.514,36,0.782,39,2.855,40,2.81,41,2.278,42,2.328,44,0.323,53,1.949,55,0.829,56,2.147,59,1.668,60,2.822,61,0.349,62,2.489,63,3.186,64,2.968,65,0.808,66,2.289,67,1.052,68,1.052,71,1.233,72,2.283,79,1.645,80,2.989,87,2.673,88,0.65,89,1.853,106,1.041,178,1.693,270,0.55,279,3.022,536,1.816,559,2.12,593,0.992,594,0.733,595,0.872,607,1.345,664,2.287,746,1.591,747,1.858,748,3.067,749,2.283,750,2.283,751,3.066,752,2.52,753,3.99,754,2.816,755,2.989,756,4.436,757,3.066,758,3.99,759,3.817,760,3.817,761,3.067,762,3.817,763,2.487,764,3.067,767,2.971,768,2.971,771,2.085,772,2.61,775,3.066,778,2.61,783,2.61,784,2.283,789,2.802,790,2.489,799,3.279,801,3.066,807,2.167,808,2.283,813,2.503,814,2.665,815,2.61,816,1.355,817,1.853,818,1.355,819,2.489,820,2.61,821,2.61,822,2.283,823,1.591,824,3.099,825,1.981,826,1.858,827,1.981,945,2.287,1064,2.12,1065,2.12,1066,2.342,1067,2.655,1068,2.655,1069,2.135,1070,2.655,1071,2.747,1072,2.747,1073,2.747,1074,2.747,1075,1.858,1076,2.609,1077,1.858]],["title/injectables/EventsService.html",[305,0.999,1034,2.9]],["body/injectables/EventsService.html",[3,0.067,4,0.067,5,0.061,10,0.131,12,2.07,14,1.088,15,0.321,16,0.01,17,0.172,20,0.067,21,0.005,22,0.005,23,0.28,28,1.081,29,3.214,39,2.784,44,0.392,53,2.783,55,1.137,88,0.74,100,3.693,115,1.33,117,1.433,120,1.674,121,1.984,123,2.634,125,1.983,133,1.711,136,0.569,149,1.674,150,1.63,152,2.46,153,2.712,162,2.455,166,2.758,180,1.871,223,2.528,233,3.003,242,2.784,258,1.165,260,1.165,263,1.103,264,1.165,278,1.884,282,2.962,305,1.046,306,1.165,309,1.813,310,3.591,317,1.813,322,1.813,323,1.735,325,2.64,327,2.798,331,2.668,338,3.994,542,2.94,560,1.9,578,3.576,595,0.993,605,1.27,608,1.019,642,4.014,746,3.715,748,3.672,755,3.34,761,3.46,763,2.64,764,2.557,807,2.496,819,3.715,823,3.715,826,3.885,865,1.44,1004,4.895,1005,4.895,1006,4.895,1007,4.895,1008,4.895,1009,4.895,1010,2.668,1013,2.668,1018,2.668,1019,3.163,1022,2.668,1025,2.668,1027,2.262,1034,3.037,1036,2.668,1041,2.668,1045,2.668,1049,2.668,1052,2.668,1055,2.668,1064,2.344,1065,2.344,1078,2.668,1079,3.024,1080,3.024,1081,3.024,1082,3.024,1083,3.024,1084,3.024,1085,2.257,1086,2.117,1087,2.885,1088,2.117,1089,2.117,1090,1.735,1091,1.813,1092,1.9,1093,2.117,1094,3.024,1095,3.214,1096,2,1097,4.464,1098,2,1099,2,1100,3.671,1101,3.037,1102,2.117,1103,2.117,1104,3.214,1105,2.117,1106,2.117,1107,3.024,1108,3.427,1109,2.257,1110,2.257,1111,2.117,1112,2.117,1113,5.55,1114,5.55,1115,5.55,1116,3.885,1117,4.625,1118,3.024,1119,3.427,1120,3.427,1121,4.464,1122,4.591,1123,3.024,1124,4.591,1125,4.591,1126,3.024,1127,3.693,1128,2.117,1129,2.257,1130,2.117,1131,3.427,1132,2.257,1133,2.257]],["title/classes/GalleryInput.html",[23,0.268,789,1.957]],["body/classes/GalleryInput.html",[3,0.135,4,0.178,5,0.121,7,2.365,10,0.261,11,0.998,12,1.808,14,1.25,15,0.338,16,0.009,17,0.178,20,0.165,21,0.007,22,0.007,23,0.508,25,0.882,28,1.138,36,0.998,37,3.297,44,0.413,59,1.501,61,0.793,64,2.622,65,1.836,87,2.747,88,1.476,355,2.554,771,2.459,789,3.297,817,2.692,865,2.872,867,3.461,869,3.79,1134,4.852,1135,7.34,1136,7.34,1137,6.032,1138,6.032,1139,6.032,1140,6.032]],["title/classes/GalleryResponse.html",[23,0.268,817,1.957]],["body/classes/GalleryResponse.html",[3,0.127,4,0.159,5,0.114,7,2.282,10,0.247,11,0.963,12,1.996,14,1.262,15,0.392,16,0.009,17,0.174,20,0.159,21,0.007,22,0.007,23,0.498,25,0.833,36,1.158,44,0.479,59,1.463,61,0.749,64,2.555,65,1.734,87,2.828,88,1.394,355,1.97,771,2.322,789,2.542,817,3.182,865,3.706,867,4.465,869,4.89,1134,4.581,1135,7.194,1136,7.194,1141,5.696,1142,5.696,1143,5.696,1144,5.696,1145,5.696,1146,5.696]],["title/classes/ImagekitApiResponse.html",[23,0.268,622,1.689]],["body/classes/ImagekitApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.724,61,0.568,106,1.083,139,1.619,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.75,594,1.193,595,2.404,596,1.815,597,2.404,598,1.815,599,2.404,600,1.815,601,2.351,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,1.665,613,1.665,614,1.665,615,1.665,616,1.665,617,1.665,618,1.665,619,1.665,620,1.665,621,1.762,622,2.29,1147,4.322,1148,4.322]],["title/classes/ImagekitAuthParams.html",[23,0.268,1149,3.272]],["body/classes/ImagekitAuthParams.html",[3,0.125,4,0.125,5,0.113,7,2.773,10,0.243,11,0.954,14,1.202,15,0.354,16,0.009,17,0.157,20,0.125,21,0.007,22,0.007,23,0.472,25,0.82,36,1.044,37,3.448,40,2.95,44,0.432,59,1.647,61,0.737,87,2.735,88,1.371,106,1.769,428,3.15,447,2.572,515,4.182,601,1.938,621,3.604,702,3.521,932,3.706,1149,5.765,1150,4.507,1151,6.814,1152,6.814,1153,6.225,1154,7.057,1155,5.604,1156,6.225,1157,5.604,1158,4.943,1159,5.604,1160,6.225,1161,4.507,1162,4.943,1163,5.267,1164,4.943,1165,5.676]],["title/controllers/ImagekitController.html",[228,1.689,1166,3.272]],["body/controllers/ImagekitController.html",[3,0.12,4,0.12,5,0.108,10,0.233,15,0.378,16,0.009,17,0.196,20,0.12,21,0.007,22,0.007,23,0.328,28,0.827,36,0.726,44,0.3,55,0.87,61,0.706,115,1.99,117,1.676,120,1.958,121,2.199,125,1.519,133,1.379,135,2.957,136,1.01,149,2.505,150,2.439,152,1.635,153,2.375,166,2.621,170,2.091,180,1.379,216,1.676,228,2.068,230,2.068,232,3.081,233,2.689,242,2.439,244,3.081,247,3.081,248,3.081,249,3.941,250,4.345,251,3.081,252,3.489,253,2.474,254,2.474,255,3.081,256,1.556,257,3.081,258,2.068,259,3.506,260,2.646,261,2.741,262,2.957,263,1.958,264,2.068,277,3.081,278,1.519,279,2.884,280,3.081,282,2.068,325,2.128,327,2.255,428,2.801,437,3.219,463,3.219,471,3.219,474,3.219,601,1.857,621,3.088,1031,4.316,1032,2.957,1033,3.374,1043,3.374,1166,5.126,1167,4.737,1168,7.573,1169,5.37,1170,5.37,1171,5.37,1172,5.37,1173,4.737,1174,5.009,1175,4.737,1176,5.37,1177,5.37,1178,5.37,1179,4.319,1180,5.37,1181,5.37,1182,6.869,1183,5.37]],["title/modules/ImagekitModule.html",[284,1.369,403,3.069]],["body/modules/ImagekitModule.html",[3,0.14,4,0.14,5,0.126,16,0.009,17,0.188,20,0.14,21,0.008,22,0.008,23,0.384,136,1.183,230,2.92,284,2.539,286,2.9,287,2.9,288,3.101,289,3.101,290,2.9,291,4.007,292,3.101,297,4.179,298,3.734,299,3.101,300,3.101,302,3.869,303,3.466,403,6.267,1166,6.071,1174,5.805,1175,5.551,1184,5.551,1185,5.551,1186,6.294,1187,6.294,1188,6.294]],["title/classes/ImagekitResponseDto.html",[23,0.268,601,1.516]],["body/classes/ImagekitResponseDto.html",[3,0.124,4,0.124,5,0.111,7,2.766,10,0.24,11,0.947,14,1.213,15,0.37,16,0.009,17,0.156,20,0.124,21,0.007,22,0.007,23,0.469,25,0.811,36,1.091,37,3.604,40,2.657,44,0.451,59,1.644,61,0.729,87,2.774,88,1.356,106,1.389,428,3.133,447,2.282,515,5.735,601,2.423,621,3.597,702,4.403,932,3.665,1149,5.735,1150,4.457,1151,4.888,1152,4.888,1153,4.888,1156,4.888,1160,6.181,1161,6.181,1162,6.181,1163,6.027,1164,6.181,1165,6.495,1189,5.541,1190,5.541,1191,5.541,1192,5.541,1193,5.541,1194,5.541]],["title/injectables/ImagekitService.html",[305,0.999,1174,2.9]],["body/injectables/ImagekitService.html",[3,0.123,4,0.123,5,0.111,10,0.24,11,0.946,14,1.18,15,0.352,16,0.009,17,0.19,20,0.123,21,0.007,22,0.007,23,0.338,28,1.078,44,0.429,55,1.135,115,2.029,117,2.185,119,5.344,120,2.8,121,2.583,125,1.98,133,1.42,136,1.04,137,3.174,149,3.036,150,2.865,152,1.684,153,1.913,162,2.192,166,2.65,180,1.42,233,2.726,242,2.485,258,2.131,260,2.131,263,2.017,264,2.131,305,1.595,306,2.131,325,2.192,327,2.323,515,5.224,517,4.88,601,1.913,621,3.563,1161,5.631,1163,4.129,1165,4.45,1173,4.88,1174,4.63,1195,4.88,1196,7,1197,4.45,1198,7,1199,7,1200,5.533,1201,5.533,1202,7,1203,5.533,1204,5.533,1205,7,1206,5.533,1207,5.533,1208,5.533,1209,5.533]],["title/injectables/JwtAuthGuard.html",[305,0.999,1032,2.414]],["body/injectables/JwtAuthGuard.html",[3,0.186,4,0.125,5,0.113,10,0.243,15,0.323,16,0.009,17,0.181,20,0.125,21,0.007,22,0.007,23,0.342,28,1.087,35,2.573,40,1.938,44,0.394,52,2.307,55,1.144,71,2.096,115,2.045,124,4.668,125,1.996,132,4.182,133,1.812,136,1.054,162,2.22,176,3.706,180,1.812,242,2.505,284,1.749,305,1.608,306,2.159,314,3.359,484,3.923,485,3.923,486,3.521,487,3.923,488,3.923,503,3.359,504,3.923,505,3.521,542,3.738,560,3.521,561,3.086,670,4.182,1032,3.886,1210,6.213,1211,4.507,1212,7.057,1213,6.213,1214,6.225,1215,4.507,1216,5.676,1217,5.604,1218,6.213,1219,6.225,1220,5.604,1221,7.152,1222,4.507,1223,4.182,1224,4.943,1225,4.943,1226,4.943,1227,4.943,1228,4.943,1229,4.943,1230,4.943,1231,4.182,1232,4.182,1233,4.182,1234,4.943,1235,4.943]],["title/injectables/JwtAuthStrategy.html",[305,0.999,497,2.414]],["body/injectables/JwtAuthStrategy.html",[3,0.12,4,0.12,5,0.108,10,0.233,12,1.316,15,0.315,16,0.009,17,0.191,20,0.12,21,0.007,22,0.007,23,0.328,28,1.059,44,0.384,52,2.204,55,1.114,71,2.042,115,1.992,117,2.146,119,5.305,125,1.944,133,1.381,136,1.011,137,3.086,138,3.224,149,2.507,150,2.441,152,1.637,176,3.557,178,2.193,180,1.946,233,2.691,242,2.441,270,1.114,282,2.072,284,1.679,305,1.566,306,2.072,310,4.228,322,3.224,323,3.086,366,3.224,447,1.597,455,3.765,484,3.765,485,3.765,486,3.38,487,3.765,488,3.765,497,3.786,503,3.224,504,5.305,505,3.38,521,4.326,529,3.086,578,2.561,607,1.808,1197,4.326,1231,4.014,1232,4.014,1233,4.014,1236,6.096,1237,4.744,1238,6.096,1239,6.096,1240,6.096,1241,5.378,1242,6.065,1243,5.378,1244,4.744,1245,5.131,1246,4.014,1247,4.014,1248,4.744,1249,5.378,1250,4.744,1251,5.378,1252,4.744,1253,4.326,1254,4.326,1255,4.014,1256,4.326,1257,4.326,1258,4.744,1259,4.744]],["title/injectables/JwtRefreshGuard.html",[305,0.999,458,3.272]],["body/injectables/JwtRefreshGuard.html",[3,0.186,4,0.125,5,0.113,10,0.243,15,0.323,16,0.009,17,0.181,20,0.125,21,0.007,22,0.007,23,0.342,28,1.087,35,2.573,40,1.938,44,0.394,52,2.307,55,1.144,71,2.096,115,2.045,124,4.668,125,1.996,132,4.182,133,1.812,136,1.054,162,2.22,176,3.706,180,1.812,242,2.505,284,1.749,305,1.608,306,2.159,314,3.359,458,5.267,484,3.923,485,3.923,486,3.521,487,3.923,488,3.923,503,3.359,505,3.521,542,3.738,560,3.521,561,3.086,670,4.182,1210,6.213,1213,6.213,1214,6.225,1215,4.507,1216,5.676,1218,6.213,1219,6.225,1221,7.152,1222,4.507,1223,4.182,1224,4.943,1225,4.943,1226,4.943,1227,4.943,1228,4.943,1229,4.943,1230,4.943,1231,4.182,1232,4.182,1233,4.182,1234,4.943,1235,4.943,1260,4.943,1261,7.057,1262,5.604,1263,5.604,1264,4.182]],["title/injectables/JwtRefreshStrategy.html",[305,0.999,498,3.069]],["body/injectables/JwtRefreshStrategy.html",[3,0.125,4,0.125,5,0.113,10,0.243,12,1.371,15,0.323,16,0.009,17,0.19,20,0.125,21,0.007,22,0.007,23,0.342,28,1.087,44,0.394,52,1.547,55,1.144,71,2.096,115,2.045,117,1.749,119,5.361,125,1.996,133,1.439,136,1.054,137,3.215,138,3.359,150,1.99,176,3.706,178,2.285,180,1.812,233,2.742,242,2.505,270,1.16,284,1.749,305,1.608,306,2.159,423,4.182,447,1.664,455,3.923,484,3.923,485,3.923,486,3.521,487,3.923,488,3.923,498,4.94,503,3.359,505,3.521,516,4.943,521,4.507,578,2.668,607,1.856,630,3.706,1197,4.507,1231,4.182,1232,4.182,1233,4.182,1236,6.213,1238,6.213,1239,6.213,1240,6.213,1242,6.225,1244,4.943,1245,5.267,1246,4.182,1247,4.182,1248,4.943,1250,4.943,1252,4.943,1253,4.507,1254,4.507,1255,4.182,1256,4.507,1257,4.507,1259,4.943,1264,5.765,1265,4.943,1266,5.604,1267,5.604,1268,5.604]],["title/injectables/LocalAuthGuard.html",[305,0.999,461,3.272]],["body/injectables/LocalAuthGuard.html",[3,0.152,4,0.152,5,0.137,16,0.009,17,0.187,20,0.152,21,0.008,22,0.008,23,0.415,71,2.357,136,1.278,305,1.808,306,2.619,461,5.922,503,4.076,505,4.272,1211,5.468,1222,5.468,1269,5.997,1270,7.935,1271,5.074]],["title/injectables/LocalStrategy.html",[305,0.999,499,3.069]],["body/injectables/LocalStrategy.html",[3,0.117,4,0.117,5,0.105,10,0.226,14,1.163,15,0.309,16,0.009,17,0.195,20,0.117,21,0.007,22,0.007,23,0.319,28,1.04,44,0.377,52,2.063,53,2.274,55,1.094,71,2.004,115,1.956,117,2.107,120,2.726,121,2.529,125,1.908,133,1.341,136,0.982,138,5.178,140,4.203,147,3.657,148,4.203,149,2.461,150,1.855,152,2.055,153,1.807,176,3.456,178,2.13,180,1.733,233,2.654,242,2.396,258,2.013,260,2.013,270,1.082,282,2.013,305,1.538,306,2.013,325,2.07,327,2.194,447,1.552,455,3.657,464,5.264,465,4.203,499,4.724,503,3.132,505,3.283,529,2.998,536,2.904,561,2.877,562,4.609,607,1.775,937,5.14,1238,4.203,1239,5.428,1240,6.355,1245,5.037,1247,3.899,1253,4.203,1254,4.203,1255,3.899,1256,4.203,1257,4.203,1271,5.579,1272,4.609,1273,6.749,1274,5.225,1275,5.225,1276,5.225,1277,5.225,1278,4.203,1279,6.749,1280,5.225,1281,5.225,1282,5.225,1283,5.225,1284,5.225,1285,3.899,1286,5.225,1287,5.225]],["title/injectables/LoggingInterceptor.html",[305,0.999,1288,3.272]],["body/injectables/LoggingInterceptor.html",[3,0.125,4,0.125,5,0.112,10,0.242,15,0.323,16,0.009,17,0.186,20,0.125,21,0.007,22,0.007,23,0.342,28,1.086,44,0.394,55,1.143,113,4.176,115,2.043,117,1.746,121,2.73,124,3.7,125,1.994,133,1.436,136,1.052,138,4.627,139,2.096,146,4.935,147,3.916,148,4.5,152,2.666,153,1.935,169,4.663,180,1.436,305,1.606,306,2.155,423,4.176,486,4.85,1216,5.672,1218,6.209,1223,4.176,1255,5.261,1285,4.176,1288,5.261,1289,4.935,1290,7.05,1291,5.595,1292,5.595,1293,7.05,1294,8.104,1295,5.595,1296,7.05,1297,7.05,1298,5.595,1299,5.595,1300,4.935,1301,5.595,1302,7.05,1303,7.05,1304,5.595,1305,5.595,1306,5.595,1307,7.05,1308,7.05,1309,5.595,1310,5.595]],["title/classes/LoginInput.html",[23,0.268,434,3.272]],["body/classes/LoginInput.html",[3,0.142,4,0.142,5,0.128,10,0.276,11,1.032,14,1.177,15,0.35,16,0.009,17,0.17,20,0.142,21,0.008,22,0.008,23,0.466,25,0.933,27,3.658,36,1.032,44,0.427,59,1.538,61,0.838,64,2.508,65,1.941,429,6.104,434,5.701,536,2.904,623,4.903,814,3.519,937,5.139,955,5.725,957,4.758,1311,6.375,1312,6.375,1313,6.375,1314,6.375,1315,5.623]],["title/controllers/NewsController.html",[228,1.689,1316,3.272]],["body/controllers/NewsController.html",[3,0.076,4,0.076,5,0.069,10,0.148,12,2.029,14,1.103,15,0.407,16,0.009,17,0.177,20,0.076,21,0.005,22,0.005,23,0.209,28,1.081,36,0.948,44,0.392,46,4.835,55,1.137,61,0.449,115,1.458,117,1.067,120,1.246,121,1.61,125,1.984,133,1.802,135,1.882,136,0.642,149,1.834,150,1.786,152,2.136,153,2.795,166,2.814,170,2.461,180,1.802,216,2.19,228,1.316,230,1.316,232,1.961,233,3.022,242,2.869,243,3.578,244,1.961,246,3.161,247,1.961,248,1.961,249,4.212,250,4.702,251,1.961,252,3.776,253,1.574,254,1.574,255,1.961,256,2.127,257,1.961,258,1.316,259,3.746,260,1.937,261,1.744,262,1.882,263,1.246,264,1.316,277,4.027,278,1.984,279,3.394,280,4.027,282,2.703,325,2.78,327,2.947,436,4.41,437,4.207,463,2.048,471,4.207,474,4.207,561,2.77,578,3.708,608,1.695,828,3.947,853,3.947,859,3.947,862,2.048,1011,2.392,1014,2.55,1015,4.178,1016,5.478,1019,3.746,1020,2.26,1023,2.55,1026,2.55,1027,2.478,1029,2.147,1030,2.26,1031,4.137,1032,1.882,1033,2.147,1043,3.751,1047,2.55,1048,4.178,1051,2.55,1054,2.55,1316,3.754,1317,3.014,1318,5.265,1319,5.265,1320,5.265,1321,5.265,1322,5.265,1323,3.014,1324,3.417,1325,3.014,1326,5.904,1327,3.417,1328,3.014,1329,3.417,1330,3.014,1331,3.417,1332,3.014,1333,3.417,1334,3.948,1335,3.014,1336,3.014,1337,3.417,1338,3.417,1339,3.417,1340,3.417,1341,3.014,1342,3.417,1343,6.584,1344,3.014,1345,3.417,1346,3.014,1347,3.417,1348,3.014,1349,3.417,1350,3.014,1351,3.417]],["title/modules/NewsModule.html",[284,1.369,404,3.069]],["body/modules/NewsModule.html",[3,0.137,4,0.137,5,0.123,16,0.009,17,0.191,20,0.137,21,0.008,22,0.008,23,0.375,136,1.154,230,2.876,284,2.512,286,2.828,287,2.828,288,3.024,289,3.024,290,2.828,291,3.964,292,3.024,297,4.154,298,3.678,299,3.024,300,3.024,302,3.811,303,3.38,404,6.32,497,4.804,508,4.06,1062,4.297,1316,6.005,1334,5.771,1335,5.414,1352,5.414,1353,5.414,1354,6.138,1355,6.138,1356,6.138]],["title/classes/NewsResponseDto.html",[23,0.268,862,2.628]],["body/classes/NewsResponseDto.html",[3,0.069,4,0.176,5,0.063,7,2.865,10,0.135,11,0.634,12,1.898,14,1.253,15,0.393,16,0.009,17,0.151,20,0.14,21,0.005,22,0.005,23,0.433,25,0.456,28,1.093,36,1.122,37,3.629,40,3.053,41,1.945,42,2.078,44,0.464,46,4.797,56,2.641,59,1.664,60,2.482,61,0.41,63,3.017,64,2.861,65,0.948,66,1.712,67,1.234,68,1.234,71,0.925,79,1.86,87,2.615,88,0.762,162,2.492,170,0.948,223,4.269,238,2.486,270,0.645,593,1.35,594,0.859,749,3.012,750,3.012,752,3.098,763,2.238,764,3.64,767,3.382,768,3.382,771,2.564,778,2.883,784,2.807,799,4.158,801,3.77,807,2.758,808,2.807,813,2.031,822,2.521,828,1.867,829,2.18,830,5.036,831,5.036,833,5.655,840,5.494,841,2.324,842,2.324,850,2.18,851,3.503,852,3.503,853,1.867,854,4.216,855,4.216,856,4.216,857,2.324,858,4.216,859,1.867,860,3.503,861,4.402,862,2.814,863,2.324,864,3.503,865,2.69,866,3.503,867,3.241,868,3.503,869,3.55,966,2.505,968,2.505,978,2.324,1357,3.114,1358,3.114,1359,3.114,1360,3.114,1361,4.694,1362,3.114,1363,3.114,1364,3.114,1365,3.114,1366,3.114,1367,3.114,1368,3.114,1369,3.114,1370,3.114,1371,3.114,1372,3.114,1373,3.114,1374,3.114,1375,3.114,1376,3.114,1377,3.114,1378,3.114,1379,3.114,1380,3.114]],["title/classes/NewsSearchInput.html",[23,0.268,853,2.628]],["body/classes/NewsSearchInput.html",[3,0.078,4,0.17,5,0.07,7,2.894,10,0.151,11,0.691,12,1.733,14,1.252,15,0.377,16,0.009,17,0.158,20,0.148,21,0.005,22,0.005,23,0.452,25,0.511,28,1.14,36,0.899,40,3.02,41,2.052,42,2.06,44,0.372,46,4.735,53,1.722,56,2.538,59,1.684,60,2.559,61,0.459,63,3.07,64,2.901,65,1.063,66,2.582,67,1.384,68,1.384,71,1.518,79,2.025,87,2.667,88,0.855,106,1.281,162,2.395,178,2.084,223,4.073,238,2.707,270,0.723,559,2.609,593,1.221,594,0.964,749,2.698,750,2.698,752,2.518,763,2.805,764,3.683,767,3.301,768,3.301,769,2.004,771,2.465,778,2.609,784,2.698,799,4.056,801,3.624,807,2.493,808,2.698,813,2.212,822,2.698,828,2.094,829,2.445,830,4.512,831,4.512,833,5.521,840,5.284,841,2.606,842,2.606,850,2.445,851,3.815,852,3.815,853,3.064,854,4.512,855,4.512,856,4.512,857,2.606,858,4.512,859,2.094,860,3.815,861,3.578,862,2.094,863,2.606,864,2.606,865,1.663,866,2.606,867,2.004,868,2.606,869,2.195,945,2.815,1064,2.609,1065,2.609,1066,4.508,1071,3.381,1072,3.381,1073,3.381,1074,3.381,1075,2.445,1076,3.212,1077,2.445,1381,3.492,1382,3.492,1383,3.492]],["title/injectables/NewsService.html",[305,0.999,1334,2.9]],["body/injectables/NewsService.html",[3,0.073,4,0.073,5,0.066,10,0.142,12,2.097,14,1.111,15,0.331,16,0.01,17,0.176,20,0.073,21,0.005,22,0.005,23,0.298,28,1.115,30,3.419,44,0.404,46,4.577,53,2.65,55,1.173,88,0.804,101,3.929,115,1.416,117,1.525,120,1.781,121,2.067,123,2.803,125,2.046,133,1.772,136,0.618,149,1.781,150,1.734,152,2.504,153,2.662,162,2.735,166,2.796,180,1.924,223,2.69,233,3.042,242,2.842,258,1.265,260,1.265,263,1.198,264,1.265,278,1.381,282,3.03,305,1.113,306,1.265,309,1.969,310,3.691,317,1.969,322,1.969,323,1.885,325,2.735,327,2.899,330,2.897,338,4.138,542,3.089,560,2.064,578,3.666,605,1.379,608,1.107,642,1.809,752,1.618,763,2.735,764,2.687,807,2.587,828,3.872,853,3.872,859,3.872,861,2.299,862,1.969,865,1.564,1019,3.297,1064,2.493,1065,2.493,1085,2.451,1086,2.299,1087,3.07,1088,2.299,1089,2.299,1090,1.885,1091,1.969,1092,2.064,1093,2.299,1095,3.419,1096,2.172,1097,4.691,1098,2.172,1099,2.172,1100,3.858,1101,3.231,1102,2.299,1103,2.299,1104,3.419,1105,2.299,1106,2.299,1108,3.646,1109,2.451,1110,2.451,1111,2.299,1112,2.299,1116,4.083,1117,4.82,1119,3.646,1120,3.646,1128,2.299,1129,2.451,1130,2.299,1131,2.451,1132,2.451,1133,2.451,1318,5.144,1319,4.309,1320,5.144,1321,4.309,1322,5.144,1323,2.897,1325,4.309,1328,2.897,1330,4.309,1332,2.897,1334,3.231,1336,2.897,1341,2.897,1344,2.897,1346,2.897,1348,2.897,1350,2.897,1384,2.897,1385,3.285,1386,3.285,1387,3.285,1388,3.285,1389,3.285,1390,3.285,1391,3.285,1392,3.285,1393,5.832,1394,5.832,1395,5.832,1396,3.285,1397,3.285,1398,3.285,1399,4.885,1400,3.285,1401,4.885,1402,4.885,1403,3.285]],["title/classes/OpportunityApiResponse.html",[23,0.268,618,1.689]],["body/classes/OpportunityApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.724,61,0.568,106,1.083,139,1.619,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.75,594,1.193,595,2.404,596,1.815,597,2.404,598,1.815,599,2.521,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,1.665,613,1.665,614,1.665,615,1.665,616,1.665,617,1.665,618,2.29,619,1.665,620,1.665,621,1.762,622,1.665,1404,4.322,1405,4.322]],["title/classes/OpportunityArrayApiResponse.html",[23,0.268,619,1.689]],["body/classes/OpportunityArrayApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.631,34,1.76,36,0.803,39,1.532,41,1.525,42,1.562,44,0.332,48,1.574,50,1.532,52,1.191,59,1.722,61,0.568,106,1.082,139,1.617,170,1.314,174,1.617,216,2.752,256,1.969,266,2.354,267,1.532,270,1.515,278,2.494,318,2.466,319,1.71,355,3.175,428,1.76,447,1.282,456,2.109,457,2.002,587,1.663,588,3.13,589,1.989,591,3.935,593,1.749,594,1.191,595,2.403,596,1.812,597,2.403,598,1.812,599,2.52,600,1.812,601,2.054,602,1.812,603,1.989,604,1.989,605,1.812,606,3.869,607,1.562,608,1.454,609,2.055,610,1.663,611,1.663,612,1.663,613,1.663,614,1.663,615,1.663,616,1.663,617,1.663,618,1.663,619,2.288,620,1.663,621,1.76,622,1.663,678,2.477,1406,4.316,1407,4.316]],["title/controllers/OpportunityController.html",[228,1.689,1408,3.272]],["body/controllers/OpportunityController.html",[3,0.077,4,0.077,5,0.069,10,0.149,12,2.032,14,1.105,15,0.407,16,0.009,17,0.178,20,0.077,21,0.005,22,0.005,23,0.21,28,1.084,36,0.951,44,0.393,48,2.844,55,1.14,61,0.452,115,1.464,117,1.073,120,1.253,121,1.617,125,1.989,133,1.806,135,1.893,136,0.646,149,1.842,150,1.794,152,2.142,153,2.799,166,2.817,170,2.464,180,1.806,216,2.196,228,1.324,230,1.324,232,1.972,233,3.025,242,2.873,243,3.591,244,1.972,246,3.174,247,1.972,248,1.972,249,4.22,250,4.708,251,1.972,252,3.781,253,1.584,254,1.584,255,1.972,256,2.131,257,1.972,258,1.324,259,3.754,260,1.946,261,1.754,262,1.893,263,1.253,264,1.324,277,4.036,278,1.989,279,3.398,280,4.036,282,2.71,325,2.787,327,2.954,425,3.032,436,4.42,437,4.217,463,2.06,471,4.217,474,4.217,561,2.782,578,3.714,599,1.129,608,1.702,725,3.341,870,3.958,897,3.958,899,3.958,1011,2.406,1014,2.565,1015,4.193,1016,5.49,1019,3.754,1020,2.273,1023,2.565,1026,2.565,1027,2.489,1029,2.16,1030,2.273,1031,4.149,1032,1.893,1033,2.16,1043,3.764,1047,2.565,1048,4.193,1051,2.565,1054,2.565,1326,6.274,1408,3.77,1409,3.032,1410,5.99,1411,5.99,1412,5.283,1413,5.283,1414,5.283,1415,5.283,1416,3.437,1417,3.437,1418,3.032,1419,3.437,1420,3.032,1421,3.437,1422,3.032,1423,3.437,1424,3.032,1425,3.437,1426,3.341,1427,3.032,1428,3.032,1429,3.437,1430,3.437,1431,3.437,1432,3.437,1433,3.032,1434,3.437,1435,6.603,1436,3.437,1437,3.437,1438,3.032,1439,3.437,1440,3.032,1441,3.437,1442,3.032,1443,3.437]],["title/modules/OpportunityModule.html",[284,1.369,405,3.069]],["body/modules/OpportunityModule.html",[3,0.137,4,0.137,5,0.123,16,0.009,17,0.191,20,0.137,21,0.008,22,0.008,23,0.375,136,1.154,230,2.876,284,2.512,286,2.828,287,2.828,288,3.024,289,3.024,290,2.828,291,3.964,292,3.024,297,4.154,298,3.678,299,3.024,300,3.024,302,3.811,303,3.38,405,6.32,497,4.804,508,4.06,1062,4.297,1408,6.005,1426,5.771,1427,5.414,1444,5.414,1445,5.414,1446,6.138,1447,6.138,1448,6.138]],["title/classes/OpportunityResponseDto.html",[23,0.268,599,1.44]],["body/classes/OpportunityResponseDto.html",[3,0.056,4,0.056,5,0.05,7,2.919,10,0.108,11,0.534,12,1.776,14,1.268,15,0.405,16,0.009,17,0.152,20,0.125,21,0.004,22,0.004,23,0.396,25,0.365,28,1.248,36,1.121,37,3.443,40,2.848,41,2.215,42,2.319,44,0.464,48,3.004,55,0.906,56,2.062,59,1.65,60,2.741,61,0.328,63,3.124,64,2.936,65,0.76,66,1.442,67,0.988,68,0.988,71,0.741,72,2.192,79,2.691,80,2.339,87,2.607,88,0.611,89,2.192,91,1.862,170,0.76,270,0.517,279,3.046,536,1.984,593,1.174,594,0.689,599,1.298,607,1.47,748,3.343,749,2.719,750,2.719,751,3.652,752,3.001,753,4.349,754,3.57,755,1.883,756,4.625,757,3.652,758,4.223,761,3.343,763,1.946,764,2.987,767,3.144,768,3.144,771,2.279,772,2.853,775,3.35,778,2.853,783,2.853,784,2.494,789,1.113,799,2.753,807,2.545,808,2.494,813,1.711,814,2.575,815,1.273,816,1.273,817,2.192,818,1.273,820,2.018,821,2.507,822,2.192,870,1.496,871,1.746,872,4.547,873,2.951,892,1.862,893,1.862,897,1.496,898,1.862,899,1.496,900,1.862,901,3.666,966,2.007,968,2.007,970,2.201,972,2.201,974,3.488,976,2.201,978,2.951,980,4.333,986,2.201,989,2.201,991,2.201,994,2.201,999,2.201,1449,2.495,1450,2.495,1451,2.495,1452,2.495,1453,2.495,1454,2.495,1455,2.495,1456,2.495,1457,2.495,1458,2.495,1459,2.495,1460,2.495,1461,2.495,1462,2.495,1463,2.495,1464,2.495,1465,2.495,1466,2.495,1467,2.495,1468,2.495]],["title/classes/OpportunitySearchInput.html",[23,0.268,897,2.628]],["body/classes/OpportunitySearchInput.html",[3,0.065,4,0.065,5,0.059,7,2.939,10,0.126,11,0.603,12,1.604,14,1.268,15,0.394,16,0.009,17,0.161,20,0.136,21,0.005,22,0.005,23,0.422,25,0.426,28,0.688,36,0.822,40,2.805,41,2.25,42,2.305,44,0.34,48,2.958,53,1.504,55,0.879,56,1.875,59,1.676,60,2.796,61,0.383,63,3.171,64,2.972,65,0.888,66,2.39,67,1.155,68,1.155,71,1.326,72,2.422,79,1.769,80,2.583,87,2.671,88,0.714,89,1.993,106,1.119,178,1.82,270,0.604,279,2.903,536,1.926,559,2.279,593,1.067,594,0.805,599,0.957,607,1.427,748,3.186,749,2.422,750,2.422,751,3.253,752,2.673,753,4.145,754,3.348,755,1.388,756,4.562,757,3.253,758,4.145,761,3.186,763,2.597,764,3.186,767,3.086,768,3.086,771,2.212,772,2.769,775,3.253,778,2.769,783,2.769,784,2.422,789,1.301,799,2.673,807,2.278,808,2.422,813,1.932,814,2.801,815,1.488,816,1.488,817,1.993,818,1.488,820,2.279,821,2.769,822,2.422,870,1.748,871,2.041,872,4.049,873,3.332,892,2.176,893,2.176,897,2.676,898,2.176,899,1.748,900,2.176,901,2.176,945,2.459,1064,2.279,1065,2.279,1069,2.345,1071,2.953,1072,2.953,1073,2.953,1074,2.953,1075,2.041,1076,2.805,1077,2.041,1469,2.572,1470,2.915,1471,2.915]],["title/injectables/OpportunityService.html",[305,0.999,1426,2.9]],["body/injectables/OpportunityService.html",[3,0.069,4,0.069,5,0.062,10,0.133,12,2.076,14,1.093,15,0.323,16,0.01,17,0.172,20,0.069,21,0.005,22,0.005,23,0.284,28,1.087,31,3.255,44,0.394,53,2.764,55,1.144,88,0.753,115,1.347,117,1.451,120,1.696,121,2.001,123,2.668,125,1.996,133,1.723,136,0.578,149,1.696,150,1.651,152,2.469,153,2.723,162,2.476,166,2.766,180,1.882,223,2.561,233,3.011,242,2.796,258,1.185,260,1.185,263,1.121,264,1.185,278,1.898,282,2.976,305,1.059,306,1.185,309,1.844,310,3.611,317,1.844,322,1.844,323,1.765,325,2.659,327,2.818,332,2.713,338,4.023,542,2.97,560,1.932,578,3.594,599,1.01,605,1.291,608,1.889,642,3.696,725,3.708,748,3.736,761,3.478,763,2.659,764,2.583,807,2.515,865,1.464,870,3.746,897,3.746,899,3.746,1019,3.19,1027,2.291,1064,2.373,1065,2.373,1085,2.295,1086,2.153,1087,2.922,1088,2.153,1089,2.153,1090,1.765,1091,1.844,1092,1.932,1093,2.153,1095,3.255,1096,2.034,1097,4.51,1098,2.034,1099,2.034,1100,3.708,1101,3.075,1102,2.153,1103,2.153,1104,3.255,1105,2.153,1106,2.153,1108,3.47,1109,2.295,1110,2.295,1111,2.153,1112,2.153,1116,3.925,1117,4.664,1119,3.47,1120,3.47,1121,4.51,1127,4.51,1128,2.153,1129,2.295,1130,2.153,1131,2.295,1132,2.295,1133,2.295,1326,6.335,1412,4.945,1413,4.945,1414,4.945,1415,4.945,1418,2.713,1420,2.713,1422,2.713,1424,2.713,1426,3.075,1428,2.713,1433,2.713,1438,2.713,1440,2.713,1442,2.713,1472,2.713,1473,5.607,1474,3.075,1475,3.075,1476,3.075,1477,3.075,1478,3.075,1479,3.075,1480,3.075,1481,3.075,1482,3.075,1483,5.607,1484,5.607,1485,5.607,1486,3.075,1487,3.075,1488,4.65,1489,3.075,1490,4.65,1491,4.65,1492,3.075]],["title/classes/OrganizationApiResponse.html",[23,0.268,616,1.689]],["body/classes/OrganizationApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.724,61,0.568,106,1.083,139,1.619,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.75,594,1.193,595,2.404,596,1.815,597,2.521,598,1.815,599,2.404,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,1.665,613,1.665,614,1.665,615,1.665,616,2.29,617,1.665,618,1.665,619,1.665,620,1.665,621,1.762,622,1.665,1493,4.322,1494,4.322]],["title/classes/OrganizationArrayApiResponse.html",[23,0.268,617,1.689]],["body/classes/OrganizationArrayApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.631,34,1.76,36,0.803,39,1.532,41,1.525,42,1.562,44,0.332,48,1.574,50,1.532,52,1.191,59,1.722,61,0.568,106,1.082,139,1.617,170,1.314,174,1.617,216,2.752,256,1.969,266,2.354,267,1.532,270,1.515,278,2.494,318,2.466,319,1.71,355,3.175,428,1.76,447,1.282,456,2.109,457,2.002,587,1.663,588,3.13,589,1.989,591,3.935,593,1.749,594,1.191,595,2.403,596,1.812,597,2.52,598,1.812,599,2.403,600,1.812,601,2.054,602,1.812,603,1.989,604,1.989,605,1.812,606,3.869,607,1.562,608,1.454,609,2.055,610,1.663,611,1.663,612,1.663,613,1.663,614,1.663,615,1.663,616,1.663,617,2.288,618,1.663,619,1.663,620,1.663,621,1.76,622,1.663,678,2.477,1495,4.316,1496,4.316]],["title/controllers/OrganizationController.html",[228,1.689,1497,3.272]],["body/controllers/OrganizationController.html",[3,0.076,4,0.076,5,0.068,10,0.147,12,2.026,14,1.101,15,0.407,16,0.009,17,0.18,20,0.076,21,0.005,22,0.005,23,0.207,28,1.078,36,0.945,44,0.391,50,2.758,55,1.134,61,0.446,66,1.236,67,1.343,68,1.343,115,1.449,117,1.058,120,1.236,121,1.601,125,1.978,133,1.796,135,1.867,136,0.637,149,1.824,150,1.775,152,2.13,153,2.917,166,2.81,170,2.456,180,1.796,216,2.183,228,1.306,230,1.306,232,1.945,233,3.018,242,2.864,243,3.562,244,1.945,246,3.142,247,1.945,248,1.945,249,4.2,250,4.694,251,1.945,252,3.769,253,1.562,254,1.562,255,1.945,256,2.121,257,1.945,258,1.306,259,3.736,260,1.926,261,1.73,262,1.867,263,1.236,264,1.306,277,4.014,278,1.978,279,3.387,280,4.014,282,2.694,325,2.771,327,2.937,436,4.395,437,4.193,463,2.032,471,4.193,474,4.193,561,2.754,578,3.699,597,1.113,608,1.685,902,3.932,926,3.932,931,3.932,1011,2.373,1014,2.53,1015,4.159,1016,5.463,1019,3.736,1020,2.242,1023,2.53,1026,2.53,1027,2.464,1029,2.13,1030,2.242,1031,4.122,1032,1.867,1033,2.13,1043,3.734,1047,2.53,1048,4.159,1051,2.53,1054,2.53,1497,3.732,1498,2.99,1499,7.377,1500,5.942,1501,5.241,1502,5.241,1503,5.942,1504,5.241,1505,3.39,1506,3.39,1507,2.99,1508,3.39,1509,2.99,1510,3.39,1511,3.39,1512,3.39,1513,2.99,1514,3.39,1515,3.93,1516,2.99,1517,2.99,1518,3.39,1519,3.39,1520,3.39,1521,3.39,1522,6.559,1523,3.39,1524,6.559,1525,3.39,1526,3.39,1527,3.39,1528,3.39,1529,3.39]],["title/modules/OrganizationModule.html",[284,1.369,406,3.069]],["body/modules/OrganizationModule.html",[3,0.134,4,0.134,5,0.121,16,0.009,17,0.19,20,0.134,21,0.007,22,0.007,23,0.368,136,1.132,230,2.842,284,2.491,286,2.774,287,2.774,288,2.966,289,2.966,290,2.774,291,3.931,292,3.931,297,4.135,298,3.635,299,2.966,300,2.966,302,3.766,303,3.316,406,6.334,497,4.782,508,3.983,1062,4.215,1497,5.955,1515,6.01,1516,5.311,1530,5.311,1531,6.021,1532,5.311,1533,5.311,1534,6.021,1535,6.021]],["title/classes/OrganizationResponseDto.html",[23,0.268,597,1.44]],["body/classes/OrganizationResponseDto.html",[3,0.06,4,0.06,5,0.054,7,2.901,10,0.117,11,0.57,12,1.954,14,1.252,15,0.389,16,0.009,17,0.156,20,0.131,21,0.004,22,0.004,23,0.41,25,0.397,28,1.244,36,1.091,37,3.461,40,3.079,41,2.238,42,2.323,44,0.451,50,2.867,53,1.422,55,1.234,56,2.456,59,1.644,60,2.636,61,0.356,63,3.073,64,2.763,65,0.825,66,1.539,67,1.074,68,1.074,71,0.805,72,2.313,75,3.869,79,2.053,80,3.452,82,2.023,87,2.521,88,0.663,89,2.313,91,2.023,106,1.466,170,0.825,270,0.561,536,2.644,593,1.239,594,0.748,597,1.386,607,1.538,628,3.8,629,3.8,664,2.324,748,3.431,749,2.829,750,2.829,755,3.197,761,3.431,763,2.053,767,3.235,768,3.675,771,2.956,772,3.7,783,2.986,784,2.611,789,2.829,790,2.53,807,2.626,808,2.611,813,2.531,814,2.388,815,2.645,816,1.384,817,2.313,818,1.384,820,2.986,821,2.645,822,2.313,902,1.625,903,1.897,904,4.731,905,4.731,913,5.41,919,5.41,920,4.366,926,1.625,927,3.868,928,3.868,929,3.428,930,3.868,931,1.625,932,1.793,933,3.628,978,4.731,1158,2.391,1536,2.711,1537,2.711,1538,2.711,1539,2.711,1540,2.711,1541,2.711,1542,2.711,1543,2.711,1544,2.711,1545,2.711,1546,2.711,1547,2.711,1548,2.711,1549,2.711,1550,2.711,1551,2.711,1552,2.711,1553,2.711,1554,2.711,1555,2.711]],["title/classes/OrganizationSearchInput.html",[23,0.268,926,2.628]],["body/classes/OrganizationSearchInput.html",[3,0.069,4,0.069,5,0.062,7,2.917,10,0.134,11,0.63,12,1.849,14,1.252,15,0.371,16,0.009,17,0.164,20,0.14,21,0.005,22,0.005,23,0.432,25,0.451,28,0.718,36,0.846,40,3.058,41,2.25,42,2.305,44,0.35,50,2.798,53,2.108,55,1.253,56,2.358,59,1.667,60,2.698,61,0.406,63,3.122,64,2.818,65,0.939,66,2.45,67,1.222,68,1.222,71,1.384,72,2.506,75,3.714,79,1.846,80,3.597,87,2.588,88,0.755,89,2.079,106,1.684,178,1.9,270,0.638,536,2.509,559,2.378,593,1.113,594,0.851,597,1.012,607,1.477,628,3.366,629,3.366,664,2.566,748,3.256,749,2.506,750,2.506,755,3.199,761,3.256,763,2.662,767,3.154,768,3.622,771,2.881,772,3.607,783,2.866,784,2.506,789,2.999,790,2.793,807,2.345,808,2.506,813,2.708,814,2.587,815,2.866,816,1.574,817,2.079,818,1.574,820,2.866,821,2.866,822,2.506,902,1.848,903,2.158,904,4.191,905,4.191,913,5.274,919,5.274,920,4.191,926,2.793,927,4.191,928,4.191,929,3.714,930,4.191,931,1.848,932,2.039,933,2.158,945,2.566,1064,2.378,1065,2.378,1069,2.48,1071,3.082,1072,3.082,1073,3.082,1074,3.082,1075,2.158,1076,2.928,1077,2.158,1469,2.72,1556,3.083,1557,3.083]],["title/injectables/OrganizationService.html",[305,0.999,1515,2.9]],["body/injectables/OrganizationService.html",[3,0.067,4,0.067,5,0.061,10,0.13,12,2.068,14,1.087,15,0.321,16,0.01,17,0.171,20,0.067,21,0.005,22,0.005,23,0.279,28,1.079,32,3.203,44,0.391,50,2.781,53,2.78,55,1.245,88,0.737,115,1.326,117,1.428,120,1.669,121,1.979,123,2.626,125,1.98,133,1.707,136,0.566,149,1.669,150,1.625,152,2.457,153,2.708,162,2.45,166,2.756,180,1.868,223,2.52,233,3.001,242,2.781,258,1.16,260,1.16,263,1.098,264,1.16,278,1.88,282,2.959,305,1.043,306,1.16,309,1.805,310,3.585,317,1.805,322,1.805,323,1.728,325,2.635,327,2.792,338,3.986,542,2.932,560,1.892,578,3.571,597,0.989,605,1.264,608,1.015,642,4.008,748,3.719,755,3.334,761,3.455,763,2.635,807,2.492,865,1.434,902,3.706,926,3.706,931,3.706,933,3.875,1019,3.156,1027,2.254,1064,2.336,1065,2.336,1085,2.247,1086,2.108,1087,2.876,1088,2.108,1089,2.108,1090,1.728,1091,1.805,1092,1.892,1093,2.108,1095,3.203,1096,1.992,1098,1.992,1099,1.992,1100,3.661,1101,3.027,1102,2.108,1103,2.108,1104,3.203,1105,2.108,1106,2.108,1108,3.415,1109,2.247,1110,2.247,1111,2.108,1112,2.108,1116,3.875,1117,4.614,1119,3.415,1120,3.415,1121,4.452,1127,4.452,1128,2.108,1129,2.247,1130,2.108,1131,3.415,1132,2.247,1133,2.247,1499,4.882,1501,4.882,1502,4.882,1504,4.882,1507,2.656,1509,2.656,1513,2.656,1515,3.027,1517,2.656,1558,2.656,1559,5.535,1560,5.535,1561,3.011,1562,3.011,1563,3.011,1564,3.011,1565,3.011,1566,3.011,1567,3.011,1568,3.011,1569,3.011,1570,3.011,1571,5.535,1572,3.011,1573,4.576,1574,3.011,1575,5.535,1576,3.011,1577,5.535,1578,5.535,1579,4.576,1580,3.011,1581,4.576,1582,3.011,1583,3.011,1584,3.011,1585,4.576,1586,3.011,1587,3.011]],["title/classes/PaginationParamsDto.html",[23,0.268,66,1.599]],["body/classes/PaginationParamsDto.html",[3,0.127,4,0.127,5,0.114,7,2.282,10,0.247,11,0.963,15,0.392,16,0.009,17,0.174,20,0.127,21,0.007,22,0.007,23,0.475,25,0.833,28,1.256,36,0.963,44,0.398,53,2.748,60,2.491,61,0.749,63,2.763,65,1.734,66,2.6,79,2.825,88,1.394,106,2.044,178,3.325,559,3.639,945,4.491,1064,3.972,1065,3.972,1071,5.394,1072,4.715,1073,5.394,1076,5.125,1588,6.864,1589,5.024,1590,5.696,1591,5.696,1592,6.864,1593,7.782,1594,5.696,1595,7.129,1596,7.129,1597,5.321]],["title/injectables/PrismaService.html",[305,0.999,310,2.16]],["body/injectables/PrismaService.html",[3,0.147,4,0.147,5,0.132,10,0.284,16,0.009,17,0.173,20,0.147,21,0.008,22,0.008,23,0.401,44,0.367,71,2.309,113,4.901,115,2.253,133,1.686,136,1.235,233,2.941,282,2.53,305,1.771,306,2.53,310,3.83,1091,3.937,1598,6.858,1599,5.793,1600,7.306,1601,8.862,1602,6.567,1603,6.567]],["title/classes/RefreshTokenInput.html",[23,0.268,442,3.272]],["body/classes/RefreshTokenInput.html",[3,0.148,4,0.148,5,0.133,10,0.287,11,1.055,14,1.084,15,0.303,16,0.009,17,0.174,20,0.148,21,0.008,22,0.008,23,0.477,25,0.968,27,3.797,36,0.894,44,0.37,59,1.468,61,0.87,65,2.015,430,5.496,442,5.829,445,5.829,447,2.32,623,4.682,955,5.467,1604,6.617,1605,6.617]],["title/classes/RegisterApiResponse.html",[23,0.268,620,1.689]],["body/classes/RegisterApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.724,61,0.568,106,1.083,139,1.619,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.414,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.75,594,1.193,595,2.404,596,1.815,597,2.404,598,1.815,599,2.404,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,1.665,613,1.665,614,1.665,615,1.665,616,1.665,617,1.665,618,1.665,619,1.665,620,2.29,621,1.762,622,1.665,1606,4.322,1607,4.322]],["title/classes/RegisterInput.html",[23,0.268,265,2.9]],["body/classes/RegisterInput.html",[3,0.124,4,0.124,5,0.112,10,0.242,11,0.951,13,4.62,14,1.215,15,0.39,16,0.009,17,0.172,18,4.082,20,0.124,21,0.007,22,0.007,23,0.43,25,0.816,27,3.2,35,2.566,36,1.094,44,0.476,52,1.539,55,1.249,59,1.569,60,1.785,61,0.733,64,2.658,65,1.698,123,3.2,178,2.274,238,2.954,265,4.653,267,3.072,536,2.736,539,4.162,559,2.847,567,5.251,623,5.187,814,3.242,936,6.2,937,4.843,938,5.752,939,4.919,945,3.071,949,4.919,955,5.666,956,4.486,957,4.162,958,4.486,960,5.659,1315,4.919,1608,5.577,1609,5.577,1610,5.577,1611,5.577,1612,4.919,1613,5.577,1614,5.577,1615,5.577,1616,5.577,1617,5.577]],["title/classes/RegisterOutput.html",[23,0.268,456,1.557]],["body/classes/RegisterOutput.html",[3,0.12,4,0.12,5,0.108,10,0.234,11,0.931,12,1.858,13,4.55,14,1.228,15,0.398,16,0.009,17,0.169,18,4.02,20,0.12,21,0.007,22,0.007,23,0.421,25,0.789,35,2.512,36,1.175,40,1.866,44,0.486,55,1.23,59,1.651,61,0.71,87,2.741,88,1.32,99,3.234,104,6.409,106,1.727,170,1.643,267,3.117,456,2.446,536,2.695,539,4.026,567,4.026,623,5.264,865,3.614,867,4.355,936,6.105,938,5.664,1618,5.395,1619,4.759,1620,5.395,1621,5.395,1622,5.395,1623,5.395,1624,5.395,1625,4.759,1626,5.395]],["title/classes/RequestContext.html",[23,0.268,166,1.44]],["body/classes/RequestContext.html",[3,0.133,4,0.133,5,0.12,10,0.259,11,0.993,14,1.203,15,0.38,16,0.009,17,0.164,20,0.133,21,0.007,22,0.007,23,0.365,25,0.875,44,0.464,52,2.195,164,5.261,166,2.413,170,2.526,175,4.463,263,3.106,266,2.369,270,1.238,355,3.139,366,4.405,447,1.776,529,4.761,771,3.243,1627,6.356,1628,5.274,1629,7.955,1630,5.98,1631,5.98,1632,5.98,1633,5.98,1634,5.98,1635,5.98,1636,5.98,1637,5.98,1638,5.98]],["title/classes/ResponseMetadata.html",[23,0.268,591,1.957]],["body/classes/ResponseMetadata.html",[3,0.095,4,0.095,5,0.086,10,0.185,11,0.797,15,0.384,16,0.009,17,0.187,20,0.195,21,0.006,22,0.006,23,0.538,25,0.624,28,1.122,34,1.741,36,0.797,39,1.516,41,1.87,42,1.916,44,0.329,48,1.557,50,1.516,52,1.178,59,1.718,61,0.561,106,1.478,139,1.599,174,2.209,216,2.717,256,1.957,266,2.336,267,1.516,270,1.508,278,2.461,318,2.454,319,1.691,355,3.172,428,1.741,447,1.268,456,2.093,457,1.986,587,1.644,588,3.112,589,1.967,591,3.93,593,1.741,594,1.178,595,2.392,596,1.792,597,2.392,598,1.792,599,2.392,600,1.792,601,2.039,602,1.792,603,1.967,604,1.967,605,1.792,606,3.858,607,1.916,608,2.275,609,3.216,610,1.644,611,1.644,612,1.644,613,1.644,614,1.644,615,1.644,616,1.644,617,1.644,618,1.644,619,1.644,620,1.644,621,1.741,622,1.644,678,3.383,1639,4.269,1640,4.269]],["title/guards/RolesGuard.html",[1641,3.527,1642,3.272]],["body/guards/RolesGuard.html",[3,0.129,4,0.129,5,0.117,10,0.251,13,4.323,15,0.33,16,0.009,17,0.183,18,3.072,20,0.129,21,0.007,22,0.007,23,0.354,28,1.111,35,2.629,44,0.403,52,1.99,53,2.644,55,1.169,113,4.329,115,2.09,117,1.811,124,3.836,125,2.039,133,1.489,136,1.091,152,2.195,162,2.298,180,2.015,305,1.643,314,4.323,423,4.329,446,4.329,539,4.329,542,3.072,1213,6.603,1215,5.8,1216,5.746,1300,5.116,1642,5.382,1643,5.8,1644,5.116,1645,5.8,1646,8.606,1647,5.8,1648,5.8,1649,4.665,1650,4.665,1651,5.8,1652,7.847,1653,5.8,1654,5.8,1655,5.8,1656,5.8,1657,5.8,1658,5.8,1659,5.8]],["title/modules/SharedModule.html",[284,1.369,297,2.088]],["body/modules/SharedModule.html",[3,0.128,4,0.128,5,0.115,16,0.009,17,0.196,20,0.128,21,0.007,22,0.007,23,0.35,110,5.337,136,1.076,137,3.284,284,2.435,286,2.637,287,2.637,288,2.82,289,2.82,290,2.637,291,3.843,292,3.843,297,4.254,298,3.523,299,2.82,300,2.82,302,3.65,310,4.447,323,3.284,391,6.319,1090,3.284,1288,5.337,1649,4.604,1660,5.049,1661,5.049,1662,5.724,1663,5.049,1664,5.724,1665,7.151,1666,7.151,1667,7.151,1668,4.604,1669,5.724,1670,5.724,1671,5.724,1672,5.724,1673,5.724,1674,5.724,1675,5.724,1676,7.151,1677,7.151]],["title/classes/TagApiResponse.html",[23,0.268,612,1.689]],["body/classes/TagApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.724,61,0.568,106,1.083,139,1.619,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.467,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.835,594,1.193,595,2.404,596,1.815,597,2.404,598,1.815,599,2.404,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,1.665,611,1.665,612,2.29,613,1.665,614,1.665,615,1.665,616,1.665,617,1.665,618,1.665,619,1.665,620,1.665,621,1.762,622,1.665,1678,4.322,1679,4.322]],["title/classes/TagArrayApiResponse.html",[23,0.268,613,1.689]],["body/classes/TagArrayApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.631,34,1.76,36,0.803,39,1.532,41,1.525,42,1.562,44,0.332,48,1.574,50,1.532,52,1.191,59,1.722,61,0.568,106,1.082,139,1.617,170,1.314,174,1.617,216,2.752,256,1.969,266,2.354,267,1.532,270,1.515,278,2.494,318,2.466,319,1.71,355,3.175,428,1.76,447,1.282,456,2.109,457,2.002,587,1.663,588,3.13,589,1.989,591,3.935,593,1.834,594,1.191,595,2.403,596,1.812,597,2.403,598,1.812,599,2.403,600,1.812,601,2.054,602,1.812,603,1.989,604,1.989,605,1.812,606,3.869,607,1.562,608,1.454,609,2.055,610,1.663,611,1.663,612,1.663,613,2.288,614,1.663,615,1.663,616,1.663,617,1.663,618,1.663,619,1.663,620,1.663,621,1.76,622,1.663,678,2.477,1680,4.316,1681,4.316]],["title/controllers/TagController.html",[228,1.689,1682,3.272]],["body/controllers/TagController.html",[3,0.092,4,0.092,5,0.083,10,0.179,15,0.405,16,0.009,17,0.188,20,0.092,21,0.006,22,0.006,23,0.252,24,4.748,28,1.022,34,1.683,36,0.896,44,0.371,55,1.075,61,0.543,69,4.748,70,4.748,115,1.669,117,1.288,120,1.505,121,1.844,125,1.876,133,1.703,135,2.273,136,0.776,149,2.1,150,2.045,152,2.02,153,2.705,162,2.282,166,2.766,170,2.381,180,1.703,216,2.071,228,1.59,230,1.59,232,2.368,233,2.953,242,2.777,243,3.452,244,2.368,246,3.619,247,2.368,248,2.368,249,4.119,250,4.606,251,2.368,252,3.698,253,1.901,254,1.901,255,2.368,256,1.922,257,2.368,258,1.59,259,3.664,260,2.218,261,2.106,262,2.273,263,1.505,264,1.59,268,2.593,270,0.855,277,3.806,278,1.876,279,3.284,280,3.806,282,2.555,314,2.474,325,2.628,327,2.785,436,3.619,437,3.977,463,2.474,471,3.977,474,3.977,561,3.171,578,3.418,593,0.986,608,2.419,807,3.117,1011,2.889,1019,3.992,1020,2.73,1029,2.593,1030,2.73,1031,3.619,1032,2.273,1033,2.593,1043,2.593,1682,4.298,1683,3.64,1684,5.851,1685,5.851,1686,6.634,1687,3.64,1688,4.127,1689,4.127,1690,3.64,1691,4.127,1692,4.127,1693,6.332,1694,4.127,1695,4.127,1696,4.388,1697,3.64,1698,5.08,1699,4.127,1700,4.127,1701,4.127,1702,5.759,1703,3.64,1704,4.127,1705,4.127,1706,4.127,1707,4.127,1708,4.127,1709,4.127,1710,3.64,1711,5.759,1712,4.127]],["title/classes/TagOutputDto.html",[23,0.268,593,1.048]],["body/classes/TagOutputDto.html",[3,0.117,4,0.117,5,0.105,10,0.227,11,0.914,12,1.832,14,1.098,15,0.403,16,0.009,17,0.151,20,0.117,21,0.007,22,0.007,23,0.457,25,0.767,26,6.208,28,1.042,29,5.24,30,5.24,31,5.24,32,5.24,33,5.587,34,3.052,35,3.212,36,1.19,44,0.492,62,5.026,63,2.401,64,2.458,65,1.595,87,2.768,88,1.283,99,3.142,105,4.215,107,3.911,108,3.911,109,3.911,593,1.616,799,4.131,850,5.537,865,3.565,867,4.295,869,4.704,1713,6.762,1714,4.622,1715,5.241,1716,5.241,1717,6.762,1718,8.188,1719,4.622,1720,4.622,1721,4.215,1722,4.622]],["title/classes/TagSearchInput.html",[23,0.268,70,2.9]],["body/classes/TagSearchInput.html",[3,0.1,4,0.1,5,0.09,7,2.567,10,0.194,11,0.823,14,0.961,15,0.396,16,0.009,17,0.154,20,0.154,21,0.006,22,0.006,23,0.423,24,2.962,25,0.655,26,5.744,27,2.569,28,1.342,29,5.202,30,5.202,31,5.202,32,5.202,33,5.547,34,3.491,35,3.231,36,1.128,38,6.857,39,2.163,40,2.773,41,2.174,42,2.109,44,0.467,46,3.355,48,2.222,50,2.163,52,1.681,53,2.504,55,0.726,56,1.88,59,1.543,60,2.627,61,0.589,62,4.808,63,3.092,64,2.742,65,1.363,66,2.835,67,1.774,68,1.774,69,2.962,70,4.029,71,1.809,79,2.414,106,1.527,178,2.484,559,3.11,945,3.355,948,3.95,1064,3.11,1065,3.11,1071,4.029,1072,4.029,1073,4.029,1074,4.029,1075,3.134,1076,3.828,1077,3.134,1723,8.02,1724,4.478,1725,4.478,1726,4.478,1727,4.478,1728,3.95]],["title/modules/TagsModule.html",[284,1.369,407,3.069]],["body/modules/TagsModule.html",[3,0.138,4,0.138,5,0.124,16,0.009,17,0.187,20,0.138,21,0.008,22,0.008,23,0.377,136,1.16,230,2.885,284,2.518,286,2.843,287,2.843,288,3.04,289,3.04,290,2.843,291,3.973,292,3.973,297,4.159,298,3.69,299,3.04,300,3.04,302,3.823,303,3.398,407,6.289,1682,6.019,1696,6.028,1697,5.443,1729,5.443,1730,5.443,1731,6.171,1732,5.443,1733,6.171,1734,6.171]],["title/injectables/TagsService.html",[305,0.999,1696,2.9]],["body/injectables/TagsService.html",[3,0.078,4,0.078,5,0.071,10,0.152,15,0.367,16,0.01,17,0.182,20,0.078,21,0.005,22,0.005,23,0.314,24,4.415,28,1.028,29,4.249,30,4.249,31,2.462,32,4.249,33,4.53,34,2.895,39,1.249,44,0.373,46,1.937,48,1.283,50,1.249,52,0.971,53,2.81,55,1.082,69,4.697,70,4.415,88,0.861,115,1.489,117,1.604,120,1.873,121,2.137,125,1.888,133,1.558,136,0.661,149,1.873,150,1.824,152,2.477,153,2.455,166,2.672,180,2.18,223,2.829,233,3.037,242,2.633,258,1.355,260,1.355,263,1.283,264,1.355,268,2.21,270,0.728,278,0.995,282,2.95,305,1.171,306,1.355,309,2.108,310,3.773,317,2.108,322,2.108,323,2.018,325,2.405,327,2.549,338,3.639,578,3.179,593,0.84,608,1.731,807,2.869,865,2.446,1019,3.407,1064,1.795,1065,1.795,1086,2.462,1087,3.814,1088,2.462,1089,2.462,1090,2.018,1091,2.108,1092,2.21,1093,2.462,1095,3.596,1096,3.398,1098,3.398,1099,3.398,1100,5.065,1101,3.398,1102,2.462,1103,2.462,1104,3.596,1105,2.462,1106,2.462,1111,3.596,1112,3.596,1684,4.532,1685,5.354,1687,4.532,1690,3.102,1693,6.541,1696,3.398,1698,4.532,1703,3.102,1710,3.102,1735,3.102,1736,6.07,1737,3.517,1738,3.517,1739,3.517,1740,3.517,1741,3.517,1742,3.517,1743,7.416,1744,5.138,1745,3.517,1746,6.676,1747,5.138,1748,5.138,1749,3.517,1750,3.517,1751,3.517]],["title/interfaces/TypeMapping.html",[0,2.628,701,2.755]],["body/interfaces/TypeMapping.html",[0,2.504,2,3.359,3,0.093,4,0.093,5,0.084,14,1.224,15,0.413,16,0.01,17,0.19,20,0.161,21,0.006,22,0.006,23,0.463,25,0.611,35,1.523,44,0.233,55,0.677,59,1.604,60,1.859,61,0.549,71,1.24,106,1.673,128,3.649,133,1.072,136,0.785,139,2.502,152,1.768,159,2.923,161,2.762,164,2.762,169,2.762,171,2.923,172,2.624,173,2.762,174,1.565,178,1.703,180,1.491,184,2.762,192,2.624,216,1.304,252,1.924,253,2.676,254,1.924,256,2.091,266,2.301,267,1.483,270,1.494,278,1.642,318,2.249,319,1.655,355,2.977,447,1.24,456,2.062,457,1.957,587,2.237,593,1.595,594,1.153,595,2.192,596,1.754,597,2.192,598,1.754,599,2.192,600,1.754,601,2.008,602,1.754,607,1.527,610,2.237,611,2.237,612,2.237,613,2.237,614,2.237,615,2.237,616,2.237,617,2.237,618,2.237,619,2.237,620,2.237,622,2.237,643,2.762,675,4.416,676,3.481,677,2.504,688,3.117,689,3.117,690,3.117,691,3.117,692,3.117,693,2.923,694,2.923,695,2.762,696,4.766,697,4.334,698,3.117,699,3.117,700,3.117,701,4.195,702,3.649,703,3.117,704,3.117,705,2.762,706,2.923,707,4.065,708,2.923,709,2.923,710,2.923,711,2.923,712,2.762,713,2.923,714,5.386,715,4.334,716,3.117,717,2.923,718,3.117,719,3.117,720,4.334,721,4.334,722,3.117,723,4.065,724,4.334,725,2.762,726,3.117,727,3.117,728,3.117,729,3.117,730,2.923,1752,4.176,1753,4.176]],["title/classes/UpdateEventDto.html",[23,0.268,823,2.628]],["body/classes/UpdateEventDto.html",[3,0.05,4,0.05,5,0.045,7,2.917,10,0.096,11,0.488,12,1.508,14,1.266,15,0.405,16,0.009,17,0.145,20,0.117,21,0.004,22,0.004,23,0.376,25,0.326,28,1.361,35,1.66,36,1.113,37,3.202,39,2.885,40,2.83,41,2.242,42,2.335,44,0.46,53,1.216,55,0.849,56,2.198,59,1.638,60,2.766,61,0.293,62,2.164,63,3.138,64,2.928,65,0.678,66,1.316,67,0.882,68,0.882,71,0.661,72,2.337,79,2.908,80,2.74,87,2.603,88,0.545,89,1.611,170,0.678,270,0.461,279,3.082,536,1.859,593,0.862,594,0.614,595,0.731,607,1.377,664,1.988,746,1.335,747,1.558,748,3.217,749,2.568,750,2.568,751,3.449,752,2.835,753,4.186,754,3.168,755,3.218,756,4.486,757,3.449,758,4.051,759,4.294,760,4.294,761,3.217,762,4.294,763,2.28,764,2.838,765,1.473,767,3.016,768,3.016,769,1.277,771,2.135,772,2.672,775,3.138,776,1.662,778,2.672,781,4.294,783,2.672,784,2.337,789,2.749,790,2.729,791,1.662,792,1.662,799,3.329,801,3.138,803,2.164,807,2.156,808,2.337,813,2.265,814,2.412,815,2.323,816,1.136,817,1.611,818,1.136,819,1.335,820,2.323,821,2.323,822,2.031,823,2.164,824,3.907,825,1.662,826,1.558,827,1.662,877,1.662,1754,2.226,1755,2.226,1756,2.226,1757,2.226,1758,1.964,1759,2.226,1760,2.226,1761,1.791,1762,2.226,1763,4.015,1764,2.226,1765,2.226,1766,2.226,1767,2.226,1768,1.964,1769,2.226,1770,2.226,1771,1.964,1772,2.226,1773,2.226,1774,2.226,1775,2.226,1776,2.226,1777,2.226,1778,2.226,1779,1.964,1780,2.226,1781,2.226]],["title/classes/UpdateNewsDto.html",[23,0.268,859,2.628]],["body/classes/UpdateNewsDto.html",[3,0.072,4,0.178,5,0.065,7,2.874,10,0.139,11,0.65,12,1.757,14,1.256,15,0.386,16,0.009,17,0.153,20,0.143,21,0.005,22,0.005,23,0.439,25,0.471,28,1.337,36,1.076,37,3.205,40,3.055,41,1.965,42,2.095,44,0.445,46,4.799,56,2.684,59,1.67,60,2.504,61,0.423,63,3.033,64,2.872,65,0.98,66,1.754,67,1.275,68,1.275,71,0.956,79,2.533,87,2.63,88,0.787,162,2.533,170,0.98,223,4.308,238,2.548,270,0.666,593,1.15,594,0.888,749,3.054,750,3.054,752,3.15,763,2.711,764,3.67,767,3.415,768,3.415,769,1.846,771,2.607,778,2.941,784,2.853,799,4.078,801,3.833,803,1.929,807,2.564,808,2.853,813,2.082,822,2.571,828,1.929,829,2.252,830,5.107,831,5.107,833,5.711,840,5.555,841,2.401,842,2.401,850,2.252,851,3.59,852,3.59,853,1.929,854,4.3,855,4.3,856,4.3,857,2.401,858,4.3,859,2.884,860,3.59,861,4.475,862,1.929,863,2.401,864,2.401,865,1.532,866,2.401,867,1.846,868,2.401,869,2.022,877,2.401,1782,3.218,1783,3.218,1784,3.218,1785,3.218,1786,3.218,1787,3.218,1788,3.218,1789,3.218,1790,3.218,1791,3.218,1792,3.218,1793,3.218,1794,3.218,1795,3.218,1796,3.218,1797,3.218,1798,3.218]],["title/classes/UpdateOpportunityDto.html",[23,0.268,899,2.628]],["body/classes/UpdateOpportunityDto.html",[3,0.057,4,0.057,5,0.051,7,2.923,10,0.11,11,0.543,12,1.6,14,1.269,15,0.404,16,0.009,17,0.153,20,0.126,21,0.004,22,0.004,23,0.399,25,0.372,28,1.253,36,1.108,37,3.258,40,2.837,41,2.22,42,2.318,44,0.458,48,2.991,55,0.916,56,2.089,59,1.654,60,2.748,61,0.335,63,3.13,64,2.941,65,0.775,66,1.464,67,1.008,68,1.008,71,0.756,72,2.522,79,2.81,80,2.369,87,2.615,88,0.623,89,1.792,170,0.775,270,0.527,279,3.066,536,2.006,593,0.96,594,0.702,599,0.835,607,1.486,748,3.364,749,2.745,750,2.745,751,3.687,752,3.03,753,4.377,754,3.6,755,1.211,756,4.648,757,3.687,758,4.252,761,3.364,763,2.437,764,3.012,765,1.683,767,3.166,768,3.166,769,1.46,771,2.304,772,2.884,775,3.387,776,1.899,778,2.884,781,3.713,783,2.884,784,2.522,789,1.135,799,2.784,803,2.407,807,2.305,808,2.522,813,1.738,814,2.603,815,1.299,816,1.299,817,1.792,818,1.299,820,2.05,821,2.539,822,2.22,834,2.046,870,1.525,871,1.781,872,4.59,873,2.997,892,1.899,893,1.899,897,1.525,898,1.899,899,2.407,900,1.899,901,1.899,1758,2.244,1761,2.046,1763,4.388,1768,2.244,1771,2.244,1779,2.244,1799,2.544,1800,2.544,1801,2.544,1802,2.544,1803,2.544,1804,2.544,1805,2.544,1806,2.544,1807,2.544,1808,2.544,1809,2.544,1810,2.544,1811,2.544,1812,2.544,1813,2.544,1814,2.544,1815,2.544]],["title/classes/UpdateOrganizationDto.html",[23,0.268,931,2.628]],["body/classes/UpdateOrganizationDto.html",[3,0.061,4,0.061,5,0.055,7,2.902,10,0.118,11,0.573,12,1.866,14,1.253,15,0.388,16,0.009,17,0.157,20,0.131,21,0.004,22,0.004,23,0.411,25,0.399,28,1.27,36,1.08,37,3.33,40,3.081,41,2.246,42,2.324,44,0.447,50,2.838,53,1.429,55,1.236,56,2.465,59,1.645,60,2.639,61,0.359,63,3.076,64,2.766,65,0.83,66,1.547,67,1.081,68,1.081,71,0.81,72,2.62,75,3.882,79,2.325,80,3.459,82,2.036,87,2.524,88,0.668,89,1.893,106,1.471,170,0.83,270,0.565,536,2.649,593,1.014,594,0.753,597,0.896,607,1.544,628,3.811,629,3.811,664,2.336,748,3.438,749,2.838,750,2.838,755,3.459,761,3.438,763,2.519,765,1.804,767,3.242,768,3.679,769,2.434,771,2.962,772,3.708,783,2.996,784,2.62,789,3.004,790,3.119,791,2.036,792,2.036,803,2.543,807,2.382,808,2.62,813,2.54,814,2.398,815,2.656,816,1.392,817,1.893,818,1.392,820,2.996,821,2.656,822,2.322,877,2.036,902,1.635,903,1.909,904,4.745,905,4.745,913,5.421,919,5.421,920,4.381,921,2.406,926,1.635,927,3.884,928,3.884,929,3.442,930,3.884,931,2.543,932,1.804,933,1.909,1761,2.194,1816,2.728,1817,2.728,1818,2.728,1819,2.728,1820,2.728,1821,2.728,1822,2.728,1823,2.728,1824,2.728,1825,2.728,1826,2.728,1827,2.728,1828,2.728,1829,2.728,1830,2.728,1831,2.728]],["title/classes/UpdateUserInput.html",[23,0.268,1832,3.069]],["body/classes/UpdateUserInput.html",[3,0.141,4,0.141,5,0.127,10,0.273,11,1.025,14,1.172,15,0.347,16,0.009,17,0.169,20,0.141,21,0.008,22,0.008,23,0.463,25,0.922,27,3.618,36,1.025,44,0.424,55,1.32,60,2.606,61,0.829,63,2.89,64,2.673,65,1.92,935,6.076,937,5.115,943,5.562,945,3.472,955,5.698,956,5.072,957,4.706,958,5.072,960,5.072,1027,4.011,1612,5.562,1728,5.562,1832,5.312,1833,6.305,1834,6.305]],["title/classes/UserAccessTokenClaims.html",[23,0.268,529,2.516]],["body/classes/UserAccessTokenClaims.html",[3,0.118,4,0.118,5,0.106,10,0.228,11,0.917,12,1.94,14,1.25,15,0.396,16,0.009,17,0.151,20,0.168,21,0.007,22,0.007,23,0.484,25,0.771,35,2.891,36,1.169,44,0.484,59,1.412,61,0.693,87,2.853,88,1.29,99,3.161,106,1.322,108,3.935,366,5.034,430,3.487,447,2.597,457,1.776,529,3.895,536,2.665,583,3.935,623,5.241,624,5.255,625,5.255,626,5.255,627,5.255,628,4.501,629,4.501,630,3.487,1619,4.65,1625,4.65,1721,4.241,1835,5.272,1836,5.272,1837,5.272,1838,5.272]],["title/injectables/UserAclService.html",[305,0.999,1839,3.069]],["body/injectables/UserAclService.html",[1,5.969,3,0.117,4,0.117,5,0.105,9,5.729,10,0.227,11,0.913,15,0.342,16,0.009,17,0.187,18,4.335,19,3.663,20,0.117,21,0.007,22,0.007,23,0.32,28,1.041,35,2.463,44,0.457,52,2.385,55,1.095,71,2.006,115,1.958,117,2.335,123,3.002,125,1.91,133,1.734,136,0.984,178,2.754,180,1.343,213,3.905,238,2.772,305,1.539,306,2.016,355,2.336,362,3.905,370,3.663,559,3.448,607,1.376,631,6.255,633,6.973,634,5.958,635,5.958,636,5.958,637,3.905,639,5.583,640,4.615,642,2.881,643,3.461,644,4.615,645,4.615,646,4.615,647,5.958,648,5.9,650,4.209,656,4.615,1027,2.578,1074,4.948,1091,3.137,1247,3.905,1839,4.729,1840,6.598,1841,4.615,1842,6.755,1843,5.233,1844,6.755,1845,5.233,1846,5.233,1847,5.233,1848,5.233,1849,5.233,1850,5.233,1851,5.233,1852,5.233,1853,5.233,1854,4.615,1855,6.755,1856,6.755,1857,5.233,1858,5.233,1859,5.233,1860,5.233,1861,5.233]],["title/classes/UserApiResponse.html",[23,0.268,610,1.689]],["body/classes/UserApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.632,34,1.762,36,0.803,39,1.534,41,1.527,42,1.564,44,0.332,48,1.576,50,1.534,52,1.193,59,1.724,61,0.568,106,1.083,139,1.619,174,1.619,216,2.753,256,1.97,266,2.356,267,1.534,270,1.516,278,2.494,318,2.587,319,1.712,355,3.175,428,1.762,447,1.284,456,2.111,457,2.003,587,1.665,588,3.132,589,1.991,591,3.936,593,1.75,594,1.193,595,2.404,596,1.815,597,2.404,598,1.815,599,2.404,600,1.815,601,2.056,602,1.815,603,1.991,604,1.991,605,1.815,606,3.87,607,1.564,608,1.456,609,2.058,610,2.29,611,1.665,612,1.665,613,1.665,614,1.665,615,1.665,616,1.665,617,1.665,618,1.665,619,1.665,620,1.665,621,1.762,622,1.665,1862,4.322,1863,4.322]],["title/classes/UserArrayApiResponse.html",[23,0.268,611,1.689]],["body/classes/UserArrayApiResponse.html",[3,0.096,4,0.096,5,0.087,10,0.187,11,0.803,15,0.385,16,0.009,17,0.187,20,0.196,21,0.006,22,0.006,23,0.539,25,0.631,34,1.76,36,0.803,39,1.532,41,1.525,42,1.562,44,0.332,48,1.574,50,1.532,52,1.191,59,1.722,61,0.568,106,1.082,139,1.617,170,1.314,174,1.617,216,2.752,256,1.969,266,2.354,267,1.532,270,1.515,278,2.494,318,2.586,319,1.71,355,3.175,428,1.76,447,1.282,456,2.109,457,2.002,587,1.663,588,3.13,589,1.989,591,3.935,593,1.749,594,1.191,595,2.403,596,1.812,597,2.403,598,1.812,599,2.403,600,1.812,601,2.054,602,1.812,603,1.989,604,1.989,605,1.812,606,3.869,607,1.562,608,1.454,609,2.055,610,1.663,611,2.288,612,1.663,613,1.663,614,1.663,615,1.663,616,1.663,617,1.663,618,1.663,619,1.663,620,1.663,621,1.76,622,1.663,678,2.477,1864,4.316,1865,4.316]],["title/controllers/UserController.html",[228,1.689,1866,3.272]],["body/controllers/UserController.html",[3,0.079,4,0.079,5,0.072,10,0.154,12,1.823,13,2.134,15,0.402,16,0.01,17,0.19,18,1.886,19,2.492,20,0.079,21,0.005,22,0.005,23,0.217,28,1.034,36,0.907,44,0.375,52,2.307,55,1.088,61,0.468,66,2.448,67,1.411,68,1.411,106,1.867,115,1.502,117,1.111,120,1.298,121,1.659,125,1.899,133,1.724,135,1.961,136,0.669,149,1.89,150,1.84,152,2.044,153,2.777,166,2.771,170,2.398,175,3.869,180,1.724,210,4.572,216,2.096,228,1.371,230,1.371,232,2.043,233,2.968,238,2.746,242,2.797,243,3.107,244,2.043,247,2.043,248,2.043,249,4.094,250,4.609,251,2.043,252,3.542,253,1.64,254,1.64,255,2.043,256,2.068,257,2.043,258,1.371,259,3.642,260,1.997,261,1.817,262,1.961,263,1.298,264,1.371,268,2.237,270,0.737,277,3.853,278,1.899,279,3.308,280,3.853,282,2.586,314,2.134,318,1.2,320,3.664,325,2.66,327,2.819,436,4.219,437,4.025,451,4.7,463,2.134,471,3.107,474,4.025,549,5.737,561,2.855,567,2.657,571,3.14,572,3.14,608,1.746,1019,3.642,1020,2.355,1027,3.011,1029,2.237,1030,3.429,1031,3.841,1032,1.961,1033,2.237,1043,3.257,1048,3.629,1130,3.629,1163,3.869,1642,3.869,1832,4.7,1866,3.869,1867,3.14,1868,6.113,1869,6.113,1870,5.392,1871,5.392,1872,3.56,1873,3.56,1874,3.56,1875,3.56,1876,3.56,1877,3.56,1878,3.14,1879,4.572,1880,3.56,1881,3.56,1882,3.56,1883,3.56,1884,3.14,1885,5.922,1886,3.56,1887,3.56,1888,3.56,1889,3.56,1890,3.56,1891,4.572,1892,3.14,1893,3.56,1894,3.56,1895,3.56,1896,3.56,1897,6.113,1898,3.56,1899,3.56,1900,3.56,1901,3.14,1902,3.56,1903,3.56,1904,3.56,1905,5.184,1906,5.184,1907,5.184,1908,3.56,1909,5.184,1910,3.56,1911,3.56,1912,3.56,1913,3.14,1914,3.56]],["title/modules/UserModule.html",[284,1.369,408,2.9]],["body/modules/UserModule.html",[3,0.131,4,0.131,5,0.118,16,0.009,17,0.193,20,0.131,21,0.007,22,0.007,23,0.359,136,1.105,230,2.801,284,2.464,286,2.709,287,2.709,288,2.896,289,2.896,290,2.709,291,3.889,292,3.889,297,4.111,298,3.582,299,2.896,300,2.896,302,3.711,303,3.237,320,5.431,408,6.015,497,4.755,508,3.888,1062,4.115,1839,6.044,1866,5.892,1892,5.185,1915,5.185,1916,5.879,1917,5.185,1918,5.185,1919,5.879,1920,5.879,1921,5.879,1922,5.879]],["title/classes/UserOutput.html",[23,0.268,318,1.477]],["body/classes/UserOutput.html",[3,0.116,4,0.116,5,0.105,10,0.225,11,0.909,12,1.826,14,1.257,15,0.403,16,0.009,17,0.15,20,0.116,21,0.007,22,0.007,23,0.411,25,0.761,35,2.876,36,1.188,44,0.491,59,1.665,61,0.684,87,2.765,88,1.273,99,3.118,104,6.097,105,4.184,107,3.882,108,3.882,109,3.882,318,2.267,366,5.016,536,2.648,624,5.222,625,5.222,626,5.222,627,5.222,628,4.472,629,4.472,865,3.552,867,4.28,935,6.611,1714,4.588,1719,4.588,1720,4.588,1721,4.184,1722,4.588,1923,8.169,1924,5.201]],["title/classes/UserRefreshTokenClaims.html",[23,0.268,630,2.9]],["body/classes/UserRefreshTokenClaims.html",[3,0.137,4,0.137,5,0.123,10,0.266,11,1.009,12,2.049,14,1.237,15,0.281,16,0.009,17,0.167,20,0.18,21,0.008,22,0.008,23,0.511,25,0.898,35,2.723,44,0.343,59,1.513,61,0.807,87,2.832,88,1.502,99,3.68,106,1.871,366,4.824,430,4.06,447,2.217,457,2.068,529,3.522,536,2.179,583,4.581,623,4.476,624,4.297,625,4.297,626,4.297,627,4.297,628,3.68,629,3.68,630,4.938,1925,6.138]],["title/injectables/UserService.html",[305,0.999,320,2.628]],["body/injectables/UserService.html",[3,0.08,4,0.08,5,0.072,10,0.156,12,1.887,14,1.163,15,0.362,16,0.01,17,0.18,20,0.08,21,0.005,22,0.005,23,0.319,28,1.217,44,0.441,52,2.063,53,2.661,55,1.28,88,0.88,106,2.1,115,1.513,117,1.63,120,1.904,121,2.16,125,2.234,133,1.98,136,0.676,149,1.904,150,1.854,152,2.181,153,2.897,162,2.436,166,2.91,180,1.98,205,5.423,233,3.136,242,3.026,258,1.386,260,1.386,263,1.312,264,1.386,268,3.282,270,0.745,282,2.599,305,1.19,306,1.386,309,2.156,310,3.799,314,2.156,317,4.295,318,2.414,320,3.131,322,2.156,323,2.064,325,3.055,327,3.238,338,4.623,451,5.398,536,2.395,537,4.946,542,3.257,549,2.685,578,1.713,608,1.212,642,1.981,929,2.379,934,5.035,937,3.282,938,4.589,1027,1.772,1064,3.138,1065,3.138,1116,3.656,1258,4.607,1597,2.685,1832,4.723,1870,5.423,1871,5.423,1878,3.173,1884,3.173,1885,5.423,1891,5.423,1901,3.173,1913,3.173,1926,3.173,1927,6.149,1928,5.223,1929,6.149,1930,5.223,1931,6.149,1932,3.597,1933,3.597,1934,3.597,1935,5.223,1936,3.597,1937,3.597,1938,3.597,1939,5.223,1940,3.597,1941,3.597,1942,3.597,1943,3.597,1944,3.597,1945,3.597,1946,5.223,1947,3.173,1948,3.597,1949,3.597,1950,3.597,1951,5.223,1952,3.597,1953,3.597,1954,3.597,1955,3.597,1956,6.149,1957,5.223,1958,3.597,1959,3.597,1960,3.597,1961,3.597,1962,5.223,1963,3.597]],["title/coverage.html",[1964,5.297]],["body/coverage.html",[0,2.358,1,1.735,5,0.05,6,2.186,13,1.486,15,0.37,16,0.009,21,0.004,22,0.004,23,0.555,24,1.639,26,3.898,27,4.033,66,0.904,69,1.639,70,1.639,72,1.106,73,3.164,89,1.106,96,1.735,97,2.186,98,1.85,99,4.062,110,1.85,111,2.186,112,2.186,121,0.793,126,3.164,141,1.994,143,1.85,147,1.735,162,0.982,166,0.814,228,2.857,229,1.85,231,2.186,252,1.142,253,1.142,254,1.142,256,2.432,259,1.265,261,1.265,263,0.904,265,1.639,267,1.397,271,1.639,290,1.142,305,1.901,307,2.186,310,1.221,318,0.835,320,1.486,339,1.85,340,2.186,344,1.639,352,2.186,420,2.186,426,1.85,427,2.186,429,1.85,434,1.85,442,1.85,445,1.85,447,1.654,456,0.88,457,0.835,458,1.85,461,1.85,464,1.558,497,1.365,498,1.735,499,1.735,504,1.735,523,2.186,529,1.422,587,0.955,588,3.649,589,3.649,591,1.106,593,0.592,595,0.814,597,0.814,599,0.814,601,0.857,610,0.955,611,0.955,612,0.955,613,0.955,614,0.955,615,0.955,616,0.955,617,0.955,618,0.955,619,0.955,620,0.955,622,0.955,623,4.062,630,1.639,631,1.85,632,2.186,637,1.85,642,1.365,648,1.85,665,1.994,675,1.639,676,4.062,677,4.062,695,1.639,696,3.816,701,1.558,705,1.639,732,2.186,733,2.186,746,1.486,747,3.898,789,1.106,817,1.106,819,1.486,823,1.486,828,1.486,829,3.898,853,1.486,859,1.486,862,1.486,870,1.486,871,3.898,897,1.486,899,1.486,902,1.486,903,3.898,926,1.486,931,1.486,934,1.85,935,3.65,945,3.067,1002,1.85,1003,2.186,1027,1.221,1032,1.365,1034,1.639,1076,5.854,1078,2.186,1087,1.558,1090,1.422,1092,1.558,1134,3.164,1149,1.85,1150,3.164,1166,1.85,1167,2.186,1174,1.639,1179,1.994,1195,2.186,1210,3.164,1211,3.164,1236,3.164,1237,2.186,1260,2.186,1264,1.85,1265,2.186,1269,2.186,1271,1.85,1272,2.186,1288,1.85,1289,2.186,1316,1.85,1317,2.186,1334,1.639,1384,2.186,1408,1.85,1409,2.186,1426,1.639,1472,2.186,1497,1.85,1498,2.186,1515,1.639,1558,2.186,1588,2.186,1589,2.186,1598,2.186,1599,2.186,1627,3.65,1628,2.186,1641,1.994,1642,1.85,1644,2.186,1650,1.994,1668,1.994,1682,1.85,1683,2.186,1696,1.639,1735,2.186,1832,1.735,1839,1.735,1840,2.186,1841,2.186,1866,1.85,1867,2.186,1926,2.186,1964,2.186,1965,2.479,1966,2.479,1967,2.479,1968,3.47,1969,8.437,1970,8.895,1971,2.186,1972,6.775,1973,7.24,1974,8.677,1975,4.314,1976,6.073,1977,3.47,1978,7.24,1979,6.464,1980,6.464,1981,2.479,1982,2.479,1983,2.479,1984,3.47,1985,2.186,1986,3.934,1987,4.891,1988,2.479,1989,2.479,1990,2.479,1991,3.934,1992,3.47,1993,3.47,1994,8.009,1995,5.569,1996,2.479,1997,2.479,1998,3.934,1999,3.934,2000,2.186,2001,2.186,2002,4.314,2003,2.186,2004,2.186,2005,4.479,2006,2.186,2007,2.186,2008,2.186,2009,2.186,2010,2.186,2011,3.934,2012,2.186,2013,2.186,2014,3.164,2015,2.186,2016,1.994,2017,5.246,2018,5.246,2019,2.186,2020,1.994,2021,2.186,2022,2.186,2023,2.186,2024,2.186,2025,2.186,2026,2.479,2027,2.186,2028,2.186,2029,2.186,2030,2.186,2031,2.186,2032,2.186,2033,3.934,2034,2.186,2035,1.994,2036,2.479,2037,2.479,2038,2.479,2039,2.479]],["title/dependencies.html",[287,2.432,2040,3.221]],["body/dependencies.html",[16,0.009,21,0.008,22,0.008,23,0.46,61,0.819,65,1.896,88,1.524,136,1.171,137,3.572,140,5.008,211,5.492,256,1.804,287,2.869,316,4.647,380,5.492,503,3.732,604,2.869,621,2.539,1091,3.732,1223,4.647,1245,6.043,1246,4.647,1278,5.008,1649,5.008,1947,5.492,2041,8.097,2042,6.226,2043,6.226,2044,6.226,2045,6.226,2046,6.226,2047,6.226,2048,6.226,2049,6.226,2050,6.226,2051,6.226,2052,6.226,2053,6.226,2054,6.226,2055,6.226,2056,6.226,2057,6.226,2058,6.226,2059,6.226,2060,5.492,2061,6.226,2062,6.226,2063,6.226,2064,6.226,2065,6.226,2066,6.226,2067,6.226,2068,6.226]],["title/miscellaneous/enumerations.html",[2069,2.189,2070,4.657]],["body/miscellaneous/enumerations.html",[9,5.812,10,0.286,16,0.009,18,4.132,21,0.008,22,0.008,52,2.153,178,3.681,238,4.132,639,4.929,642,4.296,1015,5.461,1027,3.843,1854,6.881,1879,7.324,2069,3.959,2070,5.826,2071,6.605,2072,6.605,2073,6.605,2074,7.801,2075,6.605]],["title/miscellaneous/functions.html",[2069,2.189,2076,4.657]],["body/miscellaneous/functions.html",[10,0.25,14,1.138,15,0.386,16,0.009,21,0.007,22,0.007,23,0.353,28,1.263,55,1.329,125,2.319,128,5.48,133,2.165,138,4.697,139,2.166,147,5.037,166,1.898,174,2.696,180,1.484,254,3.315,256,2.085,290,3.61,370,4.047,676,3.465,677,4.314,696,3.633,706,4.047,707,5.037,708,4.047,709,4.047,710,4.047,711,4.047,712,3.824,713,4.047,1090,3.317,1128,4.047,1285,4.314,1627,4.314,1984,5.099,1985,6.347,2017,4.314,2018,5.37,2019,6.347,2032,5.099,2069,3.465,2076,5.099,2077,7.196,2078,4.65,2079,4.65,2080,4.65,2081,5.781,2082,7.196,2083,7.196,2084,5.781,2085,5.781,2086,8.199,2087,5.781,2088,5.781,2089,5.781,2090,5.781,2091,5.781,2092,5.781,2093,5.781,2094,7.835,2095,5.781,2096,5.781,2097,5.781,2098,5.781]],["title/index.html",[10,0.158,2099,3.651,2100,3.651]],["body/index.html",[16,0.008,21,0.008,22,0.008,2101,5.797,2102,6.357]],["title/modules.html",[286,2.767]],["body/modules.html",[16,0.008,21,0.008,22,0.008,285,4.495,286,2.959,297,3.058,391,4.495,397,4.793,401,4.495,402,4.495,403,4.495,404,4.495,405,4.495,406,4.495,407,4.495,408,4.247,2103,9.158,2104,9.158,2105,9.158,2106,9.158]],["title/overview.html",[2107,5.297]],["body/overview.html",[2,3.485,16,0.009,21,0.006,22,0.006,25,0.634,121,2.604,230,1.669,271,5.38,284,1.352,285,5.8,286,1.996,287,1.996,288,2.134,289,2.134,290,1.996,291,2.134,292,2.134,293,3.822,294,3.822,295,3.822,296,3.822,297,4.253,298,2.934,299,2.134,300,2.134,306,1.669,310,4.007,320,4.876,344,4.502,391,5.955,392,3.822,393,3.822,394,3.822,397,6.772,398,3.822,399,3.822,400,3.822,401,6.176,402,5.885,403,5.694,404,5.885,405,5.885,406,5.955,407,5.8,408,5.77,464,4.277,494,3.822,495,3.822,497,4.563,498,4.765,499,4.765,929,2.866,1034,4.502,1058,3.822,1060,3.822,1174,4.502,1184,3.822,1185,3.822,1334,4.502,1352,3.822,1353,3.822,1426,4.502,1444,3.822,1445,3.822,1515,5.38,1530,3.822,1532,3.822,1533,3.822,1597,3.234,1641,3.485,1660,3.822,1661,3.822,1663,3.822,1696,5.38,1729,3.822,1730,3.822,1732,3.822,1839,4.765,1915,3.822,1917,3.822,1918,3.822,2107,3.822,2108,4.333,2109,4.333,2110,4.333,2111,4.333]],["title/properties.html",[11,0.713,2040,3.221]],["body/properties.html",[7,2.274,11,0.96,16,0.009,21,0.008,22,0.008,2060,6.266,2101,5.714,2102,6.266,2112,7.104,2113,7.104]],["title/miscellaneous/typealiases.html",[2069,2.189,2114,5.279]],["body/miscellaneous/typealiases.html",[10,0.251,14,0.805,15,0.412,16,0.009,21,0.007,22,0.007,26,4.06,27,4.137,35,2.115,39,2.059,46,3.194,48,2.115,50,2.059,52,1.601,69,4.769,106,1.454,256,2.09,637,5.382,639,4.329,648,5.382,650,5.8,665,5.8,670,4.329,671,5.116,676,3.477,677,4.323,694,4.06,695,4.769,696,4.531,754,3.194,1992,5.116,1993,6.921,2005,4.665,2007,6.36,2008,6.36,2011,4.665,2014,5.8,2016,5.8,2017,4.329,2018,6.513,2020,5.8,2021,6.36,2022,6.36,2023,6.36,2024,6.36,2025,6.36,2033,4.665,2035,5.8,2069,3.477,2078,6.312,2079,6.922,2080,4.665,2115,5.8,2116,7.211,2117,5.116,2118,5.116,2119,5.8,2120,8.893]],["title/miscellaneous/variables.html",[2069,2.189,2121,4.657]],["body/miscellaneous/variables.html",[7,2.322,9,4.307,10,0.129,12,1.347,13,4.182,14,1.102,15,0.364,16,0.01,18,2.915,21,0.005,22,0.005,28,0.46,41,1.166,42,1.195,52,1.254,53,2.444,55,0.997,123,3.158,126,4.949,128,2.855,138,4.182,139,1.702,141,3.654,152,2.6,153,1.571,155,4.854,157,3.391,162,2.18,165,4.007,166,0.979,178,3.593,180,1.791,192,2.855,213,2.226,233,1.613,238,2.406,242,1.059,256,1.317,259,2.319,261,1.523,278,1.285,282,2.12,318,1.531,366,2.724,370,3.18,428,1.216,445,2.226,446,4.592,451,2.088,456,1.059,457,1.005,486,2.855,504,3.18,536,1.613,537,3.654,542,2.406,549,2.226,559,4.422,587,1.149,593,1.086,595,1.492,597,1.492,599,1.492,601,1.031,607,1.618,610,1.149,611,1.149,612,1.149,613,1.149,614,1.149,615,1.149,616,1.149,617,1.149,618,1.149,619,1.149,620,1.149,622,1.149,624,3.18,625,3.18,626,3.18,627,3.18,676,1.788,677,2.724,693,4.635,701,1.874,702,3.458,705,3.005,712,1.973,717,2.088,723,2.088,730,2.088,754,1.643,937,2.855,1019,2.319,1029,1.874,1087,2.855,1090,2.607,1092,2.855,1096,3.64,1098,1.973,1099,1.973,1100,1.973,1101,3.005,1179,5.612,1216,3.18,1246,3.391,1264,3.391,1271,3.391,1278,2.399,1285,2.226,1592,2.631,1597,2.226,1600,2.631,1627,2.226,1650,3.654,1668,4.426,1968,2.631,1971,4.007,1975,2.631,1977,2.631,2000,2.631,2001,4.007,2002,2.631,2003,4.007,2004,4.007,2005,2.399,2006,5.427,2009,2.631,2010,2.631,2011,3.654,2012,4.007,2013,4.007,2014,3.654,2015,4.007,2016,2.399,2017,2.226,2018,3.391,2020,2.399,2027,2.631,2028,2.631,2029,4.007,2030,4.007,2031,4.007,2033,2.399,2034,4.007,2035,2.399,2069,1.788,2078,2.399,2079,2.399,2080,2.399,2101,2.399,2117,4.007,2118,4.007,2121,2.631,2122,2.983,2123,2.983,2124,2.983,2125,5.503,2126,4.543,2127,2.983,2128,2.983,2129,4.543,2130,5.503,2131,2.983,2132,2.983,2133,6.976,2134,2.983,2135,2.983,2136,4.543,2137,2.983,2138,2.983,2139,2.983,2140,2.983,2141,2.983,2142,2.983,2143,2.983,2144,4.543,2145,2.983,2146,6.153,2147,2.983,2148,4.543,2149,2.983,2150,4.543,2151,2.983,2152,2.983,2153,2.983,2154,2.983,2155,2.983,2156,2.983,2157,2.983,2158,4.543,2159,2.983,2160,4.543,2161,2.983,2162,2.983,2163,2.983,2164,2.983,2165,2.983,2166,5.503,2167,2.983,2168,6.976,2169,2.983,2170,2.983,2171,2.983,2172,2.983,2173,2.983,2174,2.983,2175,2.983,2176,4.543,2177,4.543,2178,2.983,2179,2.983,2180,2.983,2181,2.983,2182,2.983,2183,2.983,2184,2.983,2185,2.983,2186,2.983,2187,2.983,2188,4.543,2189,2.983,2190,2.983,2191,2.983,2192,2.983,2193,2.983,2194,2.983,2195,2.983,2196,2.983,2197,4.543,2198,2.983,2199,2.983,2200,2.983,2201,2.983,2202,2.983,2203,5.503,2204,2.983,2205,4.543,2206,2.983,2207,2.983,2208,4.543,2209,2.983,2210,2.983,2211,2.983,2212,2.983,2213,2.983,2214,2.983,2215,2.983,2216,2.983,2217,4.543,2218,4.543,2219,2.983,2220,4.543,2221,2.983,2222,2.983,2223,2.983,2224,2.983,2225,2.983,2226,2.983,2227,4.543,2228,2.983,2229,2.983,2230,2.983,2231,2.983,2232,2.983,2233,6.153,2234,2.983,2235,2.983,2236,2.983,2237,2.983,2238,2.983,2239,2.983]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1076,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"coverage.html":{}}}],["0.14.1",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2062,"title":{},"body":{"dependencies.html":{}}}],["0.4.2",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2058,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1970,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1972,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1974,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1976,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1978,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1979,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":842,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["1",{"_index":929,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["1'})@expose",{"_index":1551,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["1'})@isoptional()@isstring",{"_index":921,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["1.0.0",{"_index":2060,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["1/1",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1597,"title":{},"body":{"classes/PaginationParamsDto.html":{},"injectables/UserService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":945,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterInput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["100)@isalphanumeric",{"_index":950,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["100)@isstring",{"_index":1612,"title":{},"body":{"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["11.0.0",{"_index":2043,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":2041,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":2044,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":2046,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":2067,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2108,"title":{},"body":{"overview.html":{}}}],["12345",{"_index":1160,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["12345})@expose",{"_index":1154,"title":{},"body":{"classes/ImagekitAuthParams.html":{}}}],["15t00:00:00.000z",{"_index":857,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["15t00:00:00.000z'})@isdatestring",{"_index":843,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["17.13.3",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":2111,"title":{},"body":{"overview.html":{}}}],["20",{"_index":2109,"title":{},"body":{"overview.html":{}}}],["2025",{"_index":841,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["3.17.0",{"_index":2068,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2037,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":2042,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["5551234567",{"_index":80,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["5551234567'})@expose",{"_index":91,"title":{},"body":{"classes/AddressResponse.html":{},"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OrganizationResponseDto.html":{}}}],["5551234567'})@isoptional",{"_index":765,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["5551234567'})@isoptional()@isstring",{"_index":82,"title":{},"body":{"classes/AddressInput.html":{},"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["5551234567'})@validatenested({each",{"_index":791,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["58",{"_index":2110,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2064,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":2047,"title":{},"body":{"dependencies.html":{}}}],["7.8.2",{"_index":2065,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["9\\s]/g",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{}}}],["abcd",{"_index":825,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["abcd'})@isstring()@expose",{"_index":982,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["ability",{"_index":644,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["above",{"_index":206,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["acceptable",{"_index":1636,"title":{},"body":{"classes/RequestContext.html":{}}}],["acceptedlanguage",{"_index":182,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["access",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseAclService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["account",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["acl",{"_index":639,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acl.service",{"_index":1922,"title":{},"body":{"modules/UserModule.html":{}}}],["acl.service.ts",{"_index":1841,"title":{},"body":{"injectables/UserAclService.html":{},"coverage.html":{}}}],["acl.service.ts:10",{"_index":1843,"title":{},"body":{"injectables/UserAclService.html":{}}}],["acl.service.ts:21",{"_index":1845,"title":{},"body":{"injectables/UserAclService.html":{}}}],["aclrule",{"_index":637,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["aclrule.actions.includes(action",{"_index":668,"title":{},"body":{"classes/BaseAclService.html":{}}}],["aclrule.actions.includes(action.manage",{"_index":669,"title":{},"body":{"classes/BaseAclService.html":{}}}],["aclrule.rulecallback",{"_index":672,"title":{},"body":{"classes/BaseAclService.html":{}}}],["aclrule.rulecallback(resource",{"_index":674,"title":{},"body":{"classes/BaseAclService.html":{}}}],["aclrules",{"_index":634,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["aclrules.foreach((aclrule",{"_index":666,"title":{},"body":{"classes/BaseAclService.html":{}}}],["action",{"_index":9,"title":{},"body":{"interfaces/Actor.html":{},"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["action.constant",{"_index":652,"title":{},"body":{"classes/BaseAclService.html":{}}}],["action.manage",{"_index":1853,"title":{},"body":{"injectables/UserAclService.html":{}}}],["action.read",{"_index":1857,"title":{},"body":{"injectables/UserAclService.html":{}}}],["action.update",{"_index":1858,"title":{},"body":{"injectables/UserAclService.html":{}}}],["actions",{"_index":647,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["actor",{"_index":1,"title":{"interfaces/Actor.html":{}},"body":{"interfaces/Actor.html":{},"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"coverage.html":{}}}],["actor.constant",{"_index":653,"title":{},"body":{"classes/BaseAclService.html":{}}}],["actor.id",{"_index":1861,"title":{},"body":{"injectables/UserAclService.html":{}}}],["actor.roles.foreach((actorrole",{"_index":657,"title":{},"body":{"classes/BaseAclService.html":{}}}],["actorrole",{"_index":663,"title":{},"body":{"classes/BaseAclService.html":{}}}],["add",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["added",{"_index":217,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["addevent",{"_index":1005,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["addevent(ctx",{"_index":1010,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["additional",{"_index":215,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["additionalinfo",{"_index":609,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["addnews",{"_index":1318,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["addnews(ctx",{"_index":1323,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["addopportunity",{"_index":1473,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["addopportunity(ctx",{"_index":1475,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["addopportutnity",{"_index":1411,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["addopportutnity(ctx",{"_index":1416,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["addorg",{"_index":1500,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["addorg(ctx",{"_index":1505,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["addorganization",{"_index":1559,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["addorganization(ctx",{"_index":1562,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["address",{"_index":748,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["addressinput",{"_index":72,"title":{"classes/AddressInput.html":{}},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["addressresponse",{"_index":89,"title":{"classes/AddressResponse.html":{}},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["addtag",{"_index":1684,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["addtag(ctx",{"_index":1687,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["addtagdto",{"_index":24,"title":{"classes/AddTagDto.html":{}},"body":{"classes/AddTagDto.html":{},"controllers/TagController.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["admin",{"_index":238,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AuthService.html":{},"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateNewsDto.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["admin'})@isstring()@expose",{"_index":1359,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["admin'})@isstring()@isoptional",{"_index":1784,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["adminanalyticsoutput",{"_index":96,"title":{"classes/AdminAnalyticsOutput.html":{}},"body":{"classes/AdminAnalyticsOutput.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"coverage.html":{}}}],["algorithm",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{}}}],["algorithms",{"_index":1252,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["alias",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2115,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":110,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["allowed",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":658,"title":{},"body":{"classes/BaseAclService.html":{}}}],["analytics",{"_index":98,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"coverage.html":{}}}],["analytics/analytics.module",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["analyticscontroller",{"_index":229,"title":{"controllers/AnalyticsController.html":{}},"body":{"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"coverage.html":{}}}],["analyticsmodule",{"_index":285,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["analyticsservice",{"_index":271,"title":{"injectables/AnalyticsService.html":{}},"body":{"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"coverage.html":{},"overview.html":{}}}],["api",{"_index":256,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"controllers/EventsController.html":{},"classes/ImagekitApiResponse.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api'})@apiresponse({status",{"_index":436,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["api.exception",{"_index":145,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["api.exception.ts",{"_index":733,"title":{},"body":{"classes/BaseApiException.html":{},"coverage.html":{}}}],["api.exception.ts:4",{"_index":736,"title":{},"body":{"classes/BaseApiException.html":{}}}],["api.exception.ts:5",{"_index":735,"title":{},"body":{"classes/BaseApiException.html":{}}}],["apibearerauth",{"_index":1031,"title":{},"body":{"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":249,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":59,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["apiproperty()@expose",{"_index":1923,"title":{},"body":{"classes/UserOutput.html":{}}}],["apiproperty()@isarray()@arraynotempty()@isenum(role",{"_index":947,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apiproperty()@isboolean",{"_index":941,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apiproperty()@isnotempty()@isemail()@maxlength(100",{"_index":939,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{}}}],["apiproperty()@isnotempty()@isstring()@length(6",{"_index":944,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apiproperty()@isnotempty()@length(6",{"_index":949,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{}}}],["apiproperty()@isnotempty()@maxlength(100)@isstring",{"_index":1610,"title":{},"body":{"classes/RegisterInput.html":{}}}],["apiproperty()@isoptional()@isarray",{"_index":1469,"title":{},"body":{"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{}}}],["apiproperty()@isoptional()@isstring",{"_index":1069,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{}}}],["apiproperty()@maxlength(200)@isstring",{"_index":1615,"title":{},"body":{"classes/RegisterInput.html":{}}}],["apiproperty({description",{"_index":37,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/GalleryInput.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["apiproperty({required",{"_index":1066,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{}}}],["apiproperty({type",{"_index":678,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["apipropertyoptional",{"_index":60,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterInput.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{}}}],["apipropertyoptional()@isoptional()@isnotempty()@isstring",{"_index":942,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["apipropertyoptional()@isoptional()@isnotempty()@length(6",{"_index":1834,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apipropertyoptional()@isoptional()@isnotempty()@maxlength(100)@isstring",{"_index":1833,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["apipropertyoptional()@isoptional()@isstring",{"_index":1723,"title":{},"body":{"classes/TagSearchInput.html":{}}}],["apipropertyoptional({description",{"_index":79,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["apipropertyoptional({type",{"_index":681,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["apipropertytype",{"_index":695,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apiquery",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiresponse",{"_index":250,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apiresponseof${typename.replace",{"_index":722,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["apisortingquery",{"_index":2013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":251,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apitags(\"analytics",{"_index":273,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["apitags(\"events",{"_index":1037,"title":{},"body":{"controllers/EventsController.html":{}}}],["apitags(\"imagekit",{"_index":1176,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["apitags(\"news",{"_index":1337,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags(\"opportunities",{"_index":1429,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["apitags(\"organizations",{"_index":1518,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apitags(\"tags",{"_index":1699,"title":{},"body":{"controllers/TagController.html":{}}}],["apitags(\"users",{"_index":1893,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('auth",{"_index":466,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":350,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["app.controller",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":345,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_env",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_filter",{"_index":1666,"title":{},"body":{"modules/SharedModule.html":{}}}],["app_interceptor",{"_index":1667,"title":{},"body":{"modules/SharedModule.html":{}}}],["app_port",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":339,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicationdeadline",{"_index":872,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["appliedfiltersinput",{"_index":1098,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["applogger",{"_index":121,"title":{"injectables/AppLogger.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["apploggermodule",{"_index":391,"title":{"modules/AppLoggerModule.html":{}},"body":{"modules/AppLoggerModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["applydecorators",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applyfilters",{"_index":1087,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":397,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":344,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arguments",{"_index":1234,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["argumentshost",{"_index":130,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array",{"_index":723,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(type",{"_index":715,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["arraynotempty",{"_index":952,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["article",{"_index":858,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["article'})@isstring()@expose",{"_index":1369,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["article'})@isstring()@isoptional",{"_index":1788,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["article'})@isurl",{"_index":838,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["asdasd",{"_index":932,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["asdasd'})@expose",{"_index":1158,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/OrganizationResponseDto.html":{}}}],["assigns",{"_index":1256,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["async",{"_index":233,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["at'})@expose",{"_index":1361,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["at'})@isoptional()@expose",{"_index":1363,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["auth",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/variables.html":{}}}],["auth.guard",{"_index":463,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":1211,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":1217,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:22",{"_index":1220,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.strategy",{"_index":508,"title":{},"body":{"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{}}}],["auth.strategy.ts",{"_index":1237,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"coverage.html":{}}}],["auth.strategy.ts:14",{"_index":1241,"title":{},"body":{"injectables/JwtAuthStrategy.html":{}}}],["auth.strategy.ts:27",{"_index":1243,"title":{},"body":{"injectables/JwtAuthStrategy.html":{}}}],["auth/auth.module",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/constants/role.constant",{"_index":19,"title":{},"body":{"interfaces/Actor.html":{},"classes/BaseAclService.html":{},"classes/CreateUserInput.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{}}}],["auth/decorators/role.decorator",{"_index":1889,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/dtos/auth",{"_index":266,"title":{},"body":{"controllers/AnalyticsController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["auth/guards/jwt",{"_index":1033,"title":{},"body":{"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["auth/guards/roles.guard",{"_index":1890,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/strategies/jwt",{"_index":1062,"title":{},"body":{"modules/EventsModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{}}}],["authcontroller",{"_index":426,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":1224,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard",{"_index":1222,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard(strategy_jwt_auth",{"_index":1212,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(strategy_jwt_refresh",{"_index":1261,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["authguard(strategy_local",{"_index":1270,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":401,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":464,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":476,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authtokenapiresponse",{"_index":587,"title":{"classes/AuthTokenApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authtokenoutput",{"_index":457,"title":{"classes/AuthTokenOutput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":1253,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["availablefilters",{"_index":1099,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["availablefilters[key",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avoid",{"_index":2092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["avoids",{"_index":709,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["await",{"_index":282,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":2102,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backward",{"_index":691,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["banner",{"_index":767,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["banner.jpg",{"_index":822,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["banner.jpg'})@expose",{"_index":1538,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["banner.jpg'})@isoptional()@isstring",{"_index":773,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["banner.jpg'})@isstring",{"_index":834,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["banner.jpg'})@isstring()@expose",{"_index":968,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["banner.jpg'})@isstring()@isoptional",{"_index":877,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["bannerimageid",{"_index":749,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["bannerimageurl",{"_index":750,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["base",{"_index":603,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiException.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["baseaclservice",{"_index":631,"title":{"classes/BaseAclService.html":{}},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"coverage.html":{}}}],["baseaclservice:10",{"_index":1847,"title":{},"body":{"injectables/UserAclService.html":{}}}],["baseaclservice:15",{"_index":1846,"title":{},"body":{"injectables/UserAclService.html":{}}}],["baseaclservice:28",{"_index":1848,"title":{},"body":{"injectables/UserAclService.html":{}}}],["baseapierrorobject",{"_index":675,"title":{"classes/BaseApiErrorObject.html":{}},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{}}}],["baseapierrorresponse",{"_index":252,"title":{"classes/BaseApiErrorResponse.html":{}},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"interfaces/TypeMapping.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["baseapierrorresponse})@httpcode(httpstatus.ok)@useguards(jwtrefreshguard)@useinterceptors(classserializerinterceptor",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{}}}],["baseapierrorresponse})@httpcode(httpstatus.ok)@useguards(localauthguard)@useinterceptors(classserializerinterceptor",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{}}}],["baseapierrorresponse})@useguards(jwtauthguard",{"_index":1880,"title":{},"body":{"controllers/UserController.html":{}}}],["baseapierrorresponse})@useinterceptors(classserializerinterceptor",{"_index":1887,"title":{},"body":{"controllers/UserController.html":{}}}],["baseapiexception",{"_index":143,"title":{"classes/BaseApiException.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiException.html":{},"coverage.html":{}}}],["baseapiexception.name",{"_index":741,"title":{},"body":{"classes/BaseApiException.html":{}}}],["baseapiresponse",{"_index":253,"title":{"classes/BaseApiResponse.html":{}},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"interfaces/TypeMapping.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["based",{"_index":176,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["bcrypt",{"_index":1947,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["being",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["below",{"_index":186,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["body",{"_index":243,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":35,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"guards/RolesGuard.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":290,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["boundary",{"_index":1232,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["breakthrough",{"_index":854,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["breakthrough'})@isstring",{"_index":848,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["breakthrough'})@isstring()@expose",{"_index":1378,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["breakthrough'})@isstring()@isoptional",{"_index":1797,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["browse",{"_index":2106,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2103,"title":{},"body":{"modules.html":{}}}],["by'})@isstring",{"_index":779,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{}}}],["by'})@isstring()@expose",{"_index":972,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["by'})@isstring()@isoptional",{"_index":1758,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["call",{"_index":1226,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["callback",{"_index":671,"title":{},"body":{"classes/BaseAclService.html":{},"miscellaneous/typealiases.html":{}}}],["called",{"_index":327,"title":{},"body":{"injectables/AnalyticsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["callhandler",{"_index":1294,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calling",{"_index":737,"title":{},"body":{"classes/BaseApiException.html":{}}}],["canactivate",{"_index":1213,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":1215,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"guards/RolesGuard.html":{}}}],["cando",{"_index":636,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["cando(role",{"_index":646,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["candoaction",{"_index":655,"title":{},"body":{"classes/BaseAclService.html":{}}}],["case",{"_index":189,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{}}}],["cases",{"_index":187,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exception",{"_index":127,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["categories",{"_index":207,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["change",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["characters",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chaudhary",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":213,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":74,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{}}}],["class",{"_index":23,"title":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{}},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":25,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"overview.html":{}}}],["classname",{"_index":721,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["classserializerinterceptor",{"_index":244,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["clgf7xhig0000qof3m53ibdz1",{"_index":863,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["clgf7xhig0000qof3m53ibdz1'})@isstring()@expose",{"_index":1365,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["cluster_analyticsmodule",{"_index":293,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_exports",{"_index":295,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_imports",{"_index":296,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_providers",{"_index":294,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_apploggermodule",{"_index":392,"title":{},"body":{"modules/AppLoggerModule.html":{},"overview.html":{}}}],["cluster_apploggermodule_exports",{"_index":394,"title":{},"body":{"modules/AppLoggerModule.html":{},"overview.html":{}}}],["cluster_apploggermodule_providers",{"_index":393,"title":{},"body":{"modules/AppLoggerModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":494,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":496,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":495,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":1058,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":1059,"title":{},"body":{"modules/EventsModule.html":{}}}],["cluster_eventsmodule_providers",{"_index":1060,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_imagekitmodule",{"_index":1184,"title":{},"body":{"modules/ImagekitModule.html":{},"overview.html":{}}}],["cluster_imagekitmodule_imports",{"_index":1186,"title":{},"body":{"modules/ImagekitModule.html":{}}}],["cluster_imagekitmodule_providers",{"_index":1185,"title":{},"body":{"modules/ImagekitModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1352,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1354,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1353,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_opportunitymodule",{"_index":1444,"title":{},"body":{"modules/OpportunityModule.html":{},"overview.html":{}}}],["cluster_opportunitymodule_imports",{"_index":1446,"title":{},"body":{"modules/OpportunityModule.html":{}}}],["cluster_opportunitymodule_providers",{"_index":1445,"title":{},"body":{"modules/OpportunityModule.html":{},"overview.html":{}}}],["cluster_organizationmodule",{"_index":1530,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_exports",{"_index":1533,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_imports",{"_index":1531,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["cluster_organizationmodule_providers",{"_index":1532,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1660,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1663,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1662,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sharedmodule_providers",{"_index":1661,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":1729,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_exports",{"_index":1730,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_imports",{"_index":1731,"title":{},"body":{"modules/TagsModule.html":{}}}],["cluster_tagsmodule_providers",{"_index":1732,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1915,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1917,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1916,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1918,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cm92hbrpe00049kz8bwoaz1rh",{"_index":900,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["cm92hbrpe00049kz8bwoaz1rh'})@isstring()@expose",{"_index":1458,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["cms",{"_index":2113,"title":{},"body":{"properties.html":{}}}],["code",{"_index":920,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["company",{"_index":821,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["company'})@expose",{"_index":1540,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["company'})@isstring",{"_index":785,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{}}}],["company'})@isstring()@expose",{"_index":976,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["company'})@isstring()@isoptional",{"_index":1761,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["compare",{"_index":1945,"title":{},"body":{"injectables/UserService.html":{}}}],["compare(pass",{"_index":1952,"title":{},"body":{"injectables/UserService.html":{}}}],["compatibility",{"_index":692,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["compatible",{"_index":708,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["completed",{"_index":1310,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["conditions",{"_index":2089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["config",{"_index":126,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":1665,"title":{},"body":{"modules/SharedModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":1675,"title":{},"body":{"modules/SharedModule.html":{}}}],["configmoduleoptions",{"_index":1668,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configs/module",{"_index":1669,"title":{},"body":{"modules/SharedModule.html":{}}}],["configservice",{"_index":119,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["configservice.get(\"jwt.publickey",{"_index":1251,"title":{},"body":{"injectables/JwtAuthStrategy.html":{}}}],["configservice.get('jwt.privatekey",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt.publickey",{"_index":516,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["configuration",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":1280,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["connect",{"_index":1119,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["console.log(\"==tags",{"_index":1745,"title":{},"body":{"injectables/TagsService.html":{}}}],["console.log(\"body",{"_index":1056,"title":{},"body":{"controllers/EventsController.html":{}}}],["console.log(\"res",{"_index":333,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["console.log(\"super",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":152,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":142,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constants/role.constant",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"guards/RolesGuard.html":{}}}],["constants/strategy.constant",{"_index":505,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["constructor",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseApiException.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(applogger",{"_index":1291,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["constructor(authservice",{"_index":1274,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(config",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(configservice",{"_index":1197,"title":{},"body":{"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["constructor(logger",{"_index":309,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AppService.html":{},"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["constructor(message",{"_index":734,"title":{},"body":{"classes/BaseApiException.html":{}}}],["constructor(private",{"_index":423,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{}}}],["constructor(reflector",{"_index":1645,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(userservice",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["contact",{"_index":775,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["contact@techinnovations.com",{"_index":928,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["contact@techinnovations.com'})@expose",{"_index":1542,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["contact@techinnovations.com'})@isemail",{"_index":910,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["contact@techinnovations.com'})@isemail()@isoptional",{"_index":1820,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["contactemail",{"_index":751,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["contains",{"_index":1105,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["context",{"_index":124,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.decorator",{"_index":262,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["context.decorator.ts",{"_index":2031,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.dto",{"_index":264,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["context.dto.ts",{"_index":1628,"title":{},"body":{"classes/RequestContext.html":{},"coverage.html":{}}}],["context.dto.ts:11",{"_index":1633,"title":{},"body":{"classes/RequestContext.html":{}}}],["context.dto.ts:4",{"_index":1631,"title":{},"body":{"classes/RequestContext.html":{}}}],["context.dto.ts:6",{"_index":1632,"title":{},"body":{"classes/RequestContext.html":{}}}],["context.dto.ts:8",{"_index":1630,"title":{},"body":{"classes/RequestContext.html":{}}}],["context.getclass",{"_index":1655,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1654,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1300,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getresponse",{"_index":1305,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["context/req",{"_index":261,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context/request",{"_index":263,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RequestContext.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["context/util",{"_index":148,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{}}}],["context/util/index.ts",{"_index":2032,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["contextname",{"_index":386,"title":{},"body":{"injectables/AppLogger.html":{}}}],["contributed",{"_index":778,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["contributedby",{"_index":752,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["controller",{"_index":228,"title":{"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller(\"analytics",{"_index":274,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["controller(\"events",{"_index":1038,"title":{},"body":{"controllers/EventsController.html":{}}}],["controller(\"imagekit",{"_index":1177,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["controller(\"news",{"_index":1338,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller(\"opportunities",{"_index":1430,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["controller(\"organizations",{"_index":1519,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["controller(\"tags",{"_index":1700,"title":{},"body":{"controllers/TagController.html":{}}}],["controller(\"users",{"_index":1894,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('auth",{"_index":467,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":230,"title":{},"body":{"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"controllers/TagController.html":{},"modules/TagsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controllers/analytics.controller",{"_index":304,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["controllers/auth.controller",{"_index":506,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers/events.controller",{"_index":1063,"title":{},"body":{"modules/EventsModule.html":{}}}],["controllers/news.controller",{"_index":1356,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers/opportunities.controller",{"_index":1448,"title":{},"body":{"modules/OpportunityModule.html":{}}}],["controllers/organization.controller",{"_index":1535,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["controllers/tags.controller",{"_index":1734,"title":{},"body":{"modules/TagsModule.html":{}}}],["controllers/user.controller",{"_index":1920,"title":{},"body":{"modules/UserModule.html":{}}}],["cost",{"_index":753,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["count",{"_index":608,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/ImagekitApiResponse.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["country",{"_index":75,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["coverage",{"_index":1964,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":642,"title":{},"body":{"classes/BaseAclService.html":{},"classes/CreateUserInput.html":{},"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/UserAclService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["created",{"_index":864,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["createdat",{"_index":865,"title":{},"body":{"classes/CreateNewsDto.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"injectables/TagsService.html":{},"classes/UpdateNewsDto.html":{},"classes/UserOutput.html":{}}}],["createeventdto",{"_index":746,"title":{"classes/CreateEventDto.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["createlogger",{"_index":378,"title":{},"body":{"injectables/AppLogger.html":{}}}],["createnewsdto",{"_index":828,"title":{"classes/CreateNewsDto.html":{}},"body":{"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/UpdateNewsDto.html":{},"coverage.html":{}}}],["createopportunitydto",{"_index":870,"title":{"classes/CreateOpportunityDto.html":{}},"body":{"classes/CreateOpportunityDto.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/UpdateOpportunityDto.html":{},"coverage.html":{}}}],["createorganizationdto",{"_index":902,"title":{"classes/CreateOrganizationDto.html":{}},"body":{"classes/CreateOrganizationDto.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrequestcontext",{"_index":147,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrequestcontext(req",{"_index":167,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["createrequestcontext(request",{"_index":1285,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":1254,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["createsearchkey",{"_index":1092,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createsearchkey(string(filter",{"_index":1102,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["createuser",{"_index":1927,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(ctx",{"_index":1933,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserinput",{"_index":934,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creation",{"_index":193,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["credential",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{}}}],["ctx",{"_index":153,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ctx!.user!.id",{"_index":1397,"title":{},"body":{"injectables/NewsService.html":{}}}],["ctx.getrequest",{"_index":156,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":158,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.user",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx.user!.id",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["current",{"_index":2094,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custom",{"_index":670,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"miscellaneous/typealiases.html":{}}}],["customapiresponse",{"_index":724,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["customdecorator",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard",{"_index":239,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["dashboard')@apioperation({summary",{"_index":237,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["data",{"_index":278,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/ImagekitApiResponse.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["data'})@apiresponse({status",{"_index":240,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["database_url",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":799,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["date'})@expose",{"_index":1371,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["date'})@isoptional",{"_index":1790,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["date().toisostring",{"_index":163,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{}}}],["date(payload.publisheddate).getfullyear().tostring",{"_index":1398,"title":{},"body":{"injectables/NewsService.html":{}}}],["date.now",{"_index":1303,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["debug",{"_index":353,"title":{},"body":{"injectables/AppLogger.html":{}}}],["debug(ctx",{"_index":360,"title":{},"body":{"injectables/AppLogger.html":{}}}],["declarations",{"_index":289,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":728,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["decorators",{"_index":36,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{}}}],["decorators/role.decorator",{"_index":1651,"title":{},"body":{"guards/RolesGuard.html":{}}}],["default",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiResponse.html":{},"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterInput.html":{},"classes/TagSearchInput.html":{},"injectables/UserAclService.html":{},"miscellaneous/variables.html":{}}}],["default(\"development",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":1071,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{}}}],["defaultstrategy",{"_index":512,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":44,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{}}}],["definition",{"_index":694,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/typealiases.html":{}}}],["delete",{"_index":1015,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"miscellaneous/enumerations.html":{}}}],["delete(\"/:id",{"_index":1051,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["deleted",{"_index":868,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["deletedat",{"_index":869,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateNewsDto.html":{}}}],["deleteevent",{"_index":1006,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["deleteevent(ctx",{"_index":1013,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["deletemany",{"_index":1131,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["deletenews",{"_index":1319,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["deletenews(ctx",{"_index":1325,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["deleteopportunity",{"_index":1412,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["deleteopportunity(ctx",{"_index":1418,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["deleteorganization",{"_index":1501,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["deleteorganization(ctx",{"_index":1507,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["dependencies",{"_index":287,"title":{"dependencies.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1112,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["desc\").required",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":173,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["development",{"_index":226,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["dictionary",{"_index":698,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["direction",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":485,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["disabled",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["discuss",{"_index":1634,"title":{},"body":{"classes/RequestContext.html":{}}}],["documentation",{"_index":1965,"title":{},"body":{"coverage.html":{}}}],["draft",{"_index":827,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["dto/events.dto",{"_index":1036,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["dto/news.dto",{"_index":1336,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["dto/opportunities.dto",{"_index":1428,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["dto/organization.dto",{"_index":1517,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["dto/tags",{"_index":1698,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["dtos/admin",{"_index":269,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{}}}],["dtos/auth",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["dtos/user",{"_index":1891,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["duration",{"_index":873,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["each",{"_index":664,"title":{},"body":{"classes/BaseAclService.html":{},"classes/CreateEventDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["elments",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elsewhere",{"_index":1133,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["email",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/LocalStrategy.html":{},"classes/LoginInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":1128,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"miscellaneous/functions.html":{}}}],["endpoint",{"_index":1163,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"controllers/UserController.html":{}}}],["endpoint'})@expose",{"_index":1189,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["ensures",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2070,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":1221,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["error",{"_index":192,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["error('resource",{"_index":673,"title":{},"body":{"classes/BaseAclService.html":{}}}],["error(ctx",{"_index":363,"title":{},"body":{"injectables/AppLogger.html":{}}}],["error.message",{"_index":219,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["errorname",{"_index":171,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["eslint",{"_index":484,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["eslint/explicit",{"_index":1231,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["eslint/no",{"_index":489,"title":{},"body":{"controllers/AuthController.html":{}}}],["establish",{"_index":1228,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["event",{"_index":39,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AuthTokenApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/typealiases.html":{}}}],["event.id",{"_index":1124,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventapiresponse",{"_index":614,"title":{"classes/EventApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventarrayapiresponse",{"_index":615,"title":{"classes/EventArrayApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventcount",{"_index":100,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"injectables/AnalyticsService.html":{},"injectables/EventsService.html":{}}}],["eventgallery",{"_index":826,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{}}}],["eventresponsedto",{"_index":595,"title":{"classes/EventResponseDto.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":1004,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["events/dto/events.dto",{"_index":596,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["events/events.module",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["eventscontroller",{"_index":1002,"title":{"controllers/EventsController.html":{}},"body":{"controllers/EventsController.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["eventsmodule",{"_index":402,"title":{"modules/EventsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventssearchinput",{"_index":819,"title":{"classes/EventsSearchInput.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["eventsservice",{"_index":1034,"title":{"injectables/EventsService.html":{}},"body":{"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"coverage.html":{},"overview.html":{}}}],["eventupdate",{"_index":1125,"title":{},"body":{"injectables/EventsService.html":{}}}],["example",{"_index":40,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterOutput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["except",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exception",{"_index":132,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiException.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["exception.constructor.name",{"_index":196,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.details",{"_index":200,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getresponse",{"_index":201,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":195,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.localizedmessage",{"_index":198,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.localizedmessage[acceptedlanguage",{"_index":199,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message",{"_index":197,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.stack",{"_index":202,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter",{"_index":1672,"title":{},"body":{"modules/SharedModule.html":{}}}],["exceptions.filter.ts",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:17",{"_index":122,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:26",{"_index":131,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions/base",{"_index":144,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["excludeextraneousvalues",{"_index":338,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["executioncontext",{"_index":1216,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":1961,"title":{},"body":{"injectables/UserService.html":{}}}],["expire",{"_index":1151,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["expiresin",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiry",{"_index":1153,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["explode",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":292,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["expose",{"_index":87,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenOutput.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["expose()@apiproperty",{"_index":104,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenOutput.html":{},"classes/RegisterOutput.html":{},"classes/UserOutput.html":{}}}],["expose()@apiproperty({example",{"_index":1623,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["express",{"_index":140,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["extends",{"_index":71,"title":{},"body":{"classes/AddTagDto.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/PrismaService.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"injectables/UserAclService.html":{}}}],["extractjwt",{"_index":1244,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1249,"title":{},"body":{"injectables/JwtAuthStrategy.html":{}}}],["extractjwt.frombodyfield('refreshtoken",{"_index":1268,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["false",{"_index":41,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseAclService.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/variables.html":{}}}],["false})@expose",{"_index":978,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OrganizationResponseDto.html":{}}}],["false})@isoptional",{"_index":803,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["false})@isoptional()@expose",{"_index":994,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["false})@isoptional()@isboolean",{"_index":43,"title":{},"body":{"classes/AddTagDto.html":{}}}],["false})@isoptional()@isemail",{"_index":776,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["false})@isoptional()@isemail()@expose",{"_index":970,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["false})@isoptional()@isstring",{"_index":781,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["false})@isoptional()@isstring()@expose",{"_index":974,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["false})@isstring()@expose",{"_index":991,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["false})@isstring()@isoptional",{"_index":769,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["false})@isstring()@isoptional()@expose",{"_index":966,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["falsy",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fellows",{"_index":893,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":1100,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["filter.filter",{"_index":1089,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["filter.filter.ts",{"_index":2018,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filters/all",{"_index":1671,"title":{},"body":{"modules/SharedModule.html":{}}}],["find",{"_index":659,"title":{},"body":{"classes/BaseAclService.html":{}}}],["findbyid",{"_index":1928,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(ctx",{"_index":1935,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusername",{"_index":1929,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusername(ctx",{"_index":1937,"title":{},"body":{"injectables/UserService.html":{}}}],["folder",{"_index":1165,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{}}}],["folder'})@expose",{"_index":1191,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["foractor",{"_index":635,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["format",{"_index":754,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["format'})@isstring",{"_index":884,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["forwarded",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarded_for_token_header",{"_index":2003,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":1116,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/UserService.html":{}}}],["full",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullname",{"_index":624,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/variables.html":{}}}],["fulltextoperatormap",{"_index":2034,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fulltextoperatormap[operator",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":696,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["function).name",{"_index":718,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["functions",{"_index":2076,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gallery",{"_index":755,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["galleryinput",{"_index":789,"title":{"classes/GalleryInput.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["galleryresponse",{"_index":817,"title":{"classes/GalleryResponse.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["gender",{"_index":627,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/variables.html":{}}}],["generation",{"_index":713,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["generic",{"_index":704,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["generics",{"_index":711,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["get(\"/:id",{"_index":1047,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["get(\"/:type",{"_index":1705,"title":{},"body":{"controllers/TagController.html":{}}}],["get(\"/admin",{"_index":276,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["get(\":id",{"_index":1908,"title":{},"body":{"controllers/UserController.html":{}}}],["get(\"me",{"_index":1896,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin",{"_index":236,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["getadminanalytics",{"_index":234,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["getadminanalytics(ctx",{"_index":235,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["getadmindashboardanalytics",{"_index":308,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["getadmindashboardanalytics(ctx",{"_index":312,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["getauthparamas",{"_index":1168,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["getauthparamas(ctx",{"_index":1169,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["getauthparams",{"_index":1196,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["getauthparams(ctx",{"_index":1199,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["getauthtoken",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthtoken(ctx",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["getevents",{"_index":1007,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["getevents(ctx",{"_index":1018,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["gethello",{"_index":341,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello(@reqcontext",{"_index":347,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello(ctx",{"_index":342,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmyprofile",{"_index":1868,"title":{},"body":{"controllers/UserController.html":{}}}],["getmyprofile(ctx",{"_index":1872,"title":{},"body":{"controllers/UserController.html":{}}}],["getnews",{"_index":1320,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["getnews(ctx",{"_index":1328,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["getoneevent",{"_index":1008,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["getoneevent(ctx",{"_index":1022,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["getonenews",{"_index":1321,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["getonenews(ctx",{"_index":1330,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["getoneopportunity",{"_index":1413,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["getoneopportunity(ctx",{"_index":1420,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["getoneorganization",{"_index":1502,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["getoneorganization(ctx",{"_index":1509,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["getopportunities",{"_index":1414,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["getopportunities(ctx",{"_index":1422,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["getorganizations",{"_index":1560,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getorganizations(ctx",{"_index":1566,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getorgs",{"_index":1503,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["getorgs(ctx",{"_index":1511,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["getschemapath",{"_index":688,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["getschemapath(type[0",{"_index":727,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["gettags",{"_index":1685,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["gettags(ctx",{"_index":1690,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["gettagsbytype",{"_index":1736,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettagsbytype(ctx",{"_index":1740,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettagstype",{"_index":1686,"title":{},"body":{"controllers/TagController.html":{}}}],["gettagstype(ctx",{"_index":1692,"title":{},"body":{"controllers/TagController.html":{}}}],["getting",{"_index":2099,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1869,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(ctx",{"_index":1875,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid",{"_index":1930,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(ctx",{"_index":1939,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":1870,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getusers(ctx",{"_index":1878,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["given",{"_index":660,"title":{},"body":{"classes/BaseAclService.html":{}}}],["green",{"_index":892,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["guard",{"_index":1641,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1643,"title":{},"body":{"guards/RolesGuard.html":{}}}],["guards/jwt",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":462,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":1214,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["handlerequest(err",{"_index":1219,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["hasactionpermission",{"_index":667,"title":{},"body":{"classes/BaseAclService.html":{}}}],["hasedpw",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hash",{"_index":1946,"title":{},"body":{"injectables/UserService.html":{}}}],["hash(input.password",{"_index":1963,"title":{},"body":{"injectables/UserService.html":{}}}],["hash(pass",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":179,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hello",{"_index":348,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["here",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["himself",{"_index":1855,"title":{},"body":{"injectables/UserAclService.html":{}}}],["host",{"_index":129,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":154,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":245,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":472,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":134,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiException.html":{}}}],["https://cloud.google.com/apis/design/errors",{"_index":214,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://example.com/news",{"_index":833,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["https://example.com/org",{"_index":772,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["httpstatus",{"_index":135,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["httpstatus.created",{"_index":479,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpstatus.internal_server_error",{"_index":208,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.not_found",{"_index":1909,"title":{},"body":{"controllers/UserController.html":{}}}],["httpstatus.ok",{"_index":280,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["httpstatus.unauthorized",{"_index":471,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["iamges",{"_index":790,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["iapplyfiltersinput",{"_index":2020,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iapplyfiltersoutput",{"_index":2021,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iavailablefilters",{"_index":2022,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iavailablefiltersinput",{"_index":2023,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iavailablefiltersoutput",{"_index":2024,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":12,"title":{},"body":{"interfaces/Actor.html":{},"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["id'})@isstring",{"_index":1139,"title":{},"body":{"classes/GalleryInput.html":{}}}],["id.middleware.ts",{"_index":2029,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["id/request",{"_index":2028,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["idefaultfilters",{"_index":2025,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":1966,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":808,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["ikauthparams",{"_index":1161,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{}}}],["ikconfig",{"_index":1182,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["image",{"_index":768,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["imagekit",{"_index":621,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"dependencies.html":{}}}],["imagekit.controller",{"_index":1188,"title":{},"body":{"modules/ImagekitModule.html":{}}}],["imagekit.dto",{"_index":1173,"title":{},"body":{"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{}}}],["imagekit.service",{"_index":1175,"title":{},"body":{"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{}}}],["imagekit/imagekit.dto",{"_index":602,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["imagekit/imagekit.module",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["imagekit_endpoint",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagekit_pub_key",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagekit_pvt_key",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagekitapiresponse",{"_index":622,"title":{"classes/ImagekitApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imagekitauthparams",{"_index":1149,"title":{"classes/ImagekitAuthParams.html":{}},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"coverage.html":{}}}],["imagekitcontroller",{"_index":1166,"title":{"controllers/ImagekitController.html":{}},"body":{"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"coverage.html":{}}}],["imagekitmodule",{"_index":403,"title":{"modules/ImagekitModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagekitModule.html":{},"modules.html":{},"overview.html":{}}}],["imagekitresponsedto",{"_index":601,"title":{"classes/ImagekitResponseDto.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imagekitservice",{"_index":1174,"title":{"injectables/ImagekitService.html":{}},"body":{"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"injectables/ImagekitService.html":{},"coverage.html":{},"overview.html":{}}}],["implements",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":302,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{}}}],["inc",{"_index":927,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["inc.'})@expose",{"_index":1548,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["inc.'})@isstring",{"_index":917,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["inc.'})@isstring()@isoptional",{"_index":1826,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["include",{"_index":1108,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["incoming",{"_index":2086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1752,"title":{},"body":{"interfaces/TypeMapping.html":{}}}],["indicates",{"_index":38,"title":{},"body":{"classes/AddTagDto.html":{},"classes/TagSearchInput.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{}}}],["inherited",{"_index":1074,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{},"injectables/UserAclService.html":{}}}],["inject",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":305,"title":{"injectables/AnalyticsService.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AnalyticsService.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":306,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["innovations",{"_index":820,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["innovations'})@isstring",{"_index":810,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["innovations'})@isstring()@expose",{"_index":999,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["innovations'})@isstring()@isoptional",{"_index":1779,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["input",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["input.dto",{"_index":268,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["input.dto.ts",{"_index":27,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateUserInput.html":{},"classes/LoginInput.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterInput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["input.dto.ts:14",{"_index":1314,"title":{},"body":{"classes/LoginInput.html":{}}}],["input.dto.ts:16",{"_index":1728,"title":{},"body":{"classes/TagSearchInput.html":{},"classes/UpdateUserInput.html":{}}}],["input.dto.ts:17",{"_index":1611,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:21",{"_index":1727,"title":{},"body":{"classes/TagSearchInput.html":{}}}],["input.dto.ts:22",{"_index":1616,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:23",{"_index":943,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["input.dto.ts:26",{"_index":1726,"title":{},"body":{"classes/TagSearchInput.html":{}}}],["input.dto.ts:28",{"_index":1613,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:29",{"_index":951,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["input.dto.ts:31",{"_index":1724,"title":{},"body":{"classes/TagSearchInput.html":{}}}],["input.dto.ts:34",{"_index":1608,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:35",{"_index":946,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["input.dto.ts:36",{"_index":1725,"title":{},"body":{"classes/TagSearchInput.html":{}}}],["input.dto.ts:37",{"_index":1614,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:38",{"_index":1609,"title":{},"body":{"classes/RegisterInput.html":{}}}],["input.dto.ts:41",{"_index":948,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/TagSearchInput.html":{}}}],["input.dto.ts:47",{"_index":940,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["input.dto.ts:51",{"_index":58,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateUserInput.html":{}}}],["input.dto.ts:60",{"_index":54,"title":{},"body":{"classes/AddTagDto.html":{}}}],["input.dto.ts:69",{"_index":51,"title":{},"body":{"classes/AddTagDto.html":{}}}],["input.dto.ts:7",{"_index":1605,"title":{},"body":{"classes/RefreshTokenInput.html":{}}}],["input.dto.ts:78",{"_index":45,"title":{},"body":{"classes/AddTagDto.html":{}}}],["input.dto.ts:87",{"_index":47,"title":{},"body":{"classes/AddTagDto.html":{}}}],["input.dto.ts:9",{"_index":1312,"title":{},"body":{"classes/LoginInput.html":{}}}],["input.dto.ts:96",{"_index":49,"title":{},"body":{"classes/AddTagDto.html":{}}}],["input.isaccountdisabled",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["input.password",{"_index":1962,"title":{},"body":{"injectables/UserService.html":{}}}],["input.replace(/[^a",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input.roles",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["insensitive",{"_index":1104,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["instanceof",{"_index":194,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["intercept",{"_index":1290,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":1293,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptors/logging.interceptor",{"_index":1673,"title":{},"body":{"modules/SharedModule.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Actor.html":{},"interfaces/TypeMapping.html":{}},"body":{"interfaces/Actor.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Actor.html":{},"interfaces/TypeMapping.html":{},"overview.html":{}}}],["internal",{"_index":203,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["internalexception",{"_index":209,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["invalid",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["ip",{"_index":1629,"title":{},"body":{"classes/RequestContext.html":{}}}],["isaccountdisabled",{"_index":936,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{}}}],["isaccountverified",{"_index":626,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/variables.html":{}}}],["isalphanumeric",{"_index":953,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isarray",{"_index":813,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["isboolean",{"_index":62,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["isboolean()@expose",{"_index":1718,"title":{},"body":{"classes/TagOutputDto.html":{}}}],["isdate",{"_index":850,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateNewsDto.html":{}}}],["isdate()@expose",{"_index":1713,"title":{},"body":{"classes/TagOutputDto.html":{}}}],["isdatestring",{"_index":851,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["isdraft",{"_index":824,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["isemail",{"_index":814,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/LoginInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["isenum",{"_index":954,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isenum(role",{"_index":959,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["iseventtag",{"_index":29,"title":{},"body":{"classes/AddTagDto.html":{},"injectables/EventsService.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{}}}],["isnewstag",{"_index":30,"title":{},"body":{"classes/AddTagDto.html":{},"injectables/NewsService.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{}}}],["isnotempty",{"_index":955,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginInput.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["isnotempty()@apiproperty",{"_index":1604,"title":{},"body":{"classes/RefreshTokenInput.html":{}}}],["isnotempty()@apiproperty()@isemail()@maxlength(200",{"_index":1311,"title":{},"body":{"classes/LoginInput.html":{}}}],["isnotempty()@apiproperty()@isstring",{"_index":1313,"title":{},"body":{"classes/LoginInput.html":{}}}],["isnumber",{"_index":1593,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["isopportunitytag",{"_index":31,"title":{},"body":{"classes/AddTagDto.html":{},"injectables/OpportunityService.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{}}}],["isoptional",{"_index":63,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{}}}],["isoptional()@isdate()@expose",{"_index":1715,"title":{},"body":{"classes/TagOutputDto.html":{}}}],["isorganizationtag",{"_index":32,"title":{},"body":{"classes/AddTagDto.html":{},"injectables/OrganizationService.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{}}}],["ispromood",{"_index":224,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["isstring",{"_index":64,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterInput.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{}}}],["isstring()@expose",{"_index":1717,"title":{},"body":{"classes/TagOutputDto.html":{}}}],["issuperadmin",{"_index":625,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/variables.html":{}}}],["isurl",{"_index":852,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["isuseritself",{"_index":1842,"title":{},"body":{"injectables/UserAclService.html":{}}}],["isuseritself(resource",{"_index":1844,"title":{},"body":{"injectables/UserAclService.html":{}}}],["isusertag",{"_index":33,"title":{},"body":{"classes/AddTagDto.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{}}}],["item",{"_index":1326,"title":{},"body":{"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["item.id",{"_index":1490,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["items",{"_index":725,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"interfaces/TypeMapping.html":{}}}],["ja",{"_index":183,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["joi",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["joi.number().required",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid(\"asc",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(json.stringify(socials",{"_index":1121,"title":{},"body":{"injectables/EventsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["jwt",{"_index":1246,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_access_token_exp_in_sec",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_private_key_base64",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_public_key_base64",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_refresh_token_exp_in_sec",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":1032,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtauthstrategy",{"_index":497,"title":{"injectables/JwtAuthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"modules/EventsModule.html":{},"injectables/JwtAuthStrategy.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":1248,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["jwtmodule",{"_index":501,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":513,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":458,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["jwtrefreshstrategy",{"_index":498,"title":{"injectables/JwtRefreshStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":315,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{}}}],["keeping",{"_index":690,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["key",{"_index":702,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":1617,"title":{},"body":{"classes/RegisterInput.html":{}}}],["kumar",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["language",{"_index":177,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["later",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["leading",{"_index":783,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["legend",{"_index":288,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":956,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["length(6",{"_index":958,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["level",{"_index":2091,"title":{},"body":{"miscellaneous/functions.html":{}}}],["limit",{"_index":1064,"title":{},"body":{"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["line",{"_index":487,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["link",{"_index":801,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{}}}],["list",{"_index":1879,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["literal",{"_index":2120,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":1278,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["localauthguard",{"_index":461,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localized",{"_index":181,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["localizedmessage",{"_index":184,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["localstrategy",{"_index":499,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":756,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["location'})@isstring",{"_index":794,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{}}}],["location'})@isstring()@expose",{"_index":986,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["location'})@isstring()@isoptional",{"_index":1768,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["locationtype",{"_index":757,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["log",{"_index":354,"title":{},"body":{"injectables/AppLogger.html":{}}}],["log(ctx",{"_index":365,"title":{},"body":{"injectables/AppLogger.html":{}}}],["logger",{"_index":120,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logger.service",{"_index":396,"title":{},"body":{"modules/AppLoggerModule.html":{}}}],["logger/logger.module",{"_index":1674,"title":{},"body":{"modules/SharedModule.html":{}}}],["logger/logger.service",{"_index":146,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["logging",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["logginginterceptor",{"_index":1288,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["logic",{"_index":1225,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["login",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginInput.html":{},"coverage.html":{}}}],["login(ctx",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logininput",{"_index":434,"title":{"classes/LoginInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginInput.html":{},"coverage.html":{}}}],["logo",{"_index":913,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["logo.jpg",{"_index":930,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["logo.jpg'})@expose",{"_index":1546,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["logo.jpg'})@isstring",{"_index":915,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["logo.jpg'})@isstring()@isoptional",{"_index":1824,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["logoimageid",{"_index":904,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["logoimageurl",{"_index":905,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["made",{"_index":1906,"title":{},"body":{"controllers/UserController.html":{}}}],["make",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["male",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manage",{"_index":2074,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["management",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapping",{"_index":697,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["maps",{"_index":699,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["match",{"_index":205,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/UserService.html":{}}}],["matching",{"_index":22,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":957,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["maxlength(100",{"_index":960,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{}}}],["maxlength(200",{"_index":1315,"title":{},"body":{"classes/LoginInput.html":{},"classes/RegisterInput.html":{}}}],["maybe",{"_index":1132,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["merges",{"_index":2087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mergewithand",{"_index":2019,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mergewithand(current",{"_index":2085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mergewithand(wherebuilder",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":172,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["meta",{"_index":216,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"controllers/EventsController.html":{},"classes/ImagekitApiResponse.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":604,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"dependencies.html":{}}}],["method",{"_index":1255,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{}}}],["methods",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["min",{"_index":1594,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["min(0",{"_index":1595,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["miscellaneous",{"_index":2069,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1955,"title":{},"body":{"injectables/UserService.html":{}}}],["mode",{"_index":223,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateNewsDto.html":{},"injectables/EventsService.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"classes/UpdateNewsDto.html":{}}}],["module",{"_index":284,"title":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["module/prisma.service",{"_index":323,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"modules/SharedModule.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["module/prisma.service.ts",{"_index":1599,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["module/prisma.service.ts:6",{"_index":1602,"title":{},"body":{"injectables/PrismaService.html":{}}}],["modules",{"_index":286,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["move",{"_index":1637,"title":{},"body":{"classes/RequestContext.html":{}}}],["mukesh",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mukezhz@gmail.com",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":55,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":700,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["nch",{"_index":2101,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["nchadmin@mailinator.com",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":2096,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestinterceptor",{"_index":1296,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":136,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"controllers/TagController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":137,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1649,"title":{},"body":{"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":316,"title":{},"body":{"injectables/AnalyticsService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":503,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2045,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":61,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"dependencies.html":{}}}],["new",{"_index":162,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/CreateNewsDto.html":{},"injectables/EventsService.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"classes/UpdateNewsDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newref",{"_index":2083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["news",{"_index":46,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateNewsDto.html":{},"miscellaneous/typealiases.html":{}}}],["news.id",{"_index":1401,"title":{},"body":{"injectables/NewsService.html":{}}}],["news/news.module",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["newscontroller",{"_index":1316,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":101,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"injectables/AnalyticsService.html":{},"injectables/NewsService.html":{}}}],["newslink",{"_index":830,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["newsmodule",{"_index":404,"title":{"modules/NewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{}}}],["newsresponsedto",{"_index":862,"title":{"classes/NewsResponseDto.html":{}},"body":{"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/UpdateNewsDto.html":{},"coverage.html":{}}}],["newssearchinput",{"_index":853,"title":{"classes/NewsSearchInput.html":{}},"body":{"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/UpdateNewsDto.html":{},"coverage.html":{}}}],["newsservice",{"_index":1334,"title":{"injectables/NewsService.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"coverage.html":{},"overview.html":{}}}],["next",{"_index":486,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["next.handle().pipe",{"_index":1304,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["non",{"_index":703,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["normal",{"_index":1907,"title":{},"body":{"controllers/UserController.html":{}}}],["notacceptableexception(\"invalid",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notacceptableexception(error.message",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":210,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/UserController.html":{}}}],["notfoundexception",{"_index":1085,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["notfoundexception(\"event",{"_index":1115,"title":{},"body":{"injectables/EventsService.html":{}}}],["notfoundexception(\"news",{"_index":1395,"title":{},"body":{"injectables/NewsService.html":{}}}],["notfoundexception(\"opportunity",{"_index":1485,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["notfoundexception(\"organization",{"_index":1578,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["now",{"_index":1302,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["null",{"_index":366,"title":{},"body":{"injectables/AppLogger.html":{},"classes/AuthTokenOutput.html":{},"injectables/JwtAuthStrategy.html":{},"classes/RequestContext.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":106,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["number})@isnumber()@isoptional()@min(0)@transform",{"_index":1072,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{}}}],["obj",{"_index":2084,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":607,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(customapiresponse",{"_index":729,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["object.entries(appliedfiltersinput",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":1218,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LoggingInterceptor.html":{}}}],["offset",{"_index":1065,"title":{},"body":{"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["oldref",{"_index":2082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["one",{"_index":1016,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["online",{"_index":856,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["online'})@isstring",{"_index":836,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["online'})@isstring()@expose",{"_index":1367,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["online'})@isstring()@isoptional",{"_index":1786,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["onmoduleinit",{"_index":1601,"title":{},"body":{"injectables/PrismaService.html":{}}}],["op",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openapi",{"_index":707,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["operator",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operators",{"_index":2035,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["opportunities",{"_index":1410,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["opportunity",{"_index":48,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AuthTokenApiResponse.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/typealiases.html":{}}}],["opportunity/dto/opportunities.dto",{"_index":600,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["opportunity/opportunities.module",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["opportunityapiresponse",{"_index":618,"title":{"classes/OpportunityApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opportunityarrayapiresponse",{"_index":619,"title":{"classes/OpportunityArrayApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opportunitycontroller",{"_index":1408,"title":{"controllers/OpportunityController.html":{}},"body":{"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"coverage.html":{}}}],["opportunitycount",{"_index":102,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"injectables/AnalyticsService.html":{}}}],["opportunitygallery",{"_index":901,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["opportunitymodule",{"_index":405,"title":{"modules/OpportunityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OpportunityModule.html":{},"modules.html":{},"overview.html":{}}}],["opportunityresponsedto",{"_index":599,"title":{"classes/OpportunityResponseDto.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opportunitysearchinput",{"_index":897,"title":{"classes/OpportunitySearchInput.html":{}},"body":{"classes/CreateOpportunityDto.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/UpdateOpportunityDto.html":{},"coverage.html":{}}}],["opportunityservice",{"_index":1426,"title":{"injectables/OpportunityService.html":{}},"body":{"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"injectables/OpportunityService.html":{},"coverage.html":{},"overview.html":{}}}],["option",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiException.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":1670,"title":{},"body":{"modules/SharedModule.html":{}}}],["options.ts",{"_index":2001,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderby",{"_index":1111,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["org",{"_index":1585,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["org.id",{"_index":1587,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization",{"_index":50,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AuthTokenApiResponse.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/typealiases.html":{}}}],["organization.id",{"_index":1584,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organization/dto/organization.dto",{"_index":598,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["organization/organization.module",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["organizationapiresponse",{"_index":616,"title":{"classes/OrganizationApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationarrayapiresponse",{"_index":617,"title":{"classes/OrganizationArrayApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationcontroller",{"_index":1497,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationcount",{"_index":1573,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["organizationgallery",{"_index":933,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{}}}],["organizationmodule",{"_index":406,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationresponsedto",{"_index":597,"title":{"classes/OrganizationResponseDto.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizations",{"_index":1499,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["organizationsearchinput",{"_index":926,"title":{"classes/OrganizationSearchInput.html":{}},"body":{"classes/CreateOrganizationDto.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["organizationservice",{"_index":1515,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"overview.html":{}}}],["organizer",{"_index":758,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["organizer'})@isstring",{"_index":797,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{}}}],["organizer'})@isstring()@expose",{"_index":989,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["organizer'})@isstring()@isoptional",{"_index":1771,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["orgwherequery",{"_index":1571,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["original",{"_index":221,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["otherwise",{"_index":2095,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":300,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["output.dto",{"_index":270,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["output.dto.ts",{"_index":99,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenOutput.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{}}}],["output.dto.ts:11",{"_index":109,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenOutput.html":{},"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:13",{"_index":1622,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["output.dto.ts:15",{"_index":105,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:16",{"_index":1836,"title":{},"body":{"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:17",{"_index":1626,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["output.dto.ts:19",{"_index":108,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/TagOutputDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:21",{"_index":1624,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["output.dto.ts:22",{"_index":1835,"title":{},"body":{"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:23",{"_index":1719,"title":{},"body":{"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:25",{"_index":1619,"title":{},"body":{"classes/RegisterOutput.html":{},"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:27",{"_index":1720,"title":{},"body":{"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:28",{"_index":1837,"title":{},"body":{"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:29",{"_index":1621,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["output.dto.ts:31",{"_index":1721,"title":{},"body":{"classes/TagOutputDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:33",{"_index":1618,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["output.dto.ts:34",{"_index":1838,"title":{},"body":{"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:35",{"_index":1714,"title":{},"body":{"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:37",{"_index":1625,"title":{},"body":{"classes/RegisterOutput.html":{},"classes/UserAccessTokenClaims.html":{}}}],["output.dto.ts:39",{"_index":1722,"title":{},"body":{"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:41",{"_index":1925,"title":{},"body":{"classes/UserRefreshTokenClaims.html":{}}}],["output.dto.ts:43",{"_index":1924,"title":{},"body":{"classes/UserOutput.html":{}}}],["output.dto.ts:44",{"_index":1716,"title":{},"body":{"classes/TagOutputDto.html":{}}}],["output.dto.ts:7",{"_index":107,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"classes/AuthTokenOutput.html":{},"classes/TagOutputDto.html":{},"classes/UserOutput.html":{}}}],["output.dto.ts:9",{"_index":1620,"title":{},"body":{"classes/RegisterOutput.html":{}}}],["overview",{"_index":2107,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrites",{"_index":2093,"title":{},"body":{"miscellaneous/functions.html":{}}}],["package",{"_index":2040,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginationparamsdto",{"_index":66,"title":{"classes/PaginationParamsDto.html":{}},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["paginationparamsdto:14",{"_index":1075,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{}}}],["paginationparamsdto:24",{"_index":1077,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{}}}],["param",{"_index":1029,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["param(\"id",{"_index":1048,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/UserController.html":{}}}],["param(\"type",{"_index":1706,"title":{},"body":{"controllers/TagController.html":{}}}],["parameter",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":125,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiException.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1179,"title":{},"body":{"controllers/ImagekitController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["params'})@apiresponse({status",{"_index":1171,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["params.decorator.ts",{"_index":2014,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["params.dto",{"_index":68,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"controllers/UserController.html":{}}}],["params.dto.ts",{"_index":1589,"title":{},"body":{"classes/PaginationParamsDto.html":{},"coverage.html":{}}}],["params.dto.ts:14",{"_index":1590,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["params.dto.ts:24",{"_index":1591,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["params.join",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parent",{"_index":738,"title":{},"body":{"classes/BaseApiException.html":{}}}],["parseint(value",{"_index":1596,"title":{},"body":{"classes/PaginationParamsDto.html":{}}}],["pass",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":1245,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":502,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":511,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1238,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1273,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":1279,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":937,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/LocalStrategy.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passwordfield",{"_index":1283,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":1030,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["patch(\"/:id",{"_index":1054,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["patch(\":id",{"_index":1912,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":1886,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":159,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["payload",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["payload.sub",{"_index":1259,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["perfoming",{"_index":8,"title":{},"body":{"interfaces/Actor.html":{}}}],["perform",{"_index":645,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["permission",{"_index":665,"title":{},"body":{"classes/BaseAclService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionactions",{"_index":2007,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodule",{"_index":2008,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissions",{"_index":2006,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["phone",{"_index":919,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{}}}],["phonecountrycode",{"_index":628,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["phonenumber",{"_index":629,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["plaintoclass",{"_index":317,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["plaintoclass(authtokenoutput",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["plaintoclass(eventresponsedto",{"_index":1122,"title":{},"body":{"injectables/EventsService.html":{}}}],["plaintoclass(newsresponsedto",{"_index":1399,"title":{},"body":{"injectables/NewsService.html":{}}}],["plaintoclass(opportunityresponsedto",{"_index":1488,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["plaintoclass(organizationresponsedto",{"_index":1581,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["plaintoclass(registeroutput",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["plaintoclass(tagoutputdto",{"_index":1751,"title":{},"body":{"injectables/TagsService.html":{}}}],["plaintoclass(useroutput",{"_index":1956,"title":{},"body":{"injectables/UserService.html":{}}}],["plaintoinstance",{"_index":1086,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["plaintoinstance(eventresponsedto",{"_index":1113,"title":{},"body":{"injectables/EventsService.html":{}}}],["plaintoinstance(newsresponsedto",{"_index":1393,"title":{},"body":{"injectables/NewsService.html":{}}}],["plaintoinstance(opportunityresponsedto",{"_index":1483,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["plaintoinstance(organizationresponsedto",{"_index":1575,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["plaintoinstance(tagoutputdto",{"_index":1748,"title":{},"body":{"injectables/TagsService.html":{}}}],["please",{"_index":212,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["portal",{"_index":855,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["portal'})@isstring",{"_index":845,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["portal'})@isstring()@expose",{"_index":1375,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["portal'})@isstring()@isoptional",{"_index":1794,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["post",{"_index":246,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{}}}],["post('login",{"_index":469,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apioperation({summary",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":478,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apioperation({summary",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{}}}],["postcode",{"_index":76,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{}}}],["prefix",{"_index":232,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["prevent",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma",{"_index":1090,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"modules/SharedModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma.user.createmany",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":1091,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":1600,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismaservice",{"_index":310,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AnalyticsService.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"modules/SharedModule.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":149,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["privatekey",{"_index":517,"title":{},"body":{"modules/AuthModule.html":{},"injectables/ImagekitService.html":{}}}],["prod",{"_index":222,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["production",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":898,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{}}}],["program'})@isstring",{"_index":894,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["promise",{"_index":242,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":328,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["proper",{"_index":706,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"injectables/AppLogger.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"properties.html":{}}}],["property",{"_index":693,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":633,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["provide",{"_index":1676,"title":{},"body":{"modules/SharedModule.html":{}}}],["providers",{"_index":291,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["pub",{"_index":1162,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["public",{"_index":355,"title":{},"body":{"injectables/AppLogger.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["publickey",{"_index":515,"title":{},"body":{"modules/AuthModule.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{}}}],["publicurl",{"_index":1135,"title":{},"body":{"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{}}}],["published",{"_index":840,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["publisheddate",{"_index":831,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["publishedyear",{"_index":861,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/UpdateNewsDto.html":{}}}],["query",{"_index":1019,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["query.limit",{"_index":1903,"title":{},"body":{"controllers/UserController.html":{}}}],["query.offset",{"_index":1904,"title":{},"body":{"controllers/UserController.html":{}}}],["read",{"_index":1854,"title":{},"body":{"injectables/UserAclService.html":{},"miscellaneous/enumerations.html":{}}}],["readonly",{"_index":150,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["record",{"_index":174,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/functions.html":{}}}],["records",{"_index":1129,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["ref",{"_index":726,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["refactor",{"_index":185,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["reference",{"_index":211,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["reflect",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1646,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{},"classes/RefreshTokenInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresh.guard",{"_index":460,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh.guard.ts",{"_index":1260,"title":{},"body":{"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["refresh.guard.ts:13",{"_index":1262,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["refresh.guard.ts:22",{"_index":1263,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["refresh.strategy",{"_index":509,"title":{},"body":{"modules/AuthModule.html":{}}}],["refresh.strategy.ts",{"_index":1265,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"coverage.html":{}}}],["refresh.strategy.ts:13",{"_index":1266,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh.strategy.ts:23",{"_index":1267,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refreshtoken",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/RefreshTokenInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserRefreshTokenClaims.html":{}}}],["refreshtoken(ctx",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtokeninput",{"_index":442,"title":{"classes/RefreshTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/RefreshTokenInput.html":{},"coverage.html":{}}}],["register",{"_index":267,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{}}}],["register(ctx",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerapiresponse",{"_index":620,"title":{"classes/RegisterApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registereduser",{"_index":481,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerinput",{"_index":265,"title":{"classes/RegisterInput.html":{}},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterInput.html":{},"coverage.html":{}}}],["registerlocal",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerlocal(ctx",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeroutput",{"_index":456,"title":{"classes/RegisterOutput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterOutput.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registration",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{}}}],["registrationdeadline",{"_index":759,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["registrationlink",{"_index":760,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["remove",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req",{"_index":155,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["req.header(request_id_token_header",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers[request_id_token_header",{"_index":165,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["req.query.sort",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url",{"_index":160,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["req.user",{"_index":1257,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["reqcontext",{"_index":259,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":138,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":1301,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request_id_token_header",{"_index":141,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requestcontext",{"_index":166,"title":{"classes/RequestContext.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/RequestContext.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["requestid",{"_index":164,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/RequestContext.html":{},"interfaces/TypeMapping.html":{}}}],["requestidmiddleware",{"_index":2030,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["requestidtoken",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":42,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseAclService.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/variables.html":{}}}],["requiredroles",{"_index":1652,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1656,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":157,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"miscellaneous/variables.html":{}}}],["res)[0",{"_index":334,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["res)[1",{"_index":335,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["res)[2",{"_index":336,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["res)[3",{"_index":337,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["res.set(request_id_token_header",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.status(statuscode).json",{"_index":227,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["resdata",{"_index":1308,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["reset",{"_index":299,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resource",{"_index":656,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["resource.id",{"_index":1860,"title":{},"body":{"injectables/UserAclService.html":{}}}],["response",{"_index":139,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"injectables/LoggingInterceptor.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":257,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["response.dto.ts",{"_index":677,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["response.dto.ts:115",{"_index":686,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:118",{"_index":683,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:121",{"_index":682,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:124",{"_index":680,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:127",{"_index":679,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:130",{"_index":684,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:133",{"_index":685,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:136",{"_index":687,"title":{},"body":{"classes/BaseApiErrorObject.html":{}}}],["response.dto.ts:141",{"_index":731,"title":{},"body":{"classes/BaseApiErrorResponse.html":{}}}],["response.dto.ts:33",{"_index":744,"title":{},"body":{"classes/BaseApiResponse.html":{}}}],["response.dto.ts:36",{"_index":745,"title":{},"body":{"classes/BaseApiResponse.html":{}}}],["response.dto.ts:49",{"_index":1753,"title":{},"body":{"interfaces/TypeMapping.html":{}}}],["response.statuscode",{"_index":1306,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["responsemetadata",{"_index":591,"title":{"classes/ResponseMetadata.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{}}}],["responses",{"_index":606,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["responses.dto",{"_index":689,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["responses.dto.ts",{"_index":589,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{}}}],["responses.dto.ts:102",{"_index":1407,"title":{},"body":{"classes/OpportunityArrayApiResponse.html":{}}}],["responses.dto.ts:108",{"_index":590,"title":{},"body":{"classes/AuthTokenApiResponse.html":{}}}],["responses.dto.ts:111",{"_index":592,"title":{},"body":{"classes/AuthTokenApiResponse.html":{}}}],["responses.dto.ts:116",{"_index":1606,"title":{},"body":{"classes/RegisterApiResponse.html":{}}}],["responses.dto.ts:119",{"_index":1607,"title":{},"body":{"classes/RegisterApiResponse.html":{}}}],["responses.dto.ts:125",{"_index":1147,"title":{},"body":{"classes/ImagekitApiResponse.html":{}}}],["responses.dto.ts:128",{"_index":1148,"title":{},"body":{"classes/ImagekitApiResponse.html":{}}}],["responses.dto.ts:14",{"_index":1640,"title":{},"body":{"classes/ResponseMetadata.html":{}}}],["responses.dto.ts:17",{"_index":1639,"title":{},"body":{"classes/ResponseMetadata.html":{}}}],["responses.dto.ts:23",{"_index":1862,"title":{},"body":{"classes/UserApiResponse.html":{}}}],["responses.dto.ts:26",{"_index":1863,"title":{},"body":{"classes/UserApiResponse.html":{}}}],["responses.dto.ts:31",{"_index":1864,"title":{},"body":{"classes/UserArrayApiResponse.html":{}}}],["responses.dto.ts:34",{"_index":1865,"title":{},"body":{"classes/UserArrayApiResponse.html":{}}}],["responses.dto.ts:40",{"_index":1678,"title":{},"body":{"classes/TagApiResponse.html":{}}}],["responses.dto.ts:43",{"_index":1679,"title":{},"body":{"classes/TagApiResponse.html":{}}}],["responses.dto.ts:48",{"_index":1680,"title":{},"body":{"classes/TagArrayApiResponse.html":{}}}],["responses.dto.ts:51",{"_index":1681,"title":{},"body":{"classes/TagArrayApiResponse.html":{}}}],["responses.dto.ts:57",{"_index":961,"title":{},"body":{"classes/EventApiResponse.html":{}}}],["responses.dto.ts:60",{"_index":962,"title":{},"body":{"classes/EventApiResponse.html":{}}}],["responses.dto.ts:65",{"_index":963,"title":{},"body":{"classes/EventArrayApiResponse.html":{}}}],["responses.dto.ts:68",{"_index":964,"title":{},"body":{"classes/EventArrayApiResponse.html":{}}}],["responses.dto.ts:74",{"_index":1493,"title":{},"body":{"classes/OrganizationApiResponse.html":{}}}],["responses.dto.ts:77",{"_index":1494,"title":{},"body":{"classes/OrganizationApiResponse.html":{}}}],["responses.dto.ts:82",{"_index":1495,"title":{},"body":{"classes/OrganizationArrayApiResponse.html":{}}}],["responses.dto.ts:85",{"_index":1496,"title":{},"body":{"classes/OrganizationArrayApiResponse.html":{}}}],["responses.dto.ts:91",{"_index":1404,"title":{},"body":{"classes/OpportunityApiResponse.html":{}}}],["responses.dto.ts:94",{"_index":1405,"title":{},"body":{"classes/OpportunityApiResponse.html":{}}}],["responses.dto.ts:99",{"_index":1406,"title":{},"body":{"classes/OpportunityArrayApiResponse.html":{}}}],["responsetime",{"_index":1307,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["responsetypemap",{"_index":705,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsetypemap[typename",{"_index":720,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["restpayload",{"_index":1117,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["restquery",{"_index":1095,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":180,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":133,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":18,"title":{},"body":{"interfaces/Actor.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"guards/RolesGuard.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.user",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"controllers/UserController.html":{}}}],["role.user)@apibearerauth",{"_index":1882,"title":{},"body":{"controllers/UserController.html":{}}}],["roledata",{"_index":1711,"title":{},"body":{"controllers/TagController.html":{}}}],["roleguard",{"_index":1905,"title":{},"body":{"controllers/UserController.html":{}}}],["rolepermissions",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles",{"_index":13,"title":{},"body":{"interfaces/Actor.html":{},"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":1900,"title":{},"body":{"controllers/UserController.html":{}}}],["roles_full",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles_key",{"_index":1650,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles_view",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":1642,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["rolesguard)@roles(role.admin",{"_index":1881,"title":{},"body":{"controllers/UserController.html":{}}}],["route",{"_index":1659,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rs256",{"_index":521,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["rule",{"_index":650,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"miscellaneous/typealiases.html":{}}}],["rule.constant",{"_index":651,"title":{},"body":{"classes/BaseAclService.html":{}}}],["rule.constant.ts",{"_index":1993,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rule.role",{"_index":662,"title":{},"body":{"classes/BaseAclService.html":{}}}],["rulecallback",{"_index":648,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rules",{"_index":640,"title":{},"body":{"classes/BaseAclService.html":{},"injectables/UserAclService.html":{}}}],["rxjs",{"_index":1223,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1298,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["sanitizedinput",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sanitizedinput.split(/\\s+/).filter(boolean).join",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalar/nestjs",{"_index":2048,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":712,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schema.validate",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":377,"title":{},"body":{"injectables/AppLogger.html":{}}}],["scope.transient",{"_index":381,"title":{},"body":{"injectables/AppLogger.html":{}}}],["scoped",{"_index":1281,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["scripts/.../user.ts",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts/seed/user.ts",{"_index":1968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":1103,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["searchkey",{"_index":1101,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":1250,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["seeded",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seedsuperadmin",{"_index":1971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serialized",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":204,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["service",{"_index":425,"title":{},"body":{"injectables/AppService.html":{},"controllers/OpportunityController.html":{}}}],["services/analytics.service",{"_index":272,"title":{},"body":{"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{}}}],["services/auth.service",{"_index":465,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["services/events.service",{"_index":1035,"title":{},"body":{"controllers/EventsController.html":{},"modules/EventsModule.html":{}}}],["services/news.service",{"_index":1335,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["services/opportunities.service",{"_index":1427,"title":{},"body":{"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{}}}],["services/organization.service",{"_index":1516,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{}}}],["services/tags.service",{"_index":1697,"title":{},"body":{"controllers/TagController.html":{},"modules/TagsModule.html":{}}}],["services/user",{"_index":1921,"title":{},"body":{"modules/UserModule.html":{}}}],["services/user.service",{"_index":1892,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["session",{"_index":1229,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["set",{"_index":123,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseAclService.html":{},"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"classes/RegisterInput.html":{},"injectables/UserAclService.html":{},"miscellaneous/variables.html":{}}}],["setcontext",{"_index":356,"title":{},"body":{"injectables/AppLogger.html":{}}}],["setcontext(context",{"_index":368,"title":{},"body":{"injectables/AppLogger.html":{}}}],["setmetadata(roles_key",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared",{"_index":1638,"title":{},"body":{"classes/RequestContext.html":{}}}],["shared/acl/acl.service",{"_index":1849,"title":{},"body":{"injectables/UserAclService.html":{}}}],["shared/acl/action.constant",{"_index":1850,"title":{},"body":{"injectables/UserAclService.html":{}}}],["shared/acl/actor.constant",{"_index":1851,"title":{},"body":{"injectables/UserAclService.html":{}}}],["shared/dtos/address.dto",{"_index":816,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["shared/dtos/base",{"_index":255,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["shared/dtos/gallery.dto",{"_index":818,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["shared/dtos/pagination",{"_index":67,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"controllers/UserController.html":{}}}],["shared/filters/prisma",{"_index":1088,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["shared/logger/logger.service",{"_index":258,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["shared/prisma",{"_index":322,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"injectables/UserService.html":{}}}],["shared/request",{"_index":260,"title":{},"body":{"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["shared/shared.module",{"_index":303,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{}}}],["shared/utils/createsearchkey",{"_index":1093,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["sharedmodule",{"_index":297,"title":{"modules/SharedModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["signature",{"_index":1152,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["signoptions",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{}}}],["sinature",{"_index":1156,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["single",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":1110,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["skipduplicates",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socials",{"_index":761,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["sort",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort.split(\":\")[0",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort.split(\":\")[1",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort=property:(asc|desc",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortingparam",{"_index":2016,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sortingparams",{"_index":2015,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"modules/AnalyticsModule.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"modules/ImagekitModule.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"modules/OpportunityModule.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{}}}],["sourceid",{"_index":1136,"title":{},"body":{"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{}}}],["space",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spaces",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":643,"title":{},"body":{"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{}}}],["split",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../acl",{"_index":2116,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../action.constant.ts",{"_index":2071,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../base",{"_index":2080,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../common.ts",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../createsearchkey.ts",{"_index":2117,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2078,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../module",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../prisma",{"_index":2079,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../req",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../request",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.constant.ts",{"_index":2072,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.decorator.ts",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.permissions.ts",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sorting",{"_index":2118,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../strategy.constant.ts",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tags",{"_index":2119,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../users.permissions.ts",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/analytics/analytics.module.ts",{"_index":301,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["src/analytics/controllers/analytics.controller.ts",{"_index":231,"title":{},"body":{"controllers/AnalyticsController.html":{},"coverage.html":{}}}],["src/analytics/controllers/analytics.controller.ts:44",{"_index":241,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["src/analytics/dtos/admin",{"_index":97,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"coverage.html":{}}}],["src/analytics/services/analytics.service.ts",{"_index":307,"title":{},"body":{"injectables/AnalyticsService.html":{},"coverage.html":{}}}],["src/analytics/services/analytics.service.ts:15",{"_index":311,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["src/analytics/services/analytics.service.ts:23",{"_index":313,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["src/app.controller.ts",{"_index":340,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:18",{"_index":343,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":420,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":422,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":421,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":500,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/constants/role.constant.ts",{"_index":2075,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/constants/strategy.constant.ts",{"_index":1975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/controllers/auth.controller.ts",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controllers/auth.controller.ts:55",{"_index":439,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/auth.controller.ts:73",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/auth.controller.ts:96",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/decorators/role.decorator.ts",{"_index":1977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/auth",{"_index":623,"title":{},"body":{"classes/AuthTokenOutput.html":{},"classes/LoginInput.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{}}}],["src/auth/guards/jwt",{"_index":1210,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":1269,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":1644,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:13",{"_index":1647,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:16",{"_index":1648,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/services/auth.service.ts",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts:19",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:29",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:51",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:56",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:72",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:83",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategies/jwt",{"_index":1236,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":1272,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:13",{"_index":1275,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:27",{"_index":1277,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/events/controllers/events.controller.ts",{"_index":1003,"title":{},"body":{"controllers/EventsController.html":{},"coverage.html":{}}}],["src/events/controllers/events.controller.ts:110",{"_index":1024,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/controllers/events.controller.ts:135",{"_index":1017,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/controllers/events.controller.ts:160",{"_index":1028,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/controllers/events.controller.ts:62",{"_index":1021,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/controllers/events.controller.ts:87",{"_index":1012,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/dto/events.dto.ts",{"_index":747,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["src/events/dto/events.dto.ts:101",{"_index":802,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:109",{"_index":777,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:117",{"_index":806,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:125",{"_index":782,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:133",{"_index":766,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:144",{"_index":793,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:148",{"_index":804,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:156",{"_index":774,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:161",{"_index":770,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:169",{"_index":809,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:179",{"_index":1780,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:186",{"_index":1772,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:194",{"_index":1762,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:20",{"_index":1070,"title":{},"body":{"classes/EventsSearchInput.html":{}}}],["src/events/dto/events.dto.ts:201",{"_index":1769,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:208",{"_index":1770,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:215",{"_index":1781,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:222",{"_index":1764,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:229",{"_index":1759,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:237",{"_index":1776,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:245",{"_index":1773,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:25",{"_index":1068,"title":{},"body":{"classes/EventsSearchInput.html":{}}}],["src/events/dto/events.dto.ts:253",{"_index":1774,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:261",{"_index":1757,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:269",{"_index":1777,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:277",{"_index":1760,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:285",{"_index":1754,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:296",{"_index":1765,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:300",{"_index":1775,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:308",{"_index":1756,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:313",{"_index":1755,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:321",{"_index":1778,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:328",{"_index":1767,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["src/events/dto/events.dto.ts:338",{"_index":983,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:34",{"_index":811,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:346",{"_index":1000,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:353",{"_index":990,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:361",{"_index":977,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:368",{"_index":987,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:375",{"_index":988,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:382",{"_index":1001,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:389",{"_index":981,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:396",{"_index":973,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:40",{"_index":798,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:404",{"_index":996,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:412",{"_index":992,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:421",{"_index":993,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:430",{"_index":971,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:439",{"_index":997,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:448",{"_index":975,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:456",{"_index":969,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:462",{"_index":967,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:47",{"_index":786,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:470",{"_index":965,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:475",{"_index":995,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:479",{"_index":998,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:483",{"_index":979,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:487",{"_index":985,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["src/events/dto/events.dto.ts:53",{"_index":795,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:59",{"_index":796,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:65",{"_index":812,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:71",{"_index":788,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:77",{"_index":780,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:85",{"_index":805,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/dto/events.dto.ts:93",{"_index":800,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["src/events/events.module.ts",{"_index":1061,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/events/services/events.service.ts",{"_index":1078,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["src/events/services/events.service.ts:104",{"_index":1083,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/services/events.service.ts:131",{"_index":1080,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/services/events.service.ts:176",{"_index":1081,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/services/events.service.ts:18",{"_index":1079,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/services/events.service.ts:203",{"_index":1084,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/services/events.service.ts:26",{"_index":1082,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/imagekit/imagekit.controller.ts",{"_index":1167,"title":{},"body":{"controllers/ImagekitController.html":{},"coverage.html":{}}}],["src/imagekit/imagekit.controller.ts:52",{"_index":1172,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["src/imagekit/imagekit.dto.ts",{"_index":1150,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"coverage.html":{}}}],["src/imagekit/imagekit.dto.ts:10",{"_index":1159,"title":{},"body":{"classes/ImagekitAuthParams.html":{}}}],["src/imagekit/imagekit.dto.ts:17",{"_index":1155,"title":{},"body":{"classes/ImagekitAuthParams.html":{}}}],["src/imagekit/imagekit.dto.ts:24",{"_index":1157,"title":{},"body":{"classes/ImagekitAuthParams.html":{}}}],["src/imagekit/imagekit.dto.ts:32",{"_index":1193,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["src/imagekit/imagekit.dto.ts:38",{"_index":1194,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["src/imagekit/imagekit.dto.ts:44",{"_index":1190,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["src/imagekit/imagekit.dto.ts:50",{"_index":1192,"title":{},"body":{"classes/ImagekitResponseDto.html":{}}}],["src/imagekit/imagekit.module.ts",{"_index":1187,"title":{},"body":{"modules/ImagekitModule.html":{}}}],["src/imagekit/imagekit.service.ts",{"_index":1195,"title":{},"body":{"injectables/ImagekitService.html":{},"coverage.html":{}}}],["src/imagekit/imagekit.service.ts:10",{"_index":1198,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["src/imagekit/imagekit.service.ts:24",{"_index":1200,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["src/main.ts",{"_index":1984,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/news/controllers/news.controller.ts",{"_index":1317,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["src/news/controllers/news.controller.ts:110",{"_index":1331,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/news/controllers/news.controller.ts:135",{"_index":1327,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/news/controllers/news.controller.ts:160",{"_index":1333,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/news/controllers/news.controller.ts:62",{"_index":1329,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/news/controllers/news.controller.ts:87",{"_index":1324,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/news/dto/news.dto.ts",{"_index":829,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{},"coverage.html":{}}}],["src/news/dto/news.dto.ts:106",{"_index":1787,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:112",{"_index":1791,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:118",{"_index":1793,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:126",{"_index":1789,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:134",{"_index":1783,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:139",{"_index":1782,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:147",{"_index":1796,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:155",{"_index":1785,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:165",{"_index":1366,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:173",{"_index":1379,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:18",{"_index":1383,"title":{},"body":{"classes/NewsSearchInput.html":{}}}],["src/news/dto/news.dto.ts:181",{"_index":1376,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:189",{"_index":1368,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:195",{"_index":1372,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:201",{"_index":1374,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:209",{"_index":1370,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:217",{"_index":1358,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:223",{"_index":1357,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:227",{"_index":1377,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:23",{"_index":1382,"title":{},"body":{"classes/NewsSearchInput.html":{}}}],["src/news/dto/news.dto.ts:235",{"_index":1360,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:241",{"_index":1362,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:247",{"_index":1380,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:254",{"_index":1364,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["src/news/dto/news.dto.ts:32",{"_index":849,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:39",{"_index":846,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:46",{"_index":837,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:53",{"_index":844,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:60",{"_index":839,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:67",{"_index":835,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:72",{"_index":832,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:80",{"_index":847,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:90",{"_index":1798,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/dto/news.dto.ts:98",{"_index":1795,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["src/news/news.module.ts",{"_index":1355,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/news/services/news.service.ts",{"_index":1384,"title":{},"body":{"injectables/NewsService.html":{},"coverage.html":{}}}],["src/news/services/news.service.ts:102",{"_index":1389,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/news/services/news.service.ts:123",{"_index":1386,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/news/services/news.service.ts:151",{"_index":1387,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/news/services/news.service.ts:175",{"_index":1390,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/news/services/news.service.ts:18",{"_index":1385,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/news/services/news.service.ts:26",{"_index":1388,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts",{"_index":1409,"title":{},"body":{"controllers/OpportunityController.html":{},"coverage.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts:111",{"_index":1421,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts:136",{"_index":1419,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts:161",{"_index":1425,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts:62",{"_index":1423,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["src/opportunity/controllers/opportunities.controller.ts:88",{"_index":1417,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["src/opportunity/dto/opportunities.dto.ts",{"_index":871,"title":{},"body":{"classes/CreateOpportunityDto.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/UpdateOpportunityDto.html":{},"coverage.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:104",{"_index":881,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:110",{"_index":888,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:116",{"_index":880,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:124",{"_index":874,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:128",{"_index":889,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:136",{"_index":878,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:141",{"_index":876,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:149",{"_index":891,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:159",{"_index":1814,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:166",{"_index":1810,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:174",{"_index":1806,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:181",{"_index":1808,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:188",{"_index":1809,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:19",{"_index":1471,"title":{},"body":{"classes/OpportunitySearchInput.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:195",{"_index":1815,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:202",{"_index":1807,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:209",{"_index":1804,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:217",{"_index":1800,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:225",{"_index":1803,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:233",{"_index":1812,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:24",{"_index":1470,"title":{},"body":{"classes/OpportunitySearchInput.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:241",{"_index":1805,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:249",{"_index":1799,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:253",{"_index":1811,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:260",{"_index":1802,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:265",{"_index":1801,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:273",{"_index":1813,"title":{},"body":{"classes/UpdateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:283",{"_index":1459,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:290",{"_index":1467,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:297",{"_index":1463,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:305",{"_index":1456,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:312",{"_index":1460,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:319",{"_index":1461,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:326",{"_index":1468,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:33",{"_index":895,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:333",{"_index":1457,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:340",{"_index":1454,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:348",{"_index":1450,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:357",{"_index":1453,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:366",{"_index":1465,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:375",{"_index":1455,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:383",{"_index":1452,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:389",{"_index":1451,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:397",{"_index":1449,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:40",{"_index":882,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:402",{"_index":1464,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:406",{"_index":1466,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:410",{"_index":1462,"title":{},"body":{"classes/OpportunityResponseDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:46",{"_index":886,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:52",{"_index":887,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:58",{"_index":896,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:64",{"_index":885,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:72",{"_index":875,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:80",{"_index":883,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:88",{"_index":879,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/dto/opportunities.dto.ts:96",{"_index":890,"title":{},"body":{"classes/CreateOpportunityDto.html":{}}}],["src/opportunity/opportunities.module.ts",{"_index":1447,"title":{},"body":{"modules/OpportunityModule.html":{}}}],["src/opportunity/services/opportunities.service.ts",{"_index":1472,"title":{},"body":{"injectables/OpportunityService.html":{},"coverage.html":{}}}],["src/opportunity/services/opportunities.service.ts:103",{"_index":1478,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/opportunity/services/opportunities.service.ts:129",{"_index":1476,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/opportunity/services/opportunities.service.ts:168",{"_index":1477,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/opportunity/services/opportunities.service.ts:18",{"_index":1474,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/opportunity/services/opportunities.service.ts:195",{"_index":1480,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/opportunity/services/opportunities.service.ts:26",{"_index":1479,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["src/organization/controllers/organization.controller.ts",{"_index":1498,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["src/organization/controllers/organization.controller.ts:115",{"_index":1510,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/controllers/organization.controller.ts:143",{"_index":1508,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/controllers/organization.controller.ts:171",{"_index":1514,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/controllers/organization.controller.ts:63",{"_index":1512,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/controllers/organization.controller.ts:89",{"_index":1506,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["src/organization/dto/organization.dto.ts",{"_index":903,"title":{},"body":{"classes/CreateOrganizationDto.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["src/organization/dto/organization.dto.ts:100",{"_index":907,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:107",{"_index":916,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:112",{"_index":914,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:120",{"_index":925,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:130",{"_index":1827,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:138",{"_index":1819,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:146",{"_index":1821,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:155",{"_index":1828,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:164",{"_index":1829,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:172",{"_index":1816,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:183",{"_index":1822,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:187",{"_index":1830,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:19",{"_index":1556,"title":{},"body":{"classes/OrganizationSearchInput.html":{}}}],["src/organization/dto/organization.dto.ts:195",{"_index":1818,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:200",{"_index":1817,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:208",{"_index":1825,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:213",{"_index":1823,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:217",{"_index":1831,"title":{},"body":{"classes/UpdateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:226",{"_index":1544,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:233",{"_index":1549,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:24",{"_index":1557,"title":{},"body":{"classes/OrganizationSearchInput.html":{}}}],["src/organization/dto/organization.dto.ts:240",{"_index":1541,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:247",{"_index":1543,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:255",{"_index":1552,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:264",{"_index":1553,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:272",{"_index":1536,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:276",{"_index":1554,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:283",{"_index":1539,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:287",{"_index":1537,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:294",{"_index":1547,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:298",{"_index":1545,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:302",{"_index":1555,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:306",{"_index":1550,"title":{},"body":{"classes/OrganizationResponseDto.html":{}}}],["src/organization/dto/organization.dto.ts:33",{"_index":918,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:40",{"_index":909,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:47",{"_index":911,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:56",{"_index":922,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:65",{"_index":923,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:73",{"_index":906,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:84",{"_index":912,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:88",{"_index":924,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/dto/organization.dto.ts:95",{"_index":908,"title":{},"body":{"classes/CreateOrganizationDto.html":{}}}],["src/organization/organization.module.ts",{"_index":1534,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["src/organization/services/organization.service.ts",{"_index":1558,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["src/organization/services/organization.service.ts:104",{"_index":1565,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/services/organization.service.ts:131",{"_index":1563,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/services/organization.service.ts:177",{"_index":1564,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/services/organization.service.ts:18",{"_index":1561,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/services/organization.service.ts:204",{"_index":1568,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/organization/services/organization.service.ts:26",{"_index":1567,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/shared/acl/acl",{"_index":1992,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/shared/acl/acl.service.ts",{"_index":632,"title":{},"body":{"classes/BaseAclService.html":{},"coverage.html":{}}}],["src/shared/acl/acl.service.ts:10",{"_index":638,"title":{},"body":{"classes/BaseAclService.html":{}}}],["src/shared/acl/acl.service.ts:15",{"_index":649,"title":{},"body":{"classes/BaseAclService.html":{}}}],["src/shared/acl/acl.service.ts:28",{"_index":641,"title":{},"body":{"classes/BaseAclService.html":{}}}],["src/shared/acl/action.constant.ts",{"_index":2073,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/shared/acl/actor.constant.ts",{"_index":6,"title":{},"body":{"interfaces/Actor.html":{},"coverage.html":{}}}],["src/shared/configs/module",{"_index":2000,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/constants/common.ts",{"_index":2002,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/constants/permissions/index.ts",{"_index":2005,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/shared/constants/permissions/roles.permissions.ts",{"_index":2009,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/constants/permissions/users.permissions.ts",{"_index":2010,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/sorting",{"_index":2011,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/shared/dtos/address.dto.ts",{"_index":73,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"coverage.html":{}}}],["src/shared/dtos/address.dto.ts:13",{"_index":86,"title":{},"body":{"classes/AddressInput.html":{}}}],["src/shared/dtos/address.dto.ts:22",{"_index":83,"title":{},"body":{"classes/AddressInput.html":{}}}],["src/shared/dtos/address.dto.ts:29",{"_index":81,"title":{},"body":{"classes/AddressInput.html":{}}}],["src/shared/dtos/address.dto.ts:38",{"_index":85,"title":{},"body":{"classes/AddressInput.html":{}}}],["src/shared/dtos/address.dto.ts:47",{"_index":84,"title":{},"body":{"classes/AddressInput.html":{}}}],["src/shared/dtos/address.dto.ts:57",{"_index":95,"title":{},"body":{"classes/AddressResponse.html":{}}}],["src/shared/dtos/address.dto.ts:65",{"_index":92,"title":{},"body":{"classes/AddressResponse.html":{}}}],["src/shared/dtos/address.dto.ts:72",{"_index":90,"title":{},"body":{"classes/AddressResponse.html":{}}}],["src/shared/dtos/address.dto.ts:80",{"_index":94,"title":{},"body":{"classes/AddressResponse.html":{}}}],["src/shared/dtos/address.dto.ts:88",{"_index":93,"title":{},"body":{"classes/AddressResponse.html":{}}}],["src/shared/dtos/base",{"_index":676,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/shared/dtos/gallery.dto.ts",{"_index":1134,"title":{},"body":{"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"coverage.html":{}}}],["src/shared/dtos/gallery.dto.ts:10",{"_index":1140,"title":{},"body":{"classes/GalleryInput.html":{}}}],["src/shared/dtos/gallery.dto.ts:16",{"_index":1138,"title":{},"body":{"classes/GalleryInput.html":{}}}],["src/shared/dtos/gallery.dto.ts:21",{"_index":1143,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/gallery.dto.ts:24",{"_index":1145,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/gallery.dto.ts:27",{"_index":1144,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/gallery.dto.ts:30",{"_index":1141,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/gallery.dto.ts:33",{"_index":1146,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/gallery.dto.ts:36",{"_index":1142,"title":{},"body":{"classes/GalleryResponse.html":{}}}],["src/shared/dtos/pagination",{"_index":1588,"title":{},"body":{"classes/PaginationParamsDto.html":{},"coverage.html":{}}}],["src/shared/dtos/specific",{"_index":588,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{}}}],["src/shared/exceptions/base",{"_index":732,"title":{},"body":{"classes/BaseApiException.html":{},"coverage.html":{}}}],["src/shared/filters/all",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/shared/filters/prisma",{"_index":2017,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/shared/interceptors/logging.interceptor.ts",{"_index":1289,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/shared/interceptors/logging.interceptor.ts:14",{"_index":1292,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/shared/interceptors/logging.interceptor.ts:19",{"_index":1295,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/shared/logger/logger.module.ts",{"_index":395,"title":{},"body":{"modules/AppLoggerModule.html":{}}}],["src/shared/logger/logger.service.ts",{"_index":352,"title":{},"body":{"injectables/AppLogger.html":{},"coverage.html":{}}}],["src/shared/logger/logger.service.ts:11",{"_index":369,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:13",{"_index":359,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:21",{"_index":364,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:37",{"_index":374,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:53",{"_index":361,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:69",{"_index":372,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:8",{"_index":375,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:85",{"_index":367,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/logger/logger.service.ts:9",{"_index":376,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/middlewares/request",{"_index":2027,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/prisma",{"_index":1598,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/shared/request",{"_index":1627,"title":{},"body":{"classes/RequestContext.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/shared/shared.module.ts",{"_index":1664,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/utils/createsearchkey.ts",{"_index":2033,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/tags/controllers/tags.controller.ts",{"_index":1683,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{}}}],["src/tags/controllers/tags.controller.ts:106",{"_index":1689,"title":{},"body":{"controllers/TagController.html":{}}}],["src/tags/controllers/tags.controller.ts:58",{"_index":1691,"title":{},"body":{"controllers/TagController.html":{}}}],["src/tags/controllers/tags.controller.ts:81",{"_index":1695,"title":{},"body":{"controllers/TagController.html":{}}}],["src/tags/dto/tags",{"_index":26,"title":{},"body":{"classes/AddTagDto.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/tags/services/tags.service.ts",{"_index":1735,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/services/tags.service.ts:111",{"_index":1741,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/services/tags.service.ts:14",{"_index":1737,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/services/tags.service.ts:188",{"_index":1738,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/services/tags.service.ts:22",{"_index":1739,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.module.ts",{"_index":1733,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/user/controllers/user.controller.ts",{"_index":1867,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/controllers/user.controller.ts:118",{"_index":1877,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controllers/user.controller.ts:143",{"_index":1888,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controllers/user.controller.ts:63",{"_index":1874,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controllers/user.controller.ts:88",{"_index":1883,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/dtos/user",{"_index":935,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UserOutput.html":{},"coverage.html":{}}}],["src/user/services/user",{"_index":1840,"title":{},"body":{"injectables/UserAclService.html":{},"coverage.html":{}}}],["src/user/services/user.service.ts",{"_index":1926,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/services/user.service.ts:114",{"_index":1942,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:12",{"_index":1932,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:19",{"_index":1934,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:34",{"_index":1944,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:57",{"_index":1941,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:71",{"_index":1936,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:87",{"_index":1940,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/services/user.service.ts:99",{"_index":1938,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.module.ts",{"_index":1919,"title":{},"body":{"modules/UserModule.html":{}}}],["stack",{"_index":168,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["startdate",{"_index":762,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/UpdateEventDto.html":{}}}],["started",{"_index":2100,"title":{"index.html":{}},"body":{}}],["state",{"_index":77,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{}}}],["statements",{"_index":1967,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":279,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/BaseApiException.html":{},"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"controllers/UserController.html":{}}}],["status'})@expose",{"_index":984,"title":{},"body":{"classes/EventResponseDto.html":{}}}],["status'})@isboolean()@isoptional",{"_index":1766,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["statuscode",{"_index":169,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/TypeMapping.html":{}}}],["strategies/jwt",{"_index":507,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":510,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1239,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy_jwt_auth",{"_index":504,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategy_jwt_refresh",{"_index":1264,"title":{},"body":{"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategy_local",{"_index":1271,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["street",{"_index":78,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(filter",{"_index":1106,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{}}}],["string(type",{"_index":719,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["sub",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["summary",{"_index":277,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":1247,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserAclService.html":{}}}],["super(message",{"_index":739,"title":{},"body":{"classes/BaseApiException.html":{}}}],["super.canactivate(context",{"_index":1230,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["super.login(request",{"_index":1227,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["superadmin",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supplied",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":2104,"title":{},"body":{"modules.html":{}}}],["suppress",{"_index":220,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["svg",{"_index":2105,"title":{},"body":{"modules.html":{}}}],["swagger.decorator.ts",{"_index":2012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerbaseapiresponse",{"_index":254,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"interfaces/TypeMapping.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["swaggerbaseapiresponse([eventresponsedto",{"_index":1040,"title":{},"body":{"controllers/EventsController.html":{}}}],["swaggerbaseapiresponse([newsresponsedto",{"_index":1340,"title":{},"body":{"controllers/NewsController.html":{}}}],["swaggerbaseapiresponse([opportunityresponsedto",{"_index":1432,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["swaggerbaseapiresponse([organizationresponsedto",{"_index":1521,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["swaggerbaseapiresponse([tagoutputdto",{"_index":1702,"title":{},"body":{"controllers/TagController.html":{}}}],["swaggerbaseapiresponse([useroutput",{"_index":1899,"title":{},"body":{"controllers/UserController.html":{}}}],["swaggerbaseapiresponse(adminanalyticsoutput",{"_index":281,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["swaggerbaseapiresponse(authtokenoutput",{"_index":470,"title":{},"body":{"controllers/AuthController.html":{}}}],["swaggerbaseapiresponse(eventresponsedto",{"_index":1044,"title":{},"body":{"controllers/EventsController.html":{}}}],["swaggerbaseapiresponse(imagekitresponsedto",{"_index":1180,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["swaggerbaseapiresponse(newsresponsedto",{"_index":1343,"title":{},"body":{"controllers/NewsController.html":{}}}],["swaggerbaseapiresponse(opportunityresponsedto",{"_index":1435,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["swaggerbaseapiresponse(organizationresponsedto",{"_index":1524,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["swaggerbaseapiresponse(registeroutput",{"_index":480,"title":{},"body":{"controllers/AuthController.html":{}}}],["swaggerbaseapiresponse(tagoutputdto",{"_index":1709,"title":{},"body":{"controllers/TagController.html":{}}}],["swaggerbaseapiresponse(type",{"_index":2098,"title":{},"body":{"miscellaneous/functions.html":{}}}],["swaggerbaseapiresponse(useroutput",{"_index":1897,"title":{},"body":{"controllers/UserController.html":{}}}],["switch",{"_index":188,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["t",{"_index":128,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":34,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["tag'})@apiresponse({status",{"_index":1688,"title":{},"body":{"controllers/TagController.html":{}}}],["tagapiresponse",{"_index":612,"title":{"classes/TagApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tagarrayapiresponse",{"_index":613,"title":{"classes/TagArrayApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tagcontroller",{"_index":1682,"title":{"controllers/TagController.html":{}},"body":{"controllers/TagController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagids",{"_index":763,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["tagids?.map((id",{"_index":1120,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["tagoutputdto",{"_index":593,"title":{"classes/TagOutputDto.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tags",{"_index":807,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["tags/dto/tags",{"_index":594,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/ImagekitApiResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["tags/tags.module",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["tagscount",{"_index":1746,"title":{},"body":{"injectables/TagsService.html":{}}}],["tagsearchinput",{"_index":70,"title":{"classes/TagSearchInput.html":{}},"body":{"classes/AddTagDto.html":{},"controllers/TagController.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":407,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsservice",{"_index":1696,"title":{"injectables/TagsService.html":{}},"body":{"controllers/TagController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["tagstype",{"_index":69,"title":{},"body":{"classes/AddTagDto.html":{},"controllers/TagController.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tagswherequery",{"_index":1743,"title":{},"body":{"injectables/TagsService.html":{}}}],["tagtype",{"_index":1693,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["take",{"_index":1109,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["tap",{"_index":1297,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["team",{"_index":1635,"title":{},"body":{"classes/RequestContext.html":{}}}],["tech",{"_index":56,"title":{},"body":{"classes/AddTagDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["technology",{"_index":784,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["test",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test@123",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.$connect",{"_index":1603,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.aclrules.filter",{"_index":661,"title":{},"body":{"classes/BaseAclService.html":{}}}],["this.aclrules.push",{"_index":654,"title":{},"body":{"classes/BaseAclService.html":{}}}],["this.addevent.name",{"_index":1045,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["this.addnews.name",{"_index":1344,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["this.addopportunity.name",{"_index":1486,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.addopportutnity.name",{"_index":1436,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.addorg.name",{"_index":1525,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.addorganization.name",{"_index":1579,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.addtag.name",{"_index":1710,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["this.analyticsservice.getadmindashboardanalytics(ctx",{"_index":283,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["this.applogger.log(ctx",{"_index":1309,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.applogger.setcontext(logginginterceptor.name",{"_index":1299,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.appservice.gethello(ctx",{"_index":351,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(ctx",{"_index":477,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtoken(ctx",{"_index":493,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(ctx",{"_index":482,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(ctx",{"_index":1287,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.cando(role.admin",{"_index":1852,"title":{},"body":{"injectables/UserAclService.html":{}}}],["this.cando(role.user",{"_index":1856,"title":{},"body":{"injectables/UserAclService.html":{}}}],["this.config.get('env",{"_index":225,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.configservice.get(\"env",{"_index":1209,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.configservice.get(\"imagekit.privatekey",{"_index":1203,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.configservice.get(\"imagekit.publickey",{"_index":1202,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.configservice.get(\"imagekit.urlendpoint",{"_index":1205,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.configservice.get(\"jwt.accesstokenexpiresinsec",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get(\"jwt.refreshtokenexpiresinsec",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.context",{"_index":382,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.createuser.name",{"_index":1949,"title":{},"body":{"injectables/UserService.html":{}}}],["this.deleteevent.name",{"_index":1052,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["this.deletenews.name",{"_index":1348,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["this.deleteopportunity.name",{"_index":1440,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["this.deleteorganization.name",{"_index":1582,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.details",{"_index":743,"title":{},"body":{"classes/BaseApiException.html":{}}}],["this.eventsservice.addevent(ctx",{"_index":1046,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.deleteevent(ctx",{"_index":1053,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.getevents(ctx",{"_index":1042,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.getoneevent(ctx",{"_index":1050,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.updateevent(ctx",{"_index":1057,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.findbyid.name",{"_index":1958,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findbyusername.name",{"_index":1960,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getadmindashboardanalytics.name",{"_index":326,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["this.getauthparamas.name",{"_index":1181,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["this.getauthparams.name",{"_index":1207,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.getauthtoken(ctx",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getauthtoken.name",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getevents.name",{"_index":1041,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["this.getmyprofile.name",{"_index":1898,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getnews.name",{"_index":1341,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["this.getoneevent.name",{"_index":1049,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["this.getonenews.name",{"_index":1346,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["this.getoneopportunity.name",{"_index":1438,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["this.getoneorganization.name",{"_index":1576,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.getopportunities.name",{"_index":1433,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["this.getorganizations.name",{"_index":1570,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.getorgs.name",{"_index":1522,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.gettags.name",{"_index":1703,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagsService.html":{}}}],["this.gettagsbytype.name",{"_index":1749,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.gettagstype.name",{"_index":1707,"title":{},"body":{"controllers/TagController.html":{}}}],["this.getuser.name",{"_index":1910,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getuserbyid.name",{"_index":1959,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getusers.name",{"_index":1901,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.imagekit",{"_index":1201,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.imagekit.getauthenticationparameters",{"_index":1208,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.imagekitservice.getauthparams(ctx",{"_index":1183,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["this.isuseritself",{"_index":1859,"title":{},"body":{"injectables/UserAclService.html":{}}}],["this.jwtservice.sign",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(subject",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localizedmessage",{"_index":742,"title":{},"body":{"classes/BaseApiException.html":{}}}],["this.logger",{"_index":383,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.debug",{"_index":388,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.error",{"_index":385,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.info",{"_index":390,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(ctx",{"_index":325,"title":{},"body":{"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/ImagekitController.html":{},"injectables/ImagekitService.html":{},"injectables/LocalStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/TagController.html":{},"injectables/TagsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.logger.setcontext(allexceptionsfilter.name",{"_index":151,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.setcontext(analyticscontroller.name",{"_index":275,"title":{},"body":{"controllers/AnalyticsController.html":{}}}],["this.logger.setcontext(analyticsservice.name",{"_index":324,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["this.logger.setcontext(appcontroller.name",{"_index":346,"title":{},"body":{"controllers/AppController.html":{}}}],["this.logger.setcontext(appservice.name",{"_index":424,"title":{},"body":{"injectables/AppService.html":{}}}],["this.logger.setcontext(authcontroller.name",{"_index":468,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.logger.setcontext(authservice.name",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.setcontext(eventscontroller.name",{"_index":1039,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.logger.setcontext(eventsservice.name",{"_index":1094,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.logger.setcontext(imagekitcontroller.name",{"_index":1178,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["this.logger.setcontext(imagekitservice.name",{"_index":1206,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["this.logger.setcontext(localstrategy.name",{"_index":1284,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.logger.setcontext(newscontroller.name",{"_index":1339,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.logger.setcontext(newsservice.name",{"_index":1391,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.logger.setcontext(opportunitycontroller.name",{"_index":1431,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.logger.setcontext(opportunityservice.name",{"_index":1481,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.logger.setcontext(organizationcontroller.name",{"_index":1520,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.logger.setcontext(organizationservice.name",{"_index":1569,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.logger.setcontext(tagcontroller.name",{"_index":1701,"title":{},"body":{"controllers/TagController.html":{}}}],["this.logger.setcontext(tagsservice.name",{"_index":1742,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.logger.setcontext(usercontroller.name",{"_index":1895,"title":{},"body":{"controllers/UserController.html":{}}}],["this.logger.setcontext(userservice.name",{"_index":1948,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.verbose",{"_index":389,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.warn",{"_index":387,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.warn(requestcontext",{"_index":218,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.login.name",{"_index":475,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.name",{"_index":740,"title":{},"body":{"classes/BaseApiException.html":{}}}],["this.newsservice.addnews(ctx",{"_index":1345,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.deletenews(ctx",{"_index":1349,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.getnews(ctx",{"_index":1342,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.getonenews(ctx",{"_index":1347,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.updatenews(ctx",{"_index":1351,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.organizationservice.addorganization",{"_index":1526,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.deleteorganization",{"_index":1528,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.getoneorganization",{"_index":1527,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.getorganizations(ctx",{"_index":1523,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.organizationservice.updateorganization",{"_index":1529,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.prismaservice.events.count",{"_index":331,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/EventsService.html":{}}}],["this.prismaservice.events.create",{"_index":1118,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prismaservice.events.delete",{"_index":1123,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prismaservice.events.findmany",{"_index":1107,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prismaservice.events.findunique",{"_index":1114,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prismaservice.events.update",{"_index":1126,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prismaservice.news.count",{"_index":330,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/NewsService.html":{}}}],["this.prismaservice.news.create",{"_index":1396,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.prismaservice.news.delete",{"_index":1400,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.prismaservice.news.findmany",{"_index":1392,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.prismaservice.news.findunique",{"_index":1394,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.prismaservice.news.update",{"_index":1403,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.prismaservice.opportunity.count",{"_index":332,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/OpportunityService.html":{}}}],["this.prismaservice.opportunity.create",{"_index":1487,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.prismaservice.opportunity.delete",{"_index":1489,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.prismaservice.opportunity.findmany",{"_index":1482,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.prismaservice.opportunity.findunique",{"_index":1484,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.prismaservice.opportunity.update",{"_index":1492,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["this.prismaservice.organizations.count",{"_index":1574,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.organizations.create",{"_index":1580,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.organizations.delete",{"_index":1583,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.organizations.findmany",{"_index":1572,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.organizations.findunique",{"_index":1577,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.organizations.update",{"_index":1586,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.prismaservice.tags.count",{"_index":1747,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.prismaservice.tags.create",{"_index":1750,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.prismaservice.tags.findmany",{"_index":1744,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.prismaservice.user.count",{"_index":329,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["this.prismaservice.user.findunique",{"_index":1258,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/UserService.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1653,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.refreshtoken.name",{"_index":492,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.register.name",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.service.addopportunity(ctx",{"_index":1437,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.service.deleteopportunity(ctx",{"_index":1441,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.service.getoneopportunity(ctx",{"_index":1439,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.service.getopportunities(ctx",{"_index":1434,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.service.updateopportunity(ctx",{"_index":1443,"title":{},"body":{"controllers/OpportunityController.html":{}}}],["this.tagsservice.addtag(ctx",{"_index":1712,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagsservice.gettags(ctx",{"_index":1704,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagsservice.gettagsbytype(ctx",{"_index":1708,"title":{},"body":{"controllers/TagController.html":{}}}],["this.updateevent.name",{"_index":1055,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["this.updatenews.name",{"_index":1350,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["this.updateopportunity.name",{"_index":1442,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["this.updateuser.name",{"_index":1913,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.userservice.createuser(ctx",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyid(ctx",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["this.userservice.getuserbyid(ctx",{"_index":1911,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getusers",{"_index":1902,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuser(ctx",{"_index":1914,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.validateusernamepassword",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validate.name",{"_index":1286,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.validateuser.name",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validateusernamepassword.name",{"_index":1950,"title":{},"body":{"injectables/UserService.html":{}}}],["throw",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"injectables/EventsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tidy",{"_index":190,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timestamp",{"_index":161,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLogger.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["title",{"_index":764,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["toclassonly",{"_index":1073,"title":{},"body":{"classes/EventsSearchInput.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/TagSearchInput.html":{}}}],["todo",{"_index":175,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/RequestContext.html":{},"controllers/UserController.html":{}}}],["token",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{}}}],["token')@apioperation({summary",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{}}}],["top",{"_index":2090,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transform",{"_index":1592,"title":{},"body":{"classes/PaginationParamsDto.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":88,"title":{},"body":{"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["transports",{"_index":379,"title":{},"body":{"injectables/AppLogger.html":{}}}],["transports.console",{"_index":384,"title":{},"body":{"injectables/AppLogger.html":{}}}],["trim",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":53,"title":{},"body":{"classes/AddTagDto.html":{},"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"classes/BaseAclService.html":{},"classes/CreateEventDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"injectables/LocalStrategy.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"guards/RolesGuard.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOrganizationDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["true})@isstring",{"_index":57,"title":{},"body":{"classes/AddTagDto.html":{}}}],["true})@type(undefined)@isarray()@isoptional",{"_index":792,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["two",{"_index":2088,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Actor.html":{},"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/AdminAnalyticsOutput.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"injectables/AnalyticsService.html":{},"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/AuthTokenOutput.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiException.html":{},"classes/BaseApiResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/ImagekitAuthParams.html":{},"controllers/ImagekitController.html":{},"classes/ImagekitResponseDto.html":{},"injectables/ImagekitService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"interfaces/TypeMapping.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"classes/UserAccessTokenClaims.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"classes/UserRefreshTokenClaims.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type'})@isstring",{"_index":787,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{}}}],["type'})@isstring()@expose",{"_index":980,"title":{},"body":{"classes/EventResponseDto.html":{},"classes/OpportunityResponseDto.html":{}}}],["type'})@isstring()@isoptional",{"_index":1763,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{}}}],["type[0].name",{"_index":716,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["typealiases",{"_index":2114,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typemapping",{"_index":701,"title":{"interfaces/TypeMapping.html":{}},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typename",{"_index":714,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{}}}],["typeof",{"_index":717,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1233,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["types/uuid",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":488,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["unauthorized",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception",{"_index":314,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{},"guards/RolesGuard.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception(\"email",{"_index":1954,"title":{},"body":{"injectables/UserService.html":{}}}],["unauthorizedexception(\"invalid",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(\"this",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(\"user",{"_index":1951,"title":{},"body":{"injectables/UserService.html":{}}}],["unauthorizedexception(`${info",{"_index":1235,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["undefined",{"_index":170,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"classes/BaseApiException.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventArrayApiResponse.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/OpportunityArrayApiResponse.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OrganizationArrayApiResponse.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/RegisterOutput.html":{},"classes/RequestContext.html":{},"classes/TagArrayApiResponse.html":{},"controllers/TagController.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{}}}],["undefined})@apiresponse({status",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["undefined})@isarray()@isoptional",{"_index":1381,"title":{},"body":{"classes/NewsSearchInput.html":{}}}],["undefined})@isoptional()@isarray",{"_index":1067,"title":{},"body":{"classes/EventsSearchInput.html":{}}}],["under",{"_index":2097,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unknown",{"_index":730,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":490,"title":{},"body":{"controllers/AuthController.html":{}}}],["up",{"_index":191,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["update",{"_index":1027,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"classes/UpdateUserInput.html":{},"injectables/UserAclService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["updated",{"_index":866,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["updatedat",{"_index":867,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/RegisterOutput.html":{},"classes/TagOutputDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UserOutput.html":{}}}],["updateditem",{"_index":1491,"title":{},"body":{"injectables/OpportunityService.html":{}}}],["updatednews",{"_index":1402,"title":{},"body":{"injectables/NewsService.html":{}}}],["updateevent",{"_index":1009,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["updateevent(ctx",{"_index":1025,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["updateeventdto",{"_index":823,"title":{"classes/UpdateEventDto.html":{}},"body":{"classes/CreateEventDto.html":{},"classes/EventResponseDto.html":{},"controllers/EventsController.html":{},"classes/EventsSearchInput.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["updatenews",{"_index":1322,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["updatenews(ctx",{"_index":1332,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsService.html":{}}}],["updatenewsdto",{"_index":859,"title":{"classes/UpdateNewsDto.html":{}},"body":{"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"injectables/NewsService.html":{},"classes/UpdateNewsDto.html":{},"coverage.html":{}}}],["updateopportunity",{"_index":1415,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["updateopportunity(ctx",{"_index":1424,"title":{},"body":{"controllers/OpportunityController.html":{},"injectables/OpportunityService.html":{}}}],["updateopportunitydto",{"_index":899,"title":{"classes/UpdateOpportunityDto.html":{}},"body":{"classes/CreateOpportunityDto.html":{},"controllers/OpportunityController.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"injectables/OpportunityService.html":{},"classes/UpdateOpportunityDto.html":{},"coverage.html":{}}}],["updateorganization",{"_index":1504,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["updateorganization(ctx",{"_index":1513,"title":{},"body":{"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{}}}],["updateorganizationdto",{"_index":931,"title":{"classes/UpdateOrganizationDto.html":{}},"body":{"classes/CreateOrganizationDto.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"injectables/OrganizationService.html":{},"classes/UpdateOrganizationDto.html":{},"coverage.html":{}}}],["updatereferences",{"_index":1985,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatereferences(obj",{"_index":2081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateuser",{"_index":1871,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuser(ctx",{"_index":1884,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserinput",{"_index":1832,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["upload",{"_index":1164,"title":{},"body":{"classes/ImagekitAuthParams.html":{},"classes/ImagekitResponseDto.html":{}}}],["upsert",{"_index":1127,"title":{},"body":{"injectables/EventsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{}}}],["url",{"_index":771,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/RequestContext.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["url'})@isstring",{"_index":1137,"title":{},"body":{"classes/GalleryInput.html":{}}}],["urlendpoint",{"_index":1204,"title":{},"body":{"injectables/ImagekitService.html":{}}}],["use",{"_index":1130,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"controllers/UserController.html":{}}}],["useclass",{"_index":1677,"title":{},"body":{"modules/SharedModule.html":{}}}],["used",{"_index":605,"title":{},"body":{"classes/AuthTokenApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"injectables/EventsService.html":{},"classes/ImagekitApiResponse.html":{},"injectables/NewsService.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"injectables/OpportunityService.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"injectables/OrganizationService.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["usefactory",{"_index":514,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":247,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":1043,"title":{},"body":{"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@useinterceptors(classserializerinterceptor)@delete('/:id')@apioperation({summary",{"_index":1014,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@useinterceptors(classserializerinterceptor)@get('me')@apioperation({summary",{"_index":1873,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@useinterceptors(classserializerinterceptor)@get()@apioperation({summary",{"_index":1170,"title":{},"body":{"controllers/ImagekitController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@useinterceptors(classserializerinterceptor)@patch('/:id')@apioperation({summary",{"_index":1026,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@useinterceptors(classserializerinterceptor)@post()@apioperation({summary",{"_index":1011,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{}}}],["useguards(jwtrefreshguard",{"_index":483,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":473,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":248,"title":{},"body":{"controllers/AnalyticsController.html":{},"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":474,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventsController.html":{},"controllers/ImagekitController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor)@get('/:id')@apioperation({summary",{"_index":1023,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{}}}],["useinterceptors(classserializerinterceptor)@get('/:type')@apioperation({summary",{"_index":1694,"title":{},"body":{"controllers/TagController.html":{}}}],["useinterceptors(classserializerinterceptor)@get(':id')@apioperation({summary",{"_index":1876,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor)@get()@apioperation({summary",{"_index":1020,"title":{},"body":{"controllers/EventsController.html":{},"controllers/NewsController.html":{},"controllers/OpportunityController.html":{},"controllers/OrganizationController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":52,"title":{},"body":{"classes/AddTagDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseAclService.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/RegisterInput.html":{},"classes/RequestContext.html":{},"classes/ResponseMetadata.html":{},"guards/RolesGuard.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"classes/TagSearchInput.html":{},"injectables/TagsService.html":{},"injectables/UserAclService.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.isaccountverified",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":1953,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1658,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.roles?.includes(role",{"_index":1657,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user/dtos/user",{"_index":319,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{}}}],["user/services/user.service",{"_index":321,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{}}}],["user/user.module",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useraccesstokenclaims",{"_index":529,"title":{"classes/UserAccessTokenClaims.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthTokenOutput.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RequestContext.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{}}}],["useraclservice",{"_index":1839,"title":{"injectables/UserAclService.html":{}},"body":{"injectables/UserAclService.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userapiresponse",{"_index":610,"title":{"classes/UserApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userarrayapiresponse",{"_index":611,"title":{"classes/UserArrayApiResponse.html":{}},"body":{"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":1866,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercount",{"_index":103,"title":{},"body":{"classes/AdminAnalyticsOutput.html":{},"injectables/AnalyticsService.html":{}}}],["userid",{"_index":1885,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":408,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":938,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RegisterInput.html":{},"classes/RegisterOutput.html":{},"injectables/UserService.html":{}}}],["username/password",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamefield",{"_index":1282,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["useroutput",{"_index":318,"title":{"classes/UserOutput.html":{}},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"classes/AuthTokenApiResponse.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventApiResponse.html":{},"classes/EventArrayApiResponse.html":{},"classes/ImagekitApiResponse.html":{},"classes/OpportunityApiResponse.html":{},"classes/OpportunityArrayApiResponse.html":{},"classes/OrganizationApiResponse.html":{},"classes/OrganizationArrayApiResponse.html":{},"classes/RegisterApiResponse.html":{},"classes/ResponseMetadata.html":{},"classes/TagApiResponse.html":{},"classes/TagArrayApiResponse.html":{},"interfaces/TypeMapping.html":{},"classes/UserApiResponse.html":{},"classes/UserArrayApiResponse.html":{},"controllers/UserController.html":{},"classes/UserOutput.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userpermissions",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrefreshtokenclaims",{"_index":630,"title":{"classes/UserRefreshTokenClaims.html":{}},"body":{"classes/AuthTokenOutput.html":{},"injectables/JwtRefreshStrategy.html":{},"classes/UserAccessTokenClaims.html":{},"classes/UserRefreshTokenClaims.html":{},"coverage.html":{}}}],["users",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["users_full",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users_view",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userservice",{"_index":320,"title":{"injectables/UserService.html":{}},"body":{"injectables/AnalyticsService.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersoutput",{"_index":1957,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":710,"title":{},"body":{"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"interfaces/TypeMapping.html":{},"miscellaneous/functions.html":{}}}],["uuid",{"_index":2066,"title":{},"body":{"dependencies.html":{}}}],["uuidv4",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid(\"development",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid(...validparams",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":1240,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1242,"title":{},"body":{"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["validate(request",{"_index":1276,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(requestidtoken",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatenested",{"_index":815,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{}}}],["validateuser",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(ctx",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateusernamepassword",{"_index":1931,"title":{},"body":{"injectables/UserService.html":{}}}],["validateusernamepassword(ctx",{"_index":1943,"title":{},"body":{"injectables/UserService.html":{}}}],["validation_pipe_options",{"_index":2004,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":65,"title":{},"body":{"classes/AddTagDto.html":{},"classes/AddressInput.html":{},"classes/AddressResponse.html":{},"classes/CreateEventDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreateOpportunityDto.html":{},"classes/CreateOrganizationDto.html":{},"classes/CreateUserInput.html":{},"classes/EventResponseDto.html":{},"classes/EventsSearchInput.html":{},"classes/GalleryInput.html":{},"classes/GalleryResponse.html":{},"classes/LoginInput.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunityResponseDto.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationResponseDto.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RefreshTokenInput.html":{},"classes/RegisterInput.html":{},"classes/TagOutputDto.html":{},"classes/TagSearchInput.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateNewsDto.html":{},"classes/UpdateOpportunityDto.html":{},"classes/UpdateOrganizationDto.html":{},"classes/UpdateUserInput.html":{},"dependencies.html":{}}}],["validparams",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":178,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseAclService.html":{},"classes/BaseApiErrorObject.html":{},"classes/BaseApiErrorResponse.html":{},"classes/BaseApiResponse.html":{},"classes/EventsSearchInput.html":{},"injectables/JwtAuthStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/NewsSearchInput.html":{},"classes/OpportunitySearchInput.html":{},"classes/OrganizationSearchInput.html":{},"classes/PaginationParamsDto.html":{},"classes/RegisterInput.html":{},"classes/TagSearchInput.html":{},"interfaces/TypeMapping.html":{},"injectables/UserAclService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1969,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2121,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":491,"title":{},"body":{"controllers/AuthController.html":{}}}],["verbose",{"_index":357,"title":{},"body":{"injectables/AppLogger.html":{}}}],["verbose(ctx",{"_index":371,"title":{},"body":{"injectables/AppLogger.html":{}}}],["verified",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":2112,"title":{},"body":{"properties.html":{}}}],["via",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["view",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":370,"title":{},"body":{"injectables/AppLogger.html":{},"classes/BaseAclService.html":{},"injectables/UserAclService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["warn",{"_index":358,"title":{},"body":{"injectables/AppLogger.html":{}}}],["warn(ctx",{"_index":373,"title":{},"body":{"injectables/AppLogger.html":{}}}],["wherebuilder",{"_index":1096,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{},"injectables/OrganizationService.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["wherequery",{"_index":1097,"title":{},"body":{"injectables/EventsService.html":{},"injectables/NewsService.html":{},"injectables/OpportunityService.html":{}}}],["whitelist",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston",{"_index":380,"title":{},"body":{"injectables/AppLogger.html":{},"dependencies.html":{}}}],["world",{"_index":349,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["x",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["year",{"_index":860,"title":{},"body":{"classes/CreateNewsDto.html":{},"classes/NewsResponseDto.html":{},"classes/NewsSearchInput.html":{},"classes/UpdateNewsDto.html":{}}}],["year'})@expose",{"_index":1373,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["year'})@isoptional",{"_index":1792,"title":{},"body":{"classes/UpdateNewsDto.html":{}}}],["yes",{"_index":362,"title":{},"body":{"injectables/AppLogger.html":{},"classes/BaseAclService.html":{},"classes/BaseApiException.html":{},"injectables/UserAclService.html":{}}}],["z0",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":298,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppLoggerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/ImagekitModule.html":{},"modules/NewsModule.html":{},"modules/OpportunityModule.html":{},"modules/OrganizationModule.html":{},"modules/SharedModule.html":{},"modules/TagsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Actor.html":{"url":"interfaces/Actor.html","title":"interface - Actor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Actor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/acl/actor.constant.ts\n        \n\n\n            \n                Description\n            \n            \n                The actor who is perfoming the action\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ROLE } from './../../auth/constants/role.constant';\n\n/**\n * The actor who is perfoming the action\n */\nexport interface Actor {\n  id: string;\n\n  roles: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTagDto.html":{"url":"classes/AddTagDto.html","title":"class - AddTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/dto/tags-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isEventTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isNewsTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isOpportunityTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isOrganizationTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isUserTag\n                            \n                            \n                                    \n                                    \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isEventTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if this is an event tag', example: false, required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isNewsTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if this is a news tag', example: false, required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isOpportunityTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if this is an opportunity tag', example: false, required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isOrganizationTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if this is an organization tag', example: false, required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isUserTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if this is a user tag', example: true, required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the tag', example: 'Tech', required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsBoolean, IsOptional, IsString } from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\n\nexport type TagsType =\n  | \"USER\"\n  | \"ORGANIZATION\"\n  | \"EVENT\"\n  | \"NEWS\"\n  | \"OPPORTUNITY\";\n\nexport class TagSearchInput extends PaginationParamsDto {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  tag: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isUserTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isOrganizationTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isEventTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isNewsTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isOpportunityTag?: boolean;\n}\n\nexport class AddTagDto {\n  @ApiProperty({\n    description: \"The name of the tag\",\n    example: \"Tech\",\n    required: true,\n  })\n  @IsString()\n  tag: string;\n\n  @ApiProperty({\n    description: \"Indicates if this is a user tag\",\n    example: true,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isUserTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an organization tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isOrganizationTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an event tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isEventTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is a news tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isNewsTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an opportunity tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isOpportunityTag?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressInput.html":{"url":"classes/AddressInput.html","title":"class - AddressInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/address.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postcode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                street\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'City', required: false, example: '5551234567'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Country', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Postcode', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'State', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\nimport { IsOptional, IsString } from \"class-validator\";\n\nexport class AddressInput {\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  street?: string;\n\n  @ApiPropertyOptional({\n    description: \"Country\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  country?: string;\n\n  @ApiPropertyOptional({\n    description: \"City\",\n    required: false,\n    example: \"5551234567\",\n  })\n  city?: string;\n\n  @ApiPropertyOptional({\n    description: \"State\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @ApiPropertyOptional({\n    description: \"Postcode\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  postcode?: string;\n}\n\nexport class AddressResponse {\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  street?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  country?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  city?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  state?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  postcode?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressResponse.html":{"url":"classes/AddressResponse.html","title":"class - AddressResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/address.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                postcode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                street\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        postcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Street', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/address.dto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\nimport { IsOptional, IsString } from \"class-validator\";\n\nexport class AddressInput {\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  street?: string;\n\n  @ApiPropertyOptional({\n    description: \"Country\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  country?: string;\n\n  @ApiPropertyOptional({\n    description: \"City\",\n    required: false,\n    example: \"5551234567\",\n  })\n  city?: string;\n\n  @ApiPropertyOptional({\n    description: \"State\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @ApiPropertyOptional({\n    description: \"Postcode\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  postcode?: string;\n}\n\nexport class AddressResponse {\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  street?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  country?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  city?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  state?: string;\n\n  @ApiPropertyOptional({\n    description: \"Street\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  postcode?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminAnalyticsOutput.html":{"url":"classes/AdminAnalyticsOutput.html","title":"class - AdminAnalyticsOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminAnalyticsOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analytics/dtos/admin-analytics-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                eventCount\n                            \n                            \n                                    \n                                    \n                                newsCount\n                            \n                            \n                                    \n                                    \n                                opportunityCount\n                            \n                            \n                                    \n                                    \n                                userCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        eventCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analytics/dtos/admin-analytics-output.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newsCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analytics/dtos/admin-analytics-output.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        opportunityCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analytics/dtos/admin-analytics-output.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/analytics/dtos/admin-analytics-output.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nexport class AdminAnalyticsOutput {\n  @Expose()\n  @ApiProperty()\n  newsCount: number;\n\n  @Expose()\n  @ApiProperty()\n  userCount: string;\n\n  @Expose()\n  @ApiProperty()\n  eventCount: string;\n\n  @Expose()\n  @ApiProperty()\n  opportunityCount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/shared/filters/all-exceptions.filter.ts:17\n                            \n                        \n\n                \n                    \n                            set logger context\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: T, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/filters/all-exceptions.filter.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Request, Response } from 'express';\n\nimport { REQUEST_ID_TOKEN_HEADER } from '../constants';\nimport { BaseApiException } from '../exceptions/base-api.exception';\nimport { AppLogger } from '../logger/logger.service';\nimport { createRequestContext } from '../request-context/util';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  /** set logger context */\n  constructor(\n    private config: ConfigService,\n    private readonly logger: AppLogger,\n  ) {\n    this.logger.setContext(AllExceptionsFilter.name);\n  }\n\n  catch(exception: T, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const req: Request = ctx.getRequest();\n    const res: Response = ctx.getResponse();\n\n    const path = req.url;\n    const timestamp = new Date().toISOString();\n    const requestId = req.headers[REQUEST_ID_TOKEN_HEADER];\n    const requestContext = createRequestContext(req);\n\n    let stack: any;\n    let statusCode: HttpStatus | undefined = undefined;\n    let errorName: string | undefined = undefined;\n    let message: string | undefined = undefined;\n    let details: string | Record | undefined = undefined;\n    // TODO : Based on language value in header, return a localized message.\n    const acceptedLanguage = 'ja';\n    let localizedMessage: string | undefined = undefined;\n\n    // TODO : Refactor the below cases into a switch case and tidy up error response creation.\n    if (exception instanceof BaseApiException) {\n      statusCode = exception.getStatus();\n      errorName = exception.constructor.name;\n      message = exception.message;\n      localizedMessage = exception.localizedMessage\n        ? exception.localizedMessage[acceptedLanguage]\n        : undefined;\n      details = exception.details || exception.getResponse();\n    } else if (exception instanceof HttpException) {\n      statusCode = exception.getStatus();\n      errorName = exception.constructor.name;\n      message = exception.message;\n      details = exception.getResponse();\n    } else if (exception instanceof Error) {\n      errorName = exception.constructor.name;\n      message = exception.message;\n      stack = exception.stack;\n    }\n\n    // Set to internal server error in case it did not match above categories.\n    statusCode = statusCode || HttpStatus.INTERNAL_SERVER_ERROR;\n    errorName = errorName || 'InternalException';\n    message = message || 'Internal server error';\n\n    // NOTE: For reference, please check https://cloud.google.com/apis/design/errors\n    const error = {\n      statusCode,\n      message,\n      localizedMessage,\n      errorName,\n      details,\n      // Additional meta added by us.\n      path,\n      requestId,\n      timestamp,\n    };\n    this.logger.warn(requestContext, error.message, {\n      error,\n      stack,\n    });\n\n    // Suppress original internal server error details in prod mode\n    const isProMood = this.config.get('env') !== 'development';\n    if (isProMood && statusCode === HttpStatus.INTERNAL_SERVER_ERROR) {\n      error.message = 'Internal server error';\n    }\n\n    res.status(statusCode).json({ error });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AnalyticsController.html":{"url":"controllers/AnalyticsController.html","title":"controller - AnalyticsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AnalyticsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analytics/controllers/analytics.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                analytics\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAdminAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getAdminAnalytics\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAdminAnalytics(ctx: RequestContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin-dashboard')@ApiOperation({summary: 'Get admin dashboard data'})@ApiResponse({status: undefined, type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/analytics/controllers/analytics.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport { ApiOperation, ApiResponse, ApiTags } from \"@nestjs/swagger\";\n\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { RegisterInput } from \"../../auth/dtos/auth-register-input.dto\";\nimport { AdminAnalyticsOutput } from \"../dtos/admin-analytics-output.dto\";\nimport { AnalyticsService } from \"../services/analytics.service\";\n\n@ApiTags(\"analytics\")\n@Controller(\"analytics\")\nexport class AnalyticsController {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly analyticsService: AnalyticsService\n  ) {\n    this.logger.setContext(AnalyticsController.name);\n  }\n\n  @Get(\"/admin-dashboard\")\n  @ApiOperation({\n    summary: \"Get admin dashboard data\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(AdminAnalyticsOutput),\n  })\n  async getAdminAnalytics(\n    @ReqContext() ctx: RequestContext\n  ): Promise> {\n    const res = await this.analyticsService.getAdminDashboardAnalytics(ctx);\n    return { data: res, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_AnalyticsModule_exports\n\n\n\ncluster_AnalyticsModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nSharedModule->AnalyticsModule\n\n\n\n\n\nAnalyticsService \n\nAnalyticsService \n\nAnalyticsService  -->\n\nAnalyticsModule->AnalyticsService \n\n\n\n\n\nAnalyticsService\n\nAnalyticsService\n\nAnalyticsModule -->\n\nAnalyticsService->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/analytics/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnalyticsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AnalyticsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AnalyticsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { AnalyticsService } from \"./services/analytics.service\";\nimport { AnalyticsController } from \"./controllers/analytics.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [AnalyticsService],\n  controllers: [AnalyticsController],\n  exports: [AnalyticsService],\n})\nexport class AnalyticsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnalyticsService.html":{"url":"injectables/AnalyticsService.html","title":"injectable - AnalyticsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnalyticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/analytics/services/analytics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAdminDashboardAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/analytics/services/analytics.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAdminDashboardAnalytics\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAdminDashboardAnalytics(ctx: RequestContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/analytics/services/analytics.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { plainToClass } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { UserService } from \"../../user/services/user.service\";\n\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport { AdminAnalyticsOutput } from \"../dtos/admin-analytics-output.dto\";\n\n@Injectable()\nexport class AnalyticsService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(AnalyticsService.name);\n  }\n\n  async getAdminDashboardAnalytics(\n    ctx: RequestContext\n  ): Promise {\n    this.logger.log(ctx, `${this.getAdminDashboardAnalytics.name} was called`);\n\n    const res = Promise.all([\n      this.prismaService.user.count(),\n      this.prismaService.news.count(),\n      this.prismaService.events.count(),\n      this.prismaService.opportunity.count(),\n    ]);\n\n    console.log(\"res\", await res);\n    return plainToClass(\n      AdminAnalyticsOutput,\n      {\n        userCount: (await res)[0],\n        newsCount: (await res)[1],\n        eventCount: (await res)[2],\n        opportunityCount: (await res)[3],\n      },\n\n      {\n        excludeExtraneousValues: true,\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello(ctx: RequestContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\nimport { AppLogger } from './shared/logger/logger.service';\nimport { ReqContext } from './shared/request-context/req-context.decorator';\nimport { RequestContext } from './shared/request-context/request-context.dto';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly appService: AppService,\n  ) {\n    this.logger.setContext(AppController.name);\n  }\n\n  @Get()\n  getHello(@ReqContext() ctx: RequestContext): string {\n    this.logger.log(ctx, 'Hello world from App controller');\n\n    return this.appService.getHello(ctx);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppLogger.html":{"url":"injectables/AppLogger.html","title":"injectable - AppLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                context\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                    Public\n                                setContext\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/logger/logger.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(ctx: RequestContext, message: string, meta?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meta\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Logger\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(ctx: RequestContext, message: string, meta?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meta\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Logger\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(ctx: RequestContext | null, message: string, meta?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meta\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Logger\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    setContext(context: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(ctx: RequestContext, message: string, meta?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meta\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Logger\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(ctx: RequestContext, message: string, meta?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/logger/logger.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meta\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Logger\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/logger/logger.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/logger/logger.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\nimport { createLogger, Logger, transports } from 'winston';\n\nimport { RequestContext } from '../request-context/request-context.dto';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class AppLogger {\n  private context?: string;\n  private logger: Logger;\n\n  public setContext(context: string): void {\n    this.context = context;\n  }\n\n  constructor() {\n    this.logger = createLogger({\n      transports: [new transports.Console()],\n    });\n  }\n\n  error(\n    ctx: RequestContext,\n    message: string,\n    meta?: Record,\n  ): Logger {\n    const timestamp = new Date().toISOString();\n\n    return this.logger.error({\n      message,\n      contextName: this.context,\n      ctx,\n      timestamp,\n      ...meta,\n    });\n  }\n\n  warn(\n    ctx: RequestContext,\n    message: string,\n    meta?: Record,\n  ): Logger {\n    const timestamp = new Date().toISOString();\n\n    return this.logger.warn({\n      message,\n      contextName: this.context,\n      ctx,\n      timestamp,\n      ...meta,\n    });\n  }\n\n  debug(\n    ctx: RequestContext,\n    message: string,\n    meta?: Record,\n  ): Logger {\n    const timestamp = new Date().toISOString();\n\n    return this.logger.debug({\n      message,\n      contextName: this.context,\n      ctx,\n      timestamp,\n      ...meta,\n    });\n  }\n\n  verbose(\n    ctx: RequestContext,\n    message: string,\n    meta?: Record,\n  ): Logger {\n    const timestamp = new Date().toISOString();\n\n    return this.logger.verbose({\n      message,\n      contextName: this.context,\n      ctx,\n      timestamp,\n      ...meta,\n    });\n  }\n\n  log(\n    ctx: RequestContext | null,\n    message: string,\n    meta?: Record,\n  ): Logger {\n    const timestamp = new Date().toISOString();\n\n    if (!ctx) {\n      return this.logger.info({\n        message,\n        timestamp,\n        ...meta,\n      });\n    }\n\n    return this.logger.info({\n      message,\n      contextName: this.context,\n      ctx,\n      timestamp,\n      ...meta,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppLoggerModule.html":{"url":"modules/AppLoggerModule.html","title":"module - AppLoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppLoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppLoggerModule\n\n\n\ncluster_AppLoggerModule_providers\n\n\n\ncluster_AppLoggerModule_exports\n\n\n\n\nAppLogger \n\nAppLogger \n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\nAppLogger  -->\n\nAppLoggerModule->AppLogger \n\n\n\n\n\nAppLogger\n\nAppLogger\n\nAppLoggerModule -->\n\nAppLogger->AppLoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppLogger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppLogger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { AppLogger } from './logger.service';\n\n@Module({\n  imports: [],\n  providers: [AppLogger],\n  exports: [AppLogger],\n})\nexport class AppLoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnalyticsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nImagekitModule\n\nImagekitModule\n\nAppModule -->\n\nImagekitModule->AppModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nAppModule -->\n\nNewsModule->AppModule\n\n\n\n\n\nOpportunityModule\n\nOpportunityModule\n\nAppModule -->\n\nOpportunityModule->AppModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nAppModule -->\n\nOrganizationModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnalyticsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            ImagekitModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            OpportunityModule\n                        \n                        \n                            OrganizationModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { SharedModule } from \"./shared/shared.module\";\nimport { UserModule } from \"./user/user.module\";\nimport { OrganizationModule } from \"./organization/organization.module\";\nimport { TagsModule } from \"./tags/tags.module\";\nimport { ImagekitModule } from \"./imagekit/imagekit.module\";\nimport { EventsModule } from \"./events/events.module\";\nimport { NewsModule } from \"./news/news.module\";\nimport { OpportunityModule } from \"./opportunity/opportunities.module\";\nimport { AnalyticsModule } from \"./analytics/analytics.module\";\n\n@Module({\n  imports: [\n    SharedModule,\n    UserModule,\n    AuthModule,\n    OrganizationModule,\n    TagsModule,\n    ImagekitModule,\n    EventsModule,\n    NewsModule,\n    OpportunityModule,\n    AnalyticsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(ctx: RequestContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { AppLogger } from './shared/logger/logger.service';\nimport { RequestContext } from './shared/request-context/request-context.dto';\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly logger: AppLogger) {\n    this.logger.setContext(AppService.name);\n  }\n\n  getHello(ctx: RequestContext): string {\n    this.logger.log(ctx, 'Hello world from App service');\n\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                registerLocal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(ctx: RequestContext, _: LoginInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiOperation({summary: 'User login API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})@HttpCode(HttpStatus.OK)@UseGuards(LocalAuthGuard)@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _\n                                            \n                                                            LoginInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     BaseApiResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(ctx: RequestContext, credential: RefreshTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh-token')@ApiOperation({summary: 'Refresh access token API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})@HttpCode(HttpStatus.OK)@UseGuards(JwtRefreshGuard)@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                credential\n                                            \n                                                            RefreshTokenInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        registerLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerLocal(ctx: RequestContext, input: RegisterInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiOperation({summary: 'User registration API'})@ApiResponse({status: undefined, type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            RegisterInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from '../../shared/dtos/base-api-response.dto';\nimport { AppLogger } from '../../shared/logger/logger.service';\nimport { ReqContext } from '../../shared/request-context/req-context.decorator';\nimport { RequestContext } from '../../shared/request-context/request-context.dto';\nimport { LoginInput } from '../dtos/auth-login-input.dto';\nimport { RefreshTokenInput } from '../dtos/auth-refresh-token-input.dto';\nimport { RegisterInput } from '../dtos/auth-register-input.dto';\nimport { RegisterOutput } from '../dtos/auth-register-output.dto';\nimport { AuthTokenOutput } from '../dtos/auth-token-output.dto';\nimport { JwtRefreshGuard } from '../guards/jwt-refresh.guard';\nimport { LocalAuthGuard } from '../guards/local-auth.guard';\nimport { AuthService } from '../services/auth.service';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly logger: AppLogger,\n  ) {\n    this.logger.setContext(AuthController.name);\n  }\n\n  @Post('login')\n  @ApiOperation({\n    summary: 'User login API',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(AuthTokenOutput),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(LocalAuthGuard)\n  @UseInterceptors(ClassSerializerInterceptor)\n  login(\n    @ReqContext() ctx: RequestContext,\n    @Body() _: LoginInput,\n  ): BaseApiResponse {\n    this.logger.log(ctx, `${this.login.name} was called`);\n\n    const authToken = this.authService.login(ctx);\n    return { data: authToken, meta: {} };\n  }\n\n  @Post('register')\n  @ApiOperation({\n    summary: 'User registration API',\n  })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    type: SwaggerBaseApiResponse(RegisterOutput),\n  })\n  async registerLocal(\n    @ReqContext() ctx: RequestContext,\n    @Body() input: RegisterInput,\n  ): Promise> {\n    const registeredUser = await this.authService.register(ctx, input);\n    return { data: registeredUser, meta: {} };\n  }\n\n  @Post('refresh-token')\n  @ApiOperation({\n    summary: 'Refresh access token API',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(AuthTokenOutput),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(JwtRefreshGuard)\n  @UseInterceptors(ClassSerializerInterceptor)\n  async refreshToken(\n    @ReqContext() ctx: RequestContext,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    @Body() credential: RefreshTokenInput,\n  ): Promise> {\n    this.logger.log(ctx, `${this.refreshToken.name} was called`);\n\n    const authToken = await this.authService.refreshToken(ctx);\n    return { data: authToken, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nAuthModule -->\n\nJwtAuthStrategy->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtAuthStrategy\n                        \n                        \n                            JwtRefreshStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { UserModule } from '../user/user.module';\nimport { STRATEGY_JWT_AUTH } from './constants/strategy.constant';\nimport { AuthController } from './controllers/auth.controller';\nimport { AuthService } from './services/auth.service';\nimport { JwtAuthStrategy } from './strategies/jwt-auth.strategy';\nimport { JwtRefreshStrategy } from './strategies/jwt-refresh.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\n\n@Module({\n  imports: [\n    SharedModule,\n    PassportModule.register({ defaultStrategy: STRATEGY_JWT_AUTH }),\n    JwtModule.registerAsync({\n      imports: [SharedModule],\n      useFactory: async (configService: ConfigService) => ({\n        publicKey: configService.get('jwt.publicKey'),\n        privateKey: configService.get('jwt.privateKey'),\n        signOptions: {\n          algorithm: 'RS256',\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    UserModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtAuthStrategy, JwtRefreshStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthToken\n                            \n                            \n                                login\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, configService: ConfigService, logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthToken\n                        \n                    \n                \n            \n            \n                \ngetAuthToken(ctx: RequestContext, user: UserAccessTokenClaims | UserOutput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                        UserAccessTokenClaims | UserOutput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthTokenOutput\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(ctx: RequestContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthTokenOutput\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(ctx: RequestContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(ctx: RequestContext, input: RegisterInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            RegisterInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(ctx: RequestContext, email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { plainToClass } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { UserService } from \"../../user/services/user.service\";\nimport { ROLE } from \"../constants/role.constant\";\nimport { RegisterInput } from \"../dtos/auth-register-input.dto\";\nimport { RegisterOutput } from \"../dtos/auth-register-output.dto\";\nimport {\n  AuthTokenOutput,\n  UserAccessTokenClaims,\n} from \"../dtos/auth-token-output.dto\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(AuthService.name);\n  }\n\n  async validateUser(\n    ctx: RequestContext,\n    email: string,\n    pass: string\n  ): Promise {\n    this.logger.log(ctx, `${this.validateUser.name} was called`);\n\n    // The userService will throw Unauthorized in case of invalid username/password.\n    const user = await this.userService.validateUsernamePassword(\n      ctx,\n      email,\n      pass\n    );\n\n    // Prevent disabled users from logging in.\n    if (!user.isAccountVerified) {\n      throw new UnauthorizedException(\"This account is not verified!\");\n    }\n\n    return user;\n  }\n\n  login(ctx: RequestContext): AuthTokenOutput {\n    this.logger.log(ctx, `${this.login.name} was called`);\n    return this.getAuthToken(ctx, ctx.user!);\n  }\n\n  async register(\n    ctx: RequestContext,\n    input: RegisterInput\n  ): Promise {\n    this.logger.log(ctx, `${this.register.name} was called`);\n\n    // TODO : Setting default role as USER here. Will add option to change this later via ADMIN users.\n    input.roles = [ROLE.USER];\n    input.isAccountDisabled = false;\n\n    const registeredUser = await this.userService.createUser(ctx, input);\n    return plainToClass(RegisterOutput, registeredUser, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async refreshToken(ctx: RequestContext): Promise {\n    this.logger.log(ctx, `${this.refreshToken.name} was called`);\n\n    const user = await this.userService.findById(ctx, ctx.user!.id);\n    if (!user) {\n      throw new UnauthorizedException(\"Invalid user id\");\n    }\n\n    return this.getAuthToken(ctx, user);\n  }\n\n  getAuthToken(\n    ctx: RequestContext,\n    user: UserAccessTokenClaims | UserOutput\n  ): AuthTokenOutput {\n    this.logger.log(ctx, `${this.getAuthToken.name} was called`);\n\n    const subject = { sub: user.id };\n    const payload = {\n      id: user.id,\n      email: user.email,\n    };\n\n    const authToken = {\n      refreshToken: this.jwtService.sign(subject, {\n        expiresIn: this.configService.get(\"jwt.refreshTokenExpiresInSec\"),\n      }),\n      accessToken: this.jwtService.sign(\n        { ...payload, ...subject },\n        { expiresIn: this.configService.get(\"jwt.accessTokenExpiresInSec\") }\n      ),\n    };\n    return plainToClass(AuthTokenOutput, authToken, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthTokenApiResponse.html":{"url":"classes/AuthTokenApiResponse.html","title":"class - AuthTokenApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthTokenApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthTokenOutput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:111\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthTokenOutput.html":{"url":"classes/AuthTokenOutput.html","title":"class - AuthTokenOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthTokenOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-token-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nexport class AuthTokenOutput {\n  @Expose()\n  @ApiProperty()\n  accessToken: string;\n\n  @Expose()\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class UserAccessTokenClaims {\n  @Expose()\n  id: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  fullName: string;\n\n  @Expose()\n  isSuperAdmin: boolean;\n\n  @Expose()\n  isAccountVerified: boolean;\n\n  @Expose()\n  gender: string | null;\n\n  @Expose()\n  phoneCountryCode: string | null;\n\n  @Expose()\n  phoneNumber: string | null;\n}\n\nexport class UserRefreshTokenClaims {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseAclService.html":{"url":"classes/BaseAclService.html","title":"class - BaseAclService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseAclService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/acl/acl.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                aclRules\n                            \n                            \n                                    Public\n                                forActor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                canDo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        aclRules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AclRule[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/shared/acl/acl.service.ts:10\n                        \n                    \n\n            \n                \n                    ACL rules\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forActor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/shared/acl/acl.service.ts:28\n                        \n                    \n\n            \n                \n                    create user specific acl object to check ability to perform any action\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        canDo\n                        \n                    \n                \n            \n            \n                \n                        \n                    canDo(role: ROLE, actions: Action[], ruleCallback?: RuleCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/acl/acl.service.ts:15\n                        \n                    \n\n\n            \n                \n                        Set ACL rule for a role\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            ROLE\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actions\n                                            \n                                                            Action[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ruleCallback\n                                            \n                                                            RuleCallback\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ROLE } from './../../auth/constants/role.constant';\nimport { AclRule, RuleCallback } from './acl-rule.constant';\nimport { Action } from './action.constant';\nimport { Actor } from './actor.constant';\n\nexport class BaseAclService {\n  /**\n   * ACL rules\n   */\n  protected aclRules: AclRule[] = [];\n\n  /**\n   * Set ACL rule for a role\n   */\n  protected canDo(\n    role: ROLE,\n    actions: Action[],\n    ruleCallback?: RuleCallback,\n  ): void {\n    ruleCallback\n      ? this.aclRules.push({ role, actions, ruleCallback })\n      : this.aclRules.push({ role, actions });\n  }\n\n  /**\n   * create user specific acl object to check ability to perform any action\n   */\n  public forActor = (actor: Actor): any => {\n    return {\n      canDoAction: (action: Action, resource?: Resource) => {\n        let canDoAction = false;\n\n        actor.roles.forEach((actorRole) => {\n          //If already has access, return\n          if (canDoAction) return true;\n\n          //find all rules for given user role\n          const aclRules = this.aclRules.filter(\n            (rule) => rule.role === actorRole,\n          );\n\n          //for each rule, check action permission\n          aclRules.forEach((aclRule) => {\n            //If already has access, return\n            if (canDoAction) return true;\n\n            //check action permission\n            const hasActionPermission =\n              aclRule.actions.includes(action) ||\n              aclRule.actions.includes(Action.Manage);\n\n            //check for custom `ruleCallback` callback\n            if (!aclRule.ruleCallback) {\n              canDoAction = hasActionPermission;\n            } else {\n              if (!resource) {\n                throw new Error('Resource is required for ruleCallback');\n              }\n\n              canDoAction =\n                hasActionPermission && aclRule.ruleCallback(resource, actor);\n            }\n          });\n        });\n\n        return canDoAction;\n      },\n    };\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseApiErrorObject.html":{"url":"classes/BaseApiErrorObject.html","title":"class - BaseApiErrorObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseApiErrorObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/base-api-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                details\n                            \n                            \n                                    \n                                    Public\n                                errorName\n                            \n                            \n                                    \n                                    Public\n                                localizedMessage\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    Public\n                                requestId\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        errorName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        localizedMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        requestId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:136\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport {\n  ApiProperty,\n  ApiPropertyOptional,\n  getSchemaPath,\n} from \"@nestjs/swagger\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { EventResponseDto } from \"../../events/dto/events.dto\";\nimport { OrganizationResponseDto } from \"../../organization/dto/organization.dto\";\nimport { OpportunityResponseDto } from \"../../opportunity/dto/opportunities.dto\";\nimport { AuthTokenOutput } from \"../../auth/dtos/auth-token-output.dto\";\nimport { RegisterOutput } from \"../../auth/dtos/auth-register-output.dto\";\nimport { ImagekitResponseDto } from \"../../imagekit/imagekit.dto\";\nimport {\n  UserApiResponse,\n  UserArrayApiResponse,\n  TagApiResponse,\n  TagArrayApiResponse,\n  EventApiResponse,\n  EventArrayApiResponse,\n  OrganizationApiResponse,\n  OrganizationArrayApiResponse,\n  OpportunityApiResponse,\n  OpportunityArrayApiResponse,\n  AuthTokenApiResponse,\n  RegisterApiResponse,\n  ImagekitApiResponse,\n} from \"./specific-api-responses.dto\";\n\n// Keeping this for backward compatibility\nexport class BaseApiResponse {\n  public data: T;\n\n  @ApiProperty({ type: Object })\n  public meta: Record = {};\n}\n\n// API property type definition\ntype ApiPropertyType =\n  | Type\n  | Function\n  | [Function]\n  | string\n  | number\n  | boolean;\n\n// Type mapping dictionary - maps type names to response classes\ninterface TypeMapping {\n  [key: string]: any;\n}\n\n// Non-generic response type mapping\nconst responseTypeMap: TypeMapping = {\n  UserOutput: UserApiResponse,\n  \"UserOutput[]\": UserArrayApiResponse,\n  TagOutputDto: TagApiResponse,\n  \"TagOutputDto[]\": TagArrayApiResponse,\n  EventResponseDto: EventApiResponse,\n  \"EventResponseDto[]\": EventArrayApiResponse,\n  OrganizationResponseDto: OrganizationApiResponse,\n  \"OrganizationResponseDto[]\": OrganizationArrayApiResponse,\n  OpportunityResponseDto: OpportunityApiResponse,\n  \"OpportunityResponseDto[]\": OpportunityArrayApiResponse,\n  AuthTokenOutput: AuthTokenApiResponse,\n  RegisterOutput: RegisterApiResponse,\n  ImagekitResponseDto: ImagekitApiResponse,\n};\n\n/**\n * Returns a proper OpenAPI compatible response class\n * This function avoids using generics in OpenAPI schema generation\n */\nexport function SwaggerBaseApiResponse(\n  type: T\n): any {\n  let typeName: string;\n  if (Array.isArray(type)) {\n    typeName = `${type[0].name}[]`;\n  } else if (typeof type === \"function\") {\n    typeName = (type as Function).name;\n  } else {\n    typeName = String(type);\n  }\n\n  if (responseTypeMap[typeName]) {\n    return responseTypeMap[typeName];\n  }\n\n  const className = `ApiResponseOf${typeName.replace(\"[]\", \"Array\")}`;\n\n  class CustomApiResponse extends BaseApiResponse {\n    @ApiProperty(\n      Array.isArray(type)\n        ? {\n            type: \"array\",\n            items: {\n              $ref: getSchemaPath(type[0]),\n            },\n          }\n        : { type: type as any }\n    )\n    public declare data: any;\n  }\n\n  Object.defineProperty(CustomApiResponse, \"name\", {\n    value: className,\n  });\n\n  return CustomApiResponse;\n}\n\nexport class BaseApiErrorObject {\n  @ApiProperty({ type: Number })\n  public statusCode: number;\n\n  @ApiProperty({ type: String })\n  public message: string;\n\n  @ApiPropertyOptional({ type: String })\n  public localizedMessage: string;\n\n  @ApiProperty({ type: String })\n  public errorName: string;\n\n  @ApiProperty({ type: Object })\n  public details: unknown;\n\n  @ApiProperty({ type: String })\n  public path: string;\n\n  @ApiProperty({ type: String })\n  public requestId: string;\n\n  @ApiProperty({ type: String })\n  public timestamp: string;\n}\n\nexport class BaseApiErrorResponse {\n  @ApiProperty({ type: BaseApiErrorObject })\n  public error: BaseApiErrorObject;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseApiErrorResponse.html":{"url":"classes/BaseApiErrorResponse.html","title":"class - BaseApiErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseApiErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/base-api-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                error\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseApiErrorObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: BaseApiErrorObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:141\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport {\n  ApiProperty,\n  ApiPropertyOptional,\n  getSchemaPath,\n} from \"@nestjs/swagger\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { EventResponseDto } from \"../../events/dto/events.dto\";\nimport { OrganizationResponseDto } from \"../../organization/dto/organization.dto\";\nimport { OpportunityResponseDto } from \"../../opportunity/dto/opportunities.dto\";\nimport { AuthTokenOutput } from \"../../auth/dtos/auth-token-output.dto\";\nimport { RegisterOutput } from \"../../auth/dtos/auth-register-output.dto\";\nimport { ImagekitResponseDto } from \"../../imagekit/imagekit.dto\";\nimport {\n  UserApiResponse,\n  UserArrayApiResponse,\n  TagApiResponse,\n  TagArrayApiResponse,\n  EventApiResponse,\n  EventArrayApiResponse,\n  OrganizationApiResponse,\n  OrganizationArrayApiResponse,\n  OpportunityApiResponse,\n  OpportunityArrayApiResponse,\n  AuthTokenApiResponse,\n  RegisterApiResponse,\n  ImagekitApiResponse,\n} from \"./specific-api-responses.dto\";\n\n// Keeping this for backward compatibility\nexport class BaseApiResponse {\n  public data: T;\n\n  @ApiProperty({ type: Object })\n  public meta: Record = {};\n}\n\n// API property type definition\ntype ApiPropertyType =\n  | Type\n  | Function\n  | [Function]\n  | string\n  | number\n  | boolean;\n\n// Type mapping dictionary - maps type names to response classes\ninterface TypeMapping {\n  [key: string]: any;\n}\n\n// Non-generic response type mapping\nconst responseTypeMap: TypeMapping = {\n  UserOutput: UserApiResponse,\n  \"UserOutput[]\": UserArrayApiResponse,\n  TagOutputDto: TagApiResponse,\n  \"TagOutputDto[]\": TagArrayApiResponse,\n  EventResponseDto: EventApiResponse,\n  \"EventResponseDto[]\": EventArrayApiResponse,\n  OrganizationResponseDto: OrganizationApiResponse,\n  \"OrganizationResponseDto[]\": OrganizationArrayApiResponse,\n  OpportunityResponseDto: OpportunityApiResponse,\n  \"OpportunityResponseDto[]\": OpportunityArrayApiResponse,\n  AuthTokenOutput: AuthTokenApiResponse,\n  RegisterOutput: RegisterApiResponse,\n  ImagekitResponseDto: ImagekitApiResponse,\n};\n\n/**\n * Returns a proper OpenAPI compatible response class\n * This function avoids using generics in OpenAPI schema generation\n */\nexport function SwaggerBaseApiResponse(\n  type: T\n): any {\n  let typeName: string;\n  if (Array.isArray(type)) {\n    typeName = `${type[0].name}[]`;\n  } else if (typeof type === \"function\") {\n    typeName = (type as Function).name;\n  } else {\n    typeName = String(type);\n  }\n\n  if (responseTypeMap[typeName]) {\n    return responseTypeMap[typeName];\n  }\n\n  const className = `ApiResponseOf${typeName.replace(\"[]\", \"Array\")}`;\n\n  class CustomApiResponse extends BaseApiResponse {\n    @ApiProperty(\n      Array.isArray(type)\n        ? {\n            type: \"array\",\n            items: {\n              $ref: getSchemaPath(type[0]),\n            },\n          }\n        : { type: type as any }\n    )\n    public declare data: any;\n  }\n\n  Object.defineProperty(CustomApiResponse, \"name\", {\n    value: className,\n  });\n\n  return CustomApiResponse;\n}\n\nexport class BaseApiErrorObject {\n  @ApiProperty({ type: Number })\n  public statusCode: number;\n\n  @ApiProperty({ type: String })\n  public message: string;\n\n  @ApiPropertyOptional({ type: String })\n  public localizedMessage: string;\n\n  @ApiProperty({ type: String })\n  public errorName: string;\n\n  @ApiProperty({ type: Object })\n  public details: unknown;\n\n  @ApiProperty({ type: String })\n  public path: string;\n\n  @ApiProperty({ type: String })\n  public requestId: string;\n\n  @ApiProperty({ type: String })\n  public timestamp: string;\n}\n\nexport class BaseApiErrorResponse {\n  @ApiProperty({ type: BaseApiErrorObject })\n  public error: BaseApiErrorObject;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseApiException.html":{"url":"classes/BaseApiException.html","title":"class - BaseApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/exceptions/base-api.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                details\n                            \n                            \n                                    Public\n                                localizedMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, status: number, details?: string | Record, localizedMessage?: Record)\n                    \n                \n                        \n                            \n                                Defined in src/shared/exceptions/base-api.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    string | Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedMessage\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | Record | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/exceptions/base-api.exception.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        localizedMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/exceptions/base-api.exception.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class BaseApiException extends HttpException {\n  public localizedMessage: Record | undefined;\n  public details: string | Record | undefined;\n\n  constructor(\n    message: string,\n    status: number,\n    details?: string | Record,\n    localizedMessage?: Record,\n  ) {\n    // Calling parent constructor of base Exception class.\n    super(message, status);\n    this.name = BaseApiException.name;\n    this.localizedMessage = localizedMessage;\n    this.details = details;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseApiResponse.html":{"url":"classes/BaseApiResponse.html","title":"class - BaseApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/base-api-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/base-api-response.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport {\n  ApiProperty,\n  ApiPropertyOptional,\n  getSchemaPath,\n} from \"@nestjs/swagger\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { EventResponseDto } from \"../../events/dto/events.dto\";\nimport { OrganizationResponseDto } from \"../../organization/dto/organization.dto\";\nimport { OpportunityResponseDto } from \"../../opportunity/dto/opportunities.dto\";\nimport { AuthTokenOutput } from \"../../auth/dtos/auth-token-output.dto\";\nimport { RegisterOutput } from \"../../auth/dtos/auth-register-output.dto\";\nimport { ImagekitResponseDto } from \"../../imagekit/imagekit.dto\";\nimport {\n  UserApiResponse,\n  UserArrayApiResponse,\n  TagApiResponse,\n  TagArrayApiResponse,\n  EventApiResponse,\n  EventArrayApiResponse,\n  OrganizationApiResponse,\n  OrganizationArrayApiResponse,\n  OpportunityApiResponse,\n  OpportunityArrayApiResponse,\n  AuthTokenApiResponse,\n  RegisterApiResponse,\n  ImagekitApiResponse,\n} from \"./specific-api-responses.dto\";\n\n// Keeping this for backward compatibility\nexport class BaseApiResponse {\n  public data: T;\n\n  @ApiProperty({ type: Object })\n  public meta: Record = {};\n}\n\n// API property type definition\ntype ApiPropertyType =\n  | Type\n  | Function\n  | [Function]\n  | string\n  | number\n  | boolean;\n\n// Type mapping dictionary - maps type names to response classes\ninterface TypeMapping {\n  [key: string]: any;\n}\n\n// Non-generic response type mapping\nconst responseTypeMap: TypeMapping = {\n  UserOutput: UserApiResponse,\n  \"UserOutput[]\": UserArrayApiResponse,\n  TagOutputDto: TagApiResponse,\n  \"TagOutputDto[]\": TagArrayApiResponse,\n  EventResponseDto: EventApiResponse,\n  \"EventResponseDto[]\": EventArrayApiResponse,\n  OrganizationResponseDto: OrganizationApiResponse,\n  \"OrganizationResponseDto[]\": OrganizationArrayApiResponse,\n  OpportunityResponseDto: OpportunityApiResponse,\n  \"OpportunityResponseDto[]\": OpportunityArrayApiResponse,\n  AuthTokenOutput: AuthTokenApiResponse,\n  RegisterOutput: RegisterApiResponse,\n  ImagekitResponseDto: ImagekitApiResponse,\n};\n\n/**\n * Returns a proper OpenAPI compatible response class\n * This function avoids using generics in OpenAPI schema generation\n */\nexport function SwaggerBaseApiResponse(\n  type: T\n): any {\n  let typeName: string;\n  if (Array.isArray(type)) {\n    typeName = `${type[0].name}[]`;\n  } else if (typeof type === \"function\") {\n    typeName = (type as Function).name;\n  } else {\n    typeName = String(type);\n  }\n\n  if (responseTypeMap[typeName]) {\n    return responseTypeMap[typeName];\n  }\n\n  const className = `ApiResponseOf${typeName.replace(\"[]\", \"Array\")}`;\n\n  class CustomApiResponse extends BaseApiResponse {\n    @ApiProperty(\n      Array.isArray(type)\n        ? {\n            type: \"array\",\n            items: {\n              $ref: getSchemaPath(type[0]),\n            },\n          }\n        : { type: type as any }\n    )\n    public declare data: any;\n  }\n\n  Object.defineProperty(CustomApiResponse, \"name\", {\n    value: className,\n  });\n\n  return CustomApiResponse;\n}\n\nexport class BaseApiErrorObject {\n  @ApiProperty({ type: Number })\n  public statusCode: number;\n\n  @ApiProperty({ type: String })\n  public message: string;\n\n  @ApiPropertyOptional({ type: String })\n  public localizedMessage: string;\n\n  @ApiProperty({ type: String })\n  public errorName: string;\n\n  @ApiProperty({ type: Object })\n  public details: unknown;\n\n  @ApiProperty({ type: String })\n  public path: string;\n\n  @ApiProperty({ type: String })\n  public requestId: string;\n\n  @ApiProperty({ type: String })\n  public timestamp: string;\n}\n\nexport class BaseApiErrorResponse {\n  @ApiProperty({ type: BaseApiErrorObject })\n  public error: BaseApiErrorObject;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEventDto.html":{"url":"classes/CreateEventDto.html","title":"class - CreateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/events.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                gallery\n                            \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                locationType\n                            \n                            \n                                    \n                                    \n                                organizer\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationLink\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event description', example: 'A leading technology company'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        gallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Gallery iamges', required: false, example: '5551234567'})@ValidateNested({each: true})@Type(undefined)@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        registrationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        registrationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'link', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event name', example: 'Tech Innovations'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class EventsSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsOptional()\n  @IsString()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer?: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  type?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  format?: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Event status\",\n  })\n  @IsBoolean()\n  @IsOptional()\n  isDraft?: boolean;\n}\n\nexport class EventResponseDto {\n  @ApiProperty({\n    description: \"Event id\",\n    example: \"abcd\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  eventGallery: GalleryResponse[];\n\n  @ApiProperty({ description: \"Draft status\" })\n  @Expose()\n  isDraft: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsDto.html":{"url":"classes/CreateNewsDto.html","title":"class - CreateNewsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/dto/news.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                mode\n                            \n                            \n                                    \n                                    \n                                newsLink\n                            \n                            \n                                    \n                                    \n                                publishedDate\n                            \n                            \n                                    \n                                    \n                                source\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/news-banner.jpg'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News mode', example: 'Online'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newsLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News link', example: 'https://example.com/news-article'})@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Published date', example: '2025-04-15T00:00:00.000Z'})@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News source', example: 'Tech News Portal'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News title', example: 'New Technology Breakthrough'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsDate,\n  IsDateString,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { Expose } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\n\nexport class NewsSearchInput extends PaginationParamsDto {\n  @ApiProperty({ required: false })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsArray()\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class CreateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n    example: \"2025-04-15T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsUrl()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @IsOptional()\n  mode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Published date\",\n  })\n  @IsOptional()\n  publishedDate?: Date;\n\n  @ApiPropertyOptional({\n    description: \"Published year\",\n  })\n  @IsOptional()\n  publishedYear?: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @IsOptional()\n  newsLink?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n}\n\nexport class NewsResponseDto {\n  @ApiProperty({\n    description: \"News ID\",\n    example: \"clgf7xhig0000qof3m53ibdz1\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @Expose()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @Expose()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n  })\n  @Expose()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n  })\n  @Expose()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @Expose()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiProperty({\n    description: \"Created at\",\n  })\n  @Expose()\n  createdAt: Date;\n\n  @ApiProperty({\n    description: \"Updated at\",\n  })\n  @Expose()\n  updatedAt: Date;\n\n  @ApiPropertyOptional({\n    description: \"Deleted at\",\n  })\n  @IsOptional()\n  @Expose()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOpportunityDto.html":{"url":"classes/CreateOpportunityDto.html","title":"class - CreateOpportunityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOpportunityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/dto/opportunities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                applicationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                duration\n                            \n                            \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                locationType\n                            \n                            \n                                    \n                                    \n                                organizer\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        applicationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity description', example: 'A leading technology company'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'duration', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'opportunity format'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity name', example: 'The Green Fellows Program'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity type'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OpportunitySearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"The Green Fellows Program\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"opportunity format\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"duration\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  duration?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OpportunityResponseDto {\n  @ApiProperty({\n    description: \"Opportunity ID\",\n    example: \"cm92hbrpe00049kz8bwoaz1rh\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  OpportunityGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganizationDto.html":{"url":"classes/CreateOrganizationDto.html","title":"class - CreateOrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/dto/organization.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                gallery\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                logoImageId\n                            \n                            \n                                    \n                                    \n                                logoImageUrl\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneCountryCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization description', example: 'A leading technology company'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization email', example: 'contact@techinnovations.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        gallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Gallery iamges', required: false, example: '5551234567'})@ValidateNested({each: true})@Type(undefined)@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        logoImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Logo image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logoImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Logo image URL', example: 'https://example.com/org-logo.jpg'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization name', example: 'Tech Innovations Inc.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneCountryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone country code', required: false, example: '+1'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone number', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:120\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OrganizationSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  logoImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OrganizationResponseDto {\n  @ApiProperty({\n    description: \"Organization id\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @Expose()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @Expose()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @Expose()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @Expose()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  organizationGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user-create-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                isAccountDisabled\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()@MaxLength(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isAccountDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@Length(6, 100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ROLE[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()@ArrayNotEmpty()@IsEnum(ROLE, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Length(6, 100)@IsAlphanumeric()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-create-input.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  ArrayNotEmpty,\n  IsAlphanumeric,\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n  MaxLength,\n} from 'class-validator';\n\nimport { ROLE } from '../../auth/constants/role.constant';\n\nexport class CreateUserInput {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Length(6, 100)\n  @IsAlphanumeric()\n  username: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @Length(6, 100)\n  password: string;\n\n  @ApiProperty()\n  @IsArray()\n  @ArrayNotEmpty()\n  @IsEnum(ROLE, { each: true })\n  roles: ROLE[];\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  @MaxLength(100)\n  email: string;\n\n  @ApiProperty()\n  @IsBoolean()\n  isAccountDisabled: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventApiResponse.html":{"url":"classes/EventApiResponse.html","title":"class - EventApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventArrayApiResponse.html":{"url":"classes/EventArrayApiResponse.html","title":"class - EventArrayApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventArrayApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventResponseDto.html":{"url":"classes/EventResponseDto.html","title":"class - EventResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/events.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                eventGallery\n                            \n                            \n                                    \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isDraft\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                locationType\n                            \n                            \n                                    \n                                    \n                                    \n                                organizer\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationLink\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:470\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:462\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:456\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:430\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:396\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:448\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event description', example: 'A leading technology company'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:361\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        eventGallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Gallery', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:483\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:389\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event id', example: 'abcd'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:338\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Draft status'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:487\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:368\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:375\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:353\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        registrationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:412\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        registrationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'link', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:421\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:475\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:404\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:439\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags IDs', type: undefined, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:479\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event name', example: 'Tech Innovations'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:346\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:382\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class EventsSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsOptional()\n  @IsString()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer?: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  type?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  format?: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Event status\",\n  })\n  @IsBoolean()\n  @IsOptional()\n  isDraft?: boolean;\n}\n\nexport class EventResponseDto {\n  @ApiProperty({\n    description: \"Event id\",\n    example: \"abcd\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  eventGallery: GalleryResponse[];\n\n  @ApiProperty({ description: \"Draft status\" })\n  @Expose()\n  isDraft: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventsController.html":{"url":"controllers/EventsController.html","title":"controller - EventsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/controllers/events.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                events\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addEvent\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteEvent\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getEvents\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOneEvent\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    addEvent(ctx: RequestContext, payload: CreateEventDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Post()@ApiOperation({summary: 'Add events API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/events/controllers/events.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateEventDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEvent(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Delete('/:id')@ApiOperation({summary: 'Delete one events API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/events/controllers/events.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEvents(ctx: RequestContext, query: EventsSearchInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get events API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/events/controllers/events.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            EventsSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOneEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneEvent(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get('/:id')@ApiOperation({summary: 'Get one events API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/events/controllers/events.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEvent(ctx: RequestContext, id: string, payload: UpdateEventDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Patch('/:id')@ApiOperation({summary: 'Update one events API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/events/controllers/events.controller.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateEventDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { EventsService } from \"../services/events.service\";\nimport {\n  CreateEventDto,\n  EventResponseDto,\n  EventsSearchInput,\n  UpdateEventDto,\n} from \"../dto/events.dto\";\n\n@ApiTags(\"events\")\n@Controller(\"events\")\nexport class EventsController {\n  constructor(\n    private readonly eventsService: EventsService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(EventsController.name);\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get events API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([EventResponseDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getEvents(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: EventsSearchInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.getEvents.name} was called`);\n\n    const { events, count } = await this.eventsService.getEvents(ctx, query);\n    return { data: events, meta: { count } };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post()\n  @ApiOperation({\n    summary: \"Add events API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(EventResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async addEvent(\n    @ReqContext() ctx: RequestContext,\n    @Body() payload: CreateEventDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.addEvent.name} was called`);\n\n    const event = await this.eventsService.addEvent(ctx, payload);\n    return { data: event, meta: {} };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"/:id\")\n  @ApiOperation({\n    summary: \"Get one events API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(EventResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOneEvent(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOneEvent.name} was called`);\n\n    const event = await this.eventsService.getOneEvent(ctx, id);\n    return { data: event, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Delete(\"/:id\")\n  @ApiOperation({\n    summary: \"Delete one events API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(EventResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async deleteEvent(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.deleteEvent.name} was called`);\n\n    const event = await this.eventsService.deleteEvent(ctx, id);\n    return { data: event, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Patch(\"/:id\")\n  @ApiOperation({\n    summary: \"Update one events API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(EventResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async updateEvent(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string,\n    @Body() payload: UpdateEventDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.updateEvent.name} was called`);\n\n    console.log(\"body payload\", payload);\n\n    const event = await this.eventsService.updateEvent(ctx, id, payload);\n    return { data: event, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nEventsModule -->\n\nJwtAuthStrategy->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/events/events.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EventsService\n                        \n                        \n                            JwtAuthStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EventsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { JwtAuthStrategy } from \"../auth/strategies/jwt-auth.strategy\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { EventsService } from \"./services/events.service\";\nimport { EventsController } from \"./controllers/events.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [EventsService, JwtAuthStrategy],\n  controllers: [EventsController],\n})\nexport class EventsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventsSearchInput.html":{"url":"classes/EventsSearchInput.html","title":"class - EventsSearchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventsSearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/events.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationParamsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: undefined})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class EventsSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsOptional()\n  @IsString()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer?: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  type?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  format?: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Event status\",\n  })\n  @IsBoolean()\n  @IsOptional()\n  isDraft?: boolean;\n}\n\nexport class EventResponseDto {\n  @ApiProperty({\n    description: \"Event id\",\n    example: \"abcd\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  eventGallery: GalleryResponse[];\n\n  @ApiProperty({ description: \"Draft status\" })\n  @Expose()\n  isDraft: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/services/events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addEvent\n                            \n                            \n                                    Async\n                                deleteEvent\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                            \n                                    Async\n                                getOneEvent\n                            \n                            \n                                    Async\n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/events/services/events.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    addEvent(ctx: RequestContext, payload: CreateEventDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/services/events.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateEventDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEvent(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/services/events.service.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEvents(ctx: RequestContext, query: EventsSearchInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/services/events.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            EventsSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneEvent(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/services/events.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEvent(ctx: RequestContext, id: string, payload: UpdateEventDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/services/events.service.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateEventDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { plainToClass, plainToInstance } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport {\n  CreateEventDto,\n  EventResponseDto,\n  EventsSearchInput,\n  UpdateEventDto,\n} from \"../dto/events.dto\";\nimport { applyFilters } from \"../../shared/filters/prisma-filter.filter\";\nimport { Prisma } from \"@prisma/client\";\nimport { createSearchKey } from \"../../shared/utils/createSearchKey\";\n\n@Injectable()\nexport class EventsService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(EventsService.name);\n  }\n\n  async getEvents(\n    ctx: RequestContext,\n    query: EventsSearchInput\n  ): Promise {\n    this.logger.log(ctx, `${this.getEvents.name} was called`);\n    const { limit, offset, ...restQuery } = query;\n\n    const { whereBuilder: whereQuery } =\n      await applyFilters({\n        appliedFiltersInput: restQuery,\n        availableFilters: {\n          title: async ({ filter }) => {\n            const searchKey = createSearchKey(String(filter), \"AND\");\n            return {\n              where: {\n                OR: [\n                  {\n                    title: {\n                      search: searchKey,\n                      mode: \"insensitive\",\n                    },\n                  },\n                  {\n                    title: {\n                      contains: String(filter),\n                      mode: \"insensitive\",\n                    },\n                  },\n                ],\n              },\n            };\n          },\n          tagIds: async ({ filter }) => {\n            return {\n              where: {\n                tags: {\n                  some: {\n                    id: {\n                      in: filter as string[],\n                    },\n                  },\n                },\n              },\n            };\n          },\n        },\n      });\n\n    const events = await this.prismaService.events.findMany({\n      where: {\n        AND: [whereQuery],\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n      },\n      take: limit,\n      skip: offset,\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    const eventCount = await this.prismaService.events.count({\n      where: {\n        AND: [whereQuery],\n      },\n    });\n\n    return {\n      events: plainToInstance(EventResponseDto, events, {\n        excludeExtraneousValues: true,\n      }),\n      count: eventCount,\n    };\n  }\n\n  async getOneEvent(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.getOneEvent.name} was called`);\n\n    const event = await this.prismaService.events.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n        eventGallery: true,\n      },\n    });\n\n    if (!event) {\n      throw new NotFoundException(\"Event not found\");\n    }\n\n    return plainToInstance(EventResponseDto, event, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async addEvent(\n    ctx: RequestContext,\n    payload: CreateEventDto\n  ): Promise {\n    this.logger.log(ctx, `${this.addEvent.name} was called`);\n    const { address, tagIds, gallery, socials, ...restPayload } = payload;\n\n    const event = await this.prismaService.events.create({\n      data: {\n        ...restPayload,\n        ...(address && {\n          address: {\n            create: {\n              ...address,\n            },\n          },\n        }),\n        ...(tagIds && {\n          tags: {\n            connect: tagIds?.map((id) => ({\n              id,\n              isEventTag: true,\n            })),\n          },\n        }),\n        ...(gallery && {\n          eventGallery: {\n            create: gallery,\n          },\n        }),\n        ...(socials && {\n          socials: {\n            create: {\n              data: JSON.parse(JSON.stringify(socials)),\n            },\n          },\n        }),\n      },\n    });\n\n    return plainToClass(EventResponseDto, event, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async deleteEvent(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.deleteEvent.name} was called`);\n\n    const event = await this.prismaService.events.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!event) {\n      throw new NotFoundException(\"Event not found\");\n    }\n\n    await this.prismaService.events.delete({\n      where: {\n        id: event.id,\n      },\n    });\n\n    return plainToInstance(EventResponseDto, event, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async updateEvent(\n    ctx: RequestContext,\n    id: string,\n    payload: UpdateEventDto\n  ): Promise {\n    this.logger.log(ctx, `${this.updateEvent.name} was called`);\n    const event = await this.prismaService.events.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!event) {\n      throw new NotFoundException(\"Event not found!\");\n    }\n\n    const { address, tagIds, gallery, socials, ...restPayload } = payload;\n\n    const eventUpdate = await this.prismaService.events.update({\n      where: {\n        id: event.id,\n      },\n      data: {\n        ...restPayload,\n        ...(socials && {\n          socials: {\n            upsert: {\n              create: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n              update: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n            },\n          },\n        }),\n        ...(address && {\n          address: {\n            upsert: {\n              create: address,\n              update: address,\n            },\n          },\n        }),\n        ...(tagIds && {\n          tags: {\n            //set empty then create new records\n            // do not use deletemany here since it maybe used elsewhere\n            set: [],\n            connect: tagIds?.map((id) => ({\n              id,\n              isEventTag: true,\n            })),\n          },\n        }),\n        ...(gallery && {\n          eventGallery: {\n            deleteMany: {},\n            create: gallery,\n          },\n        }),\n      },\n    });\n\n    return plainToClass(EventResponseDto, eventUpdate, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GalleryInput.html":{"url":"classes/GalleryInput.html","title":"class - GalleryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GalleryInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/gallery.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                publicUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sourceId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Public URL'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Source id'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\nimport { IsString } from \"class-validator\";\n\nexport class GalleryInput {\n  @ApiProperty({\n    description: \"Source id\",\n  })\n  @IsString()\n  sourceId?: string;\n\n  @ApiProperty({\n    description: \"Public URL\",\n  })\n  @IsString()\n  publicUrl: string;\n}\n\nexport class GalleryResponse {\n  @Expose()\n  id: string;\n\n  @Expose()\n  sourceId: string;\n\n  @Expose()\n  publicUrl: string;\n\n  @Expose()\n  createdAt: string;\n\n  @Expose()\n  updatedAt: string;\n\n  @Expose()\n  deletedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GalleryResponse.html":{"url":"classes/GalleryResponse.html","title":"class - GalleryResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GalleryResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/gallery.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                publicUrl\n                            \n                            \n                                    \n                                sourceId\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        publicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/gallery.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\nimport { IsString } from \"class-validator\";\n\nexport class GalleryInput {\n  @ApiProperty({\n    description: \"Source id\",\n  })\n  @IsString()\n  sourceId?: string;\n\n  @ApiProperty({\n    description: \"Public URL\",\n  })\n  @IsString()\n  publicUrl: string;\n}\n\nexport class GalleryResponse {\n  @Expose()\n  id: string;\n\n  @Expose()\n  sourceId: string;\n\n  @Expose()\n  publicUrl: string;\n\n  @Expose()\n  createdAt: string;\n\n  @Expose()\n  updatedAt: string;\n\n  @Expose()\n  deletedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagekitApiResponse.html":{"url":"classes/ImagekitApiResponse.html","title":"class - ImagekitApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagekitApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImagekitResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:128\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagekitAuthParams.html":{"url":"classes/ImagekitAuthParams.html","title":"class - ImagekitAuthParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagekitAuthParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagekit/imagekit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                expire\n                            \n                            \n                                    \n                                    \n                                signature\n                            \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        expire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit token expiry', example: 12345})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit auth sinature', example: 12345})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit token', example: 'asdasd'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nclass ImagekitAuthParams {\n  @ApiProperty({\n    description: \"Imagekit token\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  token: string;\n\n  @ApiProperty({\n    description: \"Imagekit token expiry\",\n    example: 12345,\n  })\n  @Expose()\n  expire: number;\n\n  @ApiProperty({\n    description: \"Imagekit auth sinature\",\n    example: 12345,\n  })\n  @Expose()\n  signature: string;\n}\n\nexport class ImagekitResponseDto {\n  @ApiProperty({\n    description: \"Imagekit auth \",\n  })\n  @Expose()\n  ikAuthParams: ImagekitAuthParams;\n\n  @ApiProperty({\n    description: \"Imagekit pub key \",\n  })\n  @Expose()\n  publicKey: string;\n\n  @ApiProperty({\n    description: \"Imagekit endpoint\",\n  })\n  @Expose()\n  endpoint: string;\n\n  @ApiProperty({\n    description: \"Upload folder\",\n  })\n  @Expose()\n  folder: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagekitController.html":{"url":"controllers/ImagekitController.html","title":"controller - ImagekitController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagekitController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagekit/imagekit.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                imagekit\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAuthParamas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAuthParamas\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthParamas(ctx: RequestContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get imagekit auth params'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/imagekit/imagekit.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  HttpStatus,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { AppLogger } from \"../shared/logger/logger.service\";\nimport { JwtAuthGuard } from \"../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../shared/dtos/base-api-response.dto\";\nimport { ImagekitResponseDto } from \"./imagekit.dto\";\nimport { ImagekitService } from \"./imagekit.service\";\nimport { ReqContext } from \"../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../shared/request-context/request-context.dto\";\n\n@ApiTags(\"imagekit\")\n@Controller(\"imagekit\")\nexport class ImagekitController {\n  constructor(\n    private readonly imagekitService: ImagekitService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(ImagekitController.name);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get imagekit auth params\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(ImagekitResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getAuthParamas(\n    @ReqContext() ctx: RequestContext\n  ): Promise> {\n    this.logger.log(ctx, `${this.getAuthParamas.name} was called`);\n\n    const ikConfig = await this.imagekitService.getAuthParams(ctx);\n    return { data: ikConfig, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagekitModule.html":{"url":"modules/ImagekitModule.html","title":"module - ImagekitModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagekitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImagekitModule\n\n\n\ncluster_ImagekitModule_providers\n\n\n\ncluster_ImagekitModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nImagekitModule\n\nImagekitModule\n\nImagekitModule -->\n\nSharedModule->ImagekitModule\n\n\n\n\n\nImagekitService\n\nImagekitService\n\nImagekitModule -->\n\nImagekitService->ImagekitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/imagekit/imagekit.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImagekitService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagekitController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { ImagekitService } from \"./imagekit.service\";\nimport { ImagekitController } from \"./imagekit.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [ImagekitService],\n  controllers: [ImagekitController],\n})\nexport class ImagekitModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagekitResponseDto.html":{"url":"classes/ImagekitResponseDto.html","title":"class - ImagekitResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagekitResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagekit/imagekit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                endpoint\n                            \n                            \n                                    \n                                    \n                                folder\n                            \n                            \n                                    \n                                    \n                                ikAuthParams\n                            \n                            \n                                    \n                                    \n                                publicKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit endpoint'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        folder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Upload folder'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ikAuthParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImagekitAuthParams\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit auth '})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publicKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagekit pub key '})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nclass ImagekitAuthParams {\n  @ApiProperty({\n    description: \"Imagekit token\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  token: string;\n\n  @ApiProperty({\n    description: \"Imagekit token expiry\",\n    example: 12345,\n  })\n  @Expose()\n  expire: number;\n\n  @ApiProperty({\n    description: \"Imagekit auth sinature\",\n    example: 12345,\n  })\n  @Expose()\n  signature: string;\n}\n\nexport class ImagekitResponseDto {\n  @ApiProperty({\n    description: \"Imagekit auth \",\n  })\n  @Expose()\n  ikAuthParams: ImagekitAuthParams;\n\n  @ApiProperty({\n    description: \"Imagekit pub key \",\n  })\n  @Expose()\n  publicKey: string;\n\n  @ApiProperty({\n    description: \"Imagekit endpoint\",\n  })\n  @Expose()\n  endpoint: string;\n\n  @ApiProperty({\n    description: \"Upload folder\",\n  })\n  @Expose()\n  folder: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagekitService.html":{"url":"injectables/ImagekitService.html","title":"injectable - ImagekitService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImagekitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagekit/imagekit.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                imagekit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAuthParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/imagekit/imagekit.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAuthParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthParams(ctx: RequestContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/imagekit/imagekit.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        imagekit\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ImageKit\n\n                    \n                \n                    \n                        \n                                Defined in src/imagekit/imagekit.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AppLogger } from \"../shared/logger/logger.service\";\nimport { RequestContext } from \"../shared/request-context/request-context.dto\";\nimport { ConfigService } from \"@nestjs/config\";\nimport ImageKit from \"imagekit\";\nimport { ImagekitResponseDto } from \"./imagekit.dto\";\n\n@Injectable()\nexport class ImagekitService {\n  private readonly imagekit: ImageKit;\n\n  constructor(\n    private configService: ConfigService,\n    private readonly logger: AppLogger\n  ) {\n    this.imagekit = new ImageKit({\n      publicKey: this.configService.get(\"imagekit.publicKey\") as string,\n      privateKey: this.configService.get(\"imagekit.privateKey\") as string,\n      urlEndpoint: this.configService.get(\"imagekit.urlEndpoint\") as string,\n    });\n    this.logger.setContext(ImagekitService.name);\n  }\n\n  async getAuthParams(ctx: RequestContext): Promise {\n    this.logger.log(ctx, `${this.getAuthParams.name} was called`);\n    const ikAuthParams = this.imagekit.getAuthenticationParameters();\n    return {\n      ikAuthParams,\n      publicKey: this.configService.get(\"imagekit.publicKey\") as string,\n      endpoint: this.configService.get(\"imagekit.urlEndpoint\") as string,\n      folder: this.configService.get(\"env\") as string,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard(STRATEGY_JWT_AUTH)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { Observable } from \"rxjs\";\n\nimport { STRATEGY_JWT_AUTH } from \"../constants/strategy.constant\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(STRATEGY_JWT_AUTH) {\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise | Observable {\n    // Add your custom authentication logic here\n    // for example, call super.logIn(request) to establish a session.\n    return super.canActivate(context);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  handleRequest(err: any, user: any, info: any) {\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException(`${info}`);\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthStrategy.html":{"url":"injectables/JwtAuthStrategy.html","title":"injectable - JwtAuthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt-auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(\n  Strategy,\n  STRATEGY_JWT_AUTH\n)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt-auth.strategy.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt-auth.strategy.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\n\nimport { STRATEGY_JWT_AUTH } from \"../constants/strategy.constant\";\nimport { UserAccessTokenClaims } from \"../dtos/auth-token-output.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\n\n@Injectable()\nexport class JwtAuthStrategy extends PassportStrategy(\n  Strategy,\n  STRATEGY_JWT_AUTH\n) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly prismaService: PrismaService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get(\"jwt.publicKey\")!,\n      algorithms: [\"RS256\"],\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  async validate(payload: any): Promise {\n    // Passport automatically creates a user object, based on the value we return from the validate() method,\n    // and assigns it to the Request object as req.user\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    });\n    if (!user) return null;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-refresh.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard(STRATEGY_JWT_REFRESH)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-refresh.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-refresh.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\n\nimport { STRATEGY_JWT_REFRESH } from '../constants/strategy.constant';\n\n@Injectable()\nexport class JwtRefreshGuard extends AuthGuard(STRATEGY_JWT_REFRESH) {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    // Add your custom authentication logic here\n    // for example, call super.logIn(request) to establish a session.\n    return super.canActivate(context);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  handleRequest(err: any, user: any, info: any) {\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException(`${info}`);\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshStrategy.html":{"url":"injectables/JwtRefreshStrategy.html","title":"injectable - JwtRefreshStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt-refresh.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(\n  Strategy,\n  STRATEGY_JWT_REFRESH,\n)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt-refresh.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt-refresh.strategy.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { STRATEGY_JWT_REFRESH } from '../constants/strategy.constant';\nimport { UserRefreshTokenClaims } from '../dtos/auth-token-output.dto';\n\n@Injectable()\nexport class JwtRefreshStrategy extends PassportStrategy(\n  Strategy,\n  STRATEGY_JWT_REFRESH,\n) {\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromBodyField('refreshToken'),\n      secretOrKey: configService.get('jwt.publicKey')!,\n      algorithms: ['RS256'],\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  async validate(payload: any): Promise {\n    // Passport automatically creates a user object, based on the value we return from the validate() method,\n    // and assigns it to the Request object as req.user\n    return { id: payload.sub };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard(STRATEGY_LOCAL)\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\nimport { STRATEGY_LOCAL } from '../constants/strategy.constant';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard(STRATEGY_LOCAL) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(Strategy, STRATEGY_LOCAL)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: Request, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/local.strategy.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { Strategy } from 'passport-local';\n\nimport { AppLogger } from '../../shared/logger/logger.service';\nimport { createRequestContext } from '../../shared/request-context/util';\nimport { STRATEGY_LOCAL } from '../constants/strategy.constant';\nimport { UserAccessTokenClaims } from '../dtos/auth-token-output.dto';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy, STRATEGY_LOCAL) {\n  constructor(\n    private authService: AuthService,\n    private readonly logger: AppLogger,\n  ) {\n    // Add option passReqToCallback: true to configure strategy to be request-scoped.\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n      passReqToCallback: true,\n    });\n    this.logger.setContext(LocalStrategy.name);\n  }\n\n  async validate(\n    request: Request,\n    email: string,\n    password: string,\n  ): Promise {\n    const ctx = createRequestContext(request);\n\n    this.logger.log(ctx, `${this.validate.name} was called`);\n\n    const user = await this.authService.validateUser(ctx, email, password);\n    // Passport automatically creates a user object, based on the value we return from the validate() method,\n    // and assigns it to the Request object as req.user\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/logging.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appLogger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/shared/interceptors/logging.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appLogger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/logging.interceptor.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AppLogger } from '../logger/logger.service';\nimport { createRequestContext } from '../request-context/util';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  constructor(private appLogger: AppLogger) {\n    this.appLogger.setContext(LoggingInterceptor.name);\n  }\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    const method = request.method;\n    const ctx = createRequestContext(request);\n\n    const now = Date.now();\n    return next.handle().pipe(\n      tap(() => {\n        const response = context.switchToHttp().getResponse();\n        const statusCode = response.statusCode;\n\n        const responseTime = Date.now() - now;\n\n        const resData = { method, statusCode, responseTime };\n\n        this.appLogger.log(ctx, 'Request completed', { resData });\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginInput.html":{"url":"classes/LoginInput.html","title":"class - LoginInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-login-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty()@IsEmail()@MaxLength(200)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-login-input.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-login-input.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MaxLength } from 'class-validator';\n\nexport class LoginInput {\n  @IsNotEmpty()\n  @ApiProperty()\n  @IsEmail()\n  @MaxLength(200)\n  email: string;\n\n  @IsNotEmpty()\n  @ApiProperty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/controllers/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addNews\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteNews\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getNews\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOneNews\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateNews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNews(ctx: RequestContext, payload: CreateNewsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Post()@ApiOperation({summary: 'Add news API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/news/controllers/news.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateNewsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteNews(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Delete('/:id')@ApiOperation({summary: 'Delete one news item API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/news/controllers/news.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNews(ctx: RequestContext, query: NewsSearchInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get news API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/news/controllers/news.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            NewsSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOneNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneNews(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get('/:id')@ApiOperation({summary: 'Get one news item API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/news/controllers/news.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateNews(ctx: RequestContext, id: string, payload: UpdateNewsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Patch('/:id')@ApiOperation({summary: 'Update one news item API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/news/controllers/news.controller.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateNewsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { NewsService } from \"../services/news.service\";\nimport {\n  CreateNewsDto,\n  NewsResponseDto,\n  NewsSearchInput,\n  UpdateNewsDto,\n} from \"../dto/news.dto\";\n\n@ApiTags(\"news\")\n@Controller(\"news\")\nexport class NewsController {\n  constructor(\n    private readonly newsService: NewsService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(NewsController.name);\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get news API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([NewsResponseDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getNews(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: NewsSearchInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.getNews.name} was called`);\n\n    const { news, count } = await this.newsService.getNews(ctx, query);\n    return { data: news, meta: { count } };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post()\n  @ApiOperation({\n    summary: \"Add news API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(NewsResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async addNews(\n    @ReqContext() ctx: RequestContext,\n    @Body() payload: CreateNewsDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.addNews.name} was called`);\n\n    const news = await this.newsService.addNews(ctx, payload);\n    return { data: news, meta: {} };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"/:id\")\n  @ApiOperation({\n    summary: \"Get one news item API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(NewsResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOneNews(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOneNews.name} was called`);\n\n    const news = await this.newsService.getOneNews(ctx, id);\n    return { data: news, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Delete(\"/:id\")\n  @ApiOperation({\n    summary: \"Delete one news item API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(NewsResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async deleteNews(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.deleteNews.name} was called`);\n\n    const news = await this.newsService.deleteNews(ctx, id);\n    return { data: news, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Patch(\"/:id\")\n  @ApiOperation({\n    summary: \"Update one news item API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(NewsResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async updateNews(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string,\n    @Body() payload: UpdateNewsDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.updateNews.name} was called`);\n\n    const news = await this.newsService.updateNews(ctx, id, payload);\n    return { data: news, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nSharedModule->NewsModule\n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nNewsModule -->\n\nJwtAuthStrategy->NewsModule\n\n\n\n\n\nNewsService\n\nNewsService\n\nNewsModule -->\n\nNewsService->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAuthStrategy\n                        \n                        \n                            NewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { JwtAuthStrategy } from \"../auth/strategies/jwt-auth.strategy\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { NewsService } from \"./services/news.service\";\nimport { NewsController } from \"./controllers/news.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [NewsService, JwtAuthStrategy],\n  controllers: [NewsController],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponseDto.html":{"url":"classes/NewsResponseDto.html","title":"class - NewsResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/dto/news.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                mode\n                            \n                            \n                                    \n                                    \n                                    \n                                newsLink\n                            \n                            \n                                    \n                                    \n                                publishedDate\n                            \n                            \n                                    \n                                    \n                                publishedYear\n                            \n                            \n                                    \n                                    \n                                    \n                                source\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:223\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/news-banner.jpg'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:217\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by', example: 'admin'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:235\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Created at'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:241\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Deleted at'})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:254\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News ID', example: 'clgf7xhig0000qof3m53ibdz1'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News mode', example: 'Online'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:189\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        newsLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News link', example: 'https://example.com/news-article'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:209\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Published date'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:195\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publishedYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Published year'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:201\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News source', example: 'Tech News Portal'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:181\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags IDs', type: undefined, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:227\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News title', example: 'New Technology Breakthrough'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:173\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Updated at'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:247\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsDate,\n  IsDateString,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { Expose } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\n\nexport class NewsSearchInput extends PaginationParamsDto {\n  @ApiProperty({ required: false })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsArray()\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class CreateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n    example: \"2025-04-15T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsUrl()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @IsOptional()\n  mode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Published date\",\n  })\n  @IsOptional()\n  publishedDate?: Date;\n\n  @ApiPropertyOptional({\n    description: \"Published year\",\n  })\n  @IsOptional()\n  publishedYear?: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @IsOptional()\n  newsLink?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n}\n\nexport class NewsResponseDto {\n  @ApiProperty({\n    description: \"News ID\",\n    example: \"clgf7xhig0000qof3m53ibdz1\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @Expose()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @Expose()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n  })\n  @Expose()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n  })\n  @Expose()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @Expose()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiProperty({\n    description: \"Created at\",\n  })\n  @Expose()\n  createdAt: Date;\n\n  @ApiProperty({\n    description: \"Updated at\",\n  })\n  @Expose()\n  updatedAt: Date;\n\n  @ApiPropertyOptional({\n    description: \"Deleted at\",\n  })\n  @IsOptional()\n  @Expose()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsSearchInput.html":{"url":"classes/NewsSearchInput.html","title":"class - NewsSearchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsSearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/dto/news.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationParamsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: undefined})@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsDate,\n  IsDateString,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { Expose } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\n\nexport class NewsSearchInput extends PaginationParamsDto {\n  @ApiProperty({ required: false })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsArray()\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class CreateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n    example: \"2025-04-15T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsUrl()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @IsOptional()\n  mode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Published date\",\n  })\n  @IsOptional()\n  publishedDate?: Date;\n\n  @ApiPropertyOptional({\n    description: \"Published year\",\n  })\n  @IsOptional()\n  publishedYear?: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @IsOptional()\n  newsLink?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n}\n\nexport class NewsResponseDto {\n  @ApiProperty({\n    description: \"News ID\",\n    example: \"clgf7xhig0000qof3m53ibdz1\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @Expose()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @Expose()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n  })\n  @Expose()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n  })\n  @Expose()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @Expose()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiProperty({\n    description: \"Created at\",\n  })\n  @Expose()\n  createdAt: Date;\n\n  @ApiProperty({\n    description: \"Updated at\",\n  })\n  @Expose()\n  updatedAt: Date;\n\n  @ApiPropertyOptional({\n    description: \"Deleted at\",\n  })\n  @IsOptional()\n  @Expose()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsService.html":{"url":"injectables/NewsService.html","title":"injectable - NewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/services/news.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNews\n                            \n                            \n                                    Async\n                                deleteNews\n                            \n                            \n                                    Async\n                                getNews\n                            \n                            \n                                    Async\n                                getOneNews\n                            \n                            \n                                    Async\n                                updateNews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/news/services/news.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNews(ctx: RequestContext, payload: CreateNewsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/news/services/news.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateNewsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteNews(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/news/services/news.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNews(ctx: RequestContext, query: NewsSearchInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/news/services/news.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            NewsSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneNews(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/news/services/news.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateNews\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateNews(ctx: RequestContext, id: string, payload: UpdateNewsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/news/services/news.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateNewsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { plainToClass, plainToInstance } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport {\n  CreateNewsDto,\n  NewsResponseDto,\n  NewsSearchInput,\n  UpdateNewsDto,\n} from \"../dto/news.dto\";\nimport { applyFilters } from \"../../shared/filters/prisma-filter.filter\";\nimport { Prisma } from \"@prisma/client\";\nimport { createSearchKey } from \"../../shared/utils/createSearchKey\";\n\n@Injectable()\nexport class NewsService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(NewsService.name);\n  }\n\n  async getNews(\n    ctx: RequestContext,\n    query: NewsSearchInput\n  ): Promise {\n    this.logger.log(ctx, `${this.getNews.name} was called`);\n    const { limit, offset, ...restQuery } = query;\n\n    const { whereBuilder: whereQuery } =\n      await applyFilters({\n        appliedFiltersInput: restQuery,\n        availableFilters: {\n          title: async ({ filter }) => {\n            const searchKey = createSearchKey(String(filter), \"AND\");\n            return {\n              where: {\n                OR: [\n                  {\n                    title: {\n                      search: searchKey,\n                      mode: \"insensitive\",\n                    },\n                  },\n                  {\n                    title: {\n                      contains: String(filter),\n                      mode: \"insensitive\",\n                    },\n                  },\n                ],\n              },\n            };\n          },\n          tagIds: async ({ filter }) => {\n            return {\n              where: {\n                tags: {\n                  some: {\n                    id: {\n                      in: filter as string[],\n                    },\n                  },\n                },\n              },\n            };\n          },\n        },\n      });\n\n    const news = await this.prismaService.news.findMany({\n      where: {\n        AND: [whereQuery],\n      },\n      include: {\n        tags: true,\n      },\n      take: limit,\n      skip: offset,\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    const newsCount = await this.prismaService.news.count({\n      where: {\n        AND: [whereQuery],\n      },\n    });\n\n    return {\n      news: plainToInstance(NewsResponseDto, news, {\n        excludeExtraneousValues: true,\n      }),\n      count: newsCount,\n    };\n  }\n\n  async getOneNews(ctx: RequestContext, id: string): Promise {\n    this.logger.log(ctx, `${this.getOneNews.name} was called`);\n\n    const news = await this.prismaService.news.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        tags: true,\n      },\n    });\n\n    if (!news) {\n      throw new NotFoundException(\"News not found\");\n    }\n\n    return plainToInstance(NewsResponseDto, news, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async addNews(\n    ctx: RequestContext,\n    payload: CreateNewsDto\n  ): Promise {\n    this.logger.log(ctx, `${this.addNews.name} was called`);\n    const { tagIds, ...restPayload } = payload;\n\n    const news = await this.prismaService.news.create({\n      data: {\n        ...restPayload,\n        contributedBy: ctx!.user!.id,\n        publishedYear: new Date(payload.publishedDate).getFullYear().toString(),\n        ...(tagIds && {\n          tags: {\n            connect: tagIds?.map((id) => ({\n              id,\n              isNewsTag: true,\n            })),\n          },\n        }),\n      },\n    });\n\n    return plainToClass(NewsResponseDto, news, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async deleteNews(ctx: RequestContext, id: string): Promise {\n    this.logger.log(ctx, `${this.deleteNews.name} was called`);\n\n    const news = await this.prismaService.news.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!news) {\n      throw new NotFoundException(\"News not found\");\n    }\n\n    await this.prismaService.news.delete({\n      where: {\n        id: news.id,\n      },\n    });\n\n    return plainToInstance(NewsResponseDto, news, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async updateNews(\n    ctx: RequestContext,\n    id: string,\n    payload: UpdateNewsDto\n  ): Promise {\n    this.logger.log(ctx, `${this.updateNews.name} was called`);\n    const news = await this.prismaService.news.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!news) {\n      throw new NotFoundException(\"News not found!\");\n    }\n\n    const { tagIds, ...restPayload } = payload;\n\n    const updatedNews = await this.prismaService.news.update({\n      where: {\n        id: news.id,\n      },\n      data: {\n        ...restPayload,\n        ...(tagIds && {\n          tags: {\n            // Set empty then create new records\n            // Do not use deleteMany here since it maybe used elsewhere\n            set: [],\n            connect: tagIds?.map((id) => ({\n              id,\n              isNewsTag: true,\n            })),\n          },\n        }),\n      },\n    });\n\n    return plainToClass(NewsResponseDto, updatedNews, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpportunityApiResponse.html":{"url":"classes/OpportunityApiResponse.html","title":"class - OpportunityApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpportunityApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpportunityResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:94\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpportunityArrayApiResponse.html":{"url":"classes/OpportunityArrayApiResponse.html","title":"class - OpportunityArrayApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpportunityArrayApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpportunityResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:102\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OpportunityController.html":{"url":"controllers/OpportunityController.html","title":"controller - OpportunityController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OpportunityController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/controllers/opportunities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                opportunities\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addOpportutnity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteOpportunity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOneOpportunity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOpportunities\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateOpportunity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addOpportutnity\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOpportutnity(ctx: RequestContext, payload: CreateOpportunityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Post()@ApiOperation({summary: 'Add opportunity API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/opportunity/controllers/opportunities.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateOpportunityDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOpportunity(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Delete('/:id')@ApiOperation({summary: 'Delete one opportunity API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/opportunity/controllers/opportunities.controller.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOneOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneOpportunity(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get('/:id')@ApiOperation({summary: 'Get one opportunity API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/opportunity/controllers/opportunities.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOpportunities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOpportunities(ctx: RequestContext, query: OpportunitySearchInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get opportunities API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/opportunity/controllers/opportunities.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            OpportunitySearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOpportunity(ctx: RequestContext, id: string, payload: UpdateOpportunityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Patch('/:id')@ApiOperation({summary: 'Update one opportunity API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/opportunity/controllers/opportunities.controller.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateOpportunityDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { OpportunityService } from \"../services/opportunities.service\";\nimport {\n  CreateOpportunityDto,\n  OpportunityResponseDto,\n  OpportunitySearchInput,\n  UpdateOpportunityDto,\n} from \"../dto/opportunities.dto\";\n\n@ApiTags(\"opportunities\")\n@Controller(\"opportunities\")\nexport class OpportunityController {\n  constructor(\n    private readonly service: OpportunityService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(OpportunityController.name);\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get opportunities API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([OpportunityResponseDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOpportunities(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: OpportunitySearchInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOpportunities.name} was called`);\n\n    const { items, count } = await this.service.getOpportunities(ctx, query);\n\n    return { data: items, meta: { count } };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post()\n  @ApiOperation({\n    summary: \"Add opportunity API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OpportunityResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async addOpportutnity(\n    @ReqContext() ctx: RequestContext,\n    @Body() payload: CreateOpportunityDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.addOpportutnity.name} was called`);\n\n    const item = await this.service.addOpportunity(ctx, payload);\n    return { data: item, meta: {} };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"/:id\")\n  @ApiOperation({\n    summary: \"Get one opportunity API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OpportunityResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOneOpportunity(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOneOpportunity.name} was called`);\n\n    const item = await this.service.getOneOpportunity(ctx, id);\n    return { data: item, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Delete(\"/:id\")\n  @ApiOperation({\n    summary: \"Delete one opportunity API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OpportunityResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async deleteOpportunity(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.deleteOpportunity.name} was called`);\n\n    const item = await this.service.deleteOpportunity(ctx, id);\n    return { data: item, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Patch(\"/:id\")\n  @ApiOperation({\n    summary: \"Update one opportunity API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OpportunityResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async updateOpportunity(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string,\n    @Body() payload: UpdateOpportunityDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.updateOpportunity.name} was called`);\n\n    const item = await this.service.updateOpportunity(ctx, id, payload);\n    return { data: item, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpportunityModule.html":{"url":"modules/OpportunityModule.html","title":"module - OpportunityModule","body":"\n                   \n\n\n\n\n    Modules\n    OpportunityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OpportunityModule\n\n\n\ncluster_OpportunityModule_providers\n\n\n\ncluster_OpportunityModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nOpportunityModule\n\nOpportunityModule\n\nOpportunityModule -->\n\nSharedModule->OpportunityModule\n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nOpportunityModule -->\n\nJwtAuthStrategy->OpportunityModule\n\n\n\n\n\nOpportunityService\n\nOpportunityService\n\nOpportunityModule -->\n\nOpportunityService->OpportunityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/opportunity/opportunities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAuthStrategy\n                        \n                        \n                            OpportunityService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OpportunityController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { JwtAuthStrategy } from \"../auth/strategies/jwt-auth.strategy\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { OpportunityService } from \"./services/opportunities.service\";\nimport { OpportunityController } from \"./controllers/opportunities.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [OpportunityService, JwtAuthStrategy],\n  controllers: [OpportunityController],\n})\nexport class OpportunityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpportunityResponseDto.html":{"url":"classes/OpportunityResponseDto.html","title":"class - OpportunityResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpportunityResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/dto/opportunities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                applicationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                locationType\n                            \n                            \n                                    \n                                    \n                                OpportunityGallery\n                            \n                            \n                                    \n                                    \n                                    \n                                organizer\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:397\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        applicationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:348\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:389\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:383\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:357\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:340\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:375\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity description', example: 'A leading technology company'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:305\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:333\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity ID', example: 'cm92hbrpe00049kz8bwoaz1rh'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:283\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:312\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:319\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        OpportunityGallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Gallery', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:410\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:297\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:402\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:366\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags IDs', type: undefined, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:406\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity name', example: 'Tech Innovations'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:290\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity type'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:326\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OpportunitySearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"The Green Fellows Program\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"opportunity format\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"duration\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  duration?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OpportunityResponseDto {\n  @ApiProperty({\n    description: \"Opportunity ID\",\n    example: \"cm92hbrpe00049kz8bwoaz1rh\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  OpportunityGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpportunitySearchInput.html":{"url":"classes/OpportunitySearchInput.html","title":"class - OpportunitySearchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpportunitySearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/dto/opportunities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationParamsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OpportunitySearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"The Green Fellows Program\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"opportunity format\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"duration\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  duration?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OpportunityResponseDto {\n  @ApiProperty({\n    description: \"Opportunity ID\",\n    example: \"cm92hbrpe00049kz8bwoaz1rh\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  OpportunityGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpportunityService.html":{"url":"injectables/OpportunityService.html","title":"injectable - OpportunityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpportunityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/services/opportunities.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addOpportunity\n                            \n                            \n                                    Async\n                                deleteOpportunity\n                            \n                            \n                                    Async\n                                getOneOpportunity\n                            \n                            \n                                    Async\n                                getOpportunities\n                            \n                            \n                                    Async\n                                updateOpportunity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/opportunity/services/opportunities.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOpportunity(ctx: RequestContext, payload: CreateOpportunityDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/opportunity/services/opportunities.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateOpportunityDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOpportunity(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/opportunity/services/opportunities.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneOpportunity(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/opportunity/services/opportunities.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOpportunities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOpportunities(ctx: RequestContext, query: OpportunitySearchInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/opportunity/services/opportunities.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            OpportunitySearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOpportunity\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOpportunity(ctx: RequestContext, id: string, payload: UpdateOpportunityDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/opportunity/services/opportunities.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateOpportunityDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { plainToClass, plainToInstance } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport {\n  CreateOpportunityDto,\n  OpportunityResponseDto,\n  OpportunitySearchInput,\n  UpdateOpportunityDto,\n} from \"../dto/opportunities.dto\";\nimport { applyFilters } from \"../../shared/filters/prisma-filter.filter\";\nimport { Prisma } from \"@prisma/client\";\nimport { createSearchKey } from \"../../shared/utils/createSearchKey\";\n\n@Injectable()\nexport class OpportunityService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(OpportunityService.name);\n  }\n\n  async getOpportunities(\n    ctx: RequestContext,\n    query: OpportunitySearchInput\n  ): Promise {\n    this.logger.log(ctx, `${this.getOpportunities.name} was called`);\n    const { limit, offset, ...restQuery } = query;\n\n    const { whereBuilder: whereQuery } =\n      await applyFilters({\n        appliedFiltersInput: restQuery,\n        availableFilters: {\n          title: async ({ filter }) => {\n            const searchKey = createSearchKey(String(filter), \"AND\");\n            return {\n              where: {\n                OR: [\n                  {\n                    title: {\n                      search: searchKey,\n                      mode: \"insensitive\",\n                    },\n                  },\n                  {\n                    title: {\n                      contains: String(filter),\n                      mode: \"insensitive\",\n                    },\n                  },\n                ],\n              },\n            };\n          },\n          tagIds: async ({ filter }) => {\n            return {\n              where: {\n                tags: {\n                  some: {\n                    id: {\n                      in: filter as string[],\n                    },\n                  },\n                },\n              },\n            };\n          },\n        },\n      });\n\n    const items = await this.prismaService.opportunity.findMany({\n      where: {\n        AND: [whereQuery],\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n      },\n      take: limit,\n      skip: offset,\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    const count = await this.prismaService.opportunity.count({\n      where: {\n        AND: [whereQuery],\n      },\n    });\n    return {\n      items: plainToInstance(OpportunityResponseDto, items, {\n        excludeExtraneousValues: true,\n      }),\n      count: count,\n    };\n  }\n\n  async getOneOpportunity(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.getOneOpportunity.name} was called`);\n\n    const item = await this.prismaService.opportunity.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n      },\n    });\n\n    if (!item) {\n      throw new NotFoundException(\"Opportunity not found\");\n    }\n\n    return plainToInstance(OpportunityResponseDto, item, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async addOpportunity(\n    ctx: RequestContext,\n    payload: CreateOpportunityDto\n  ): Promise {\n    this.logger.log(ctx, `${this.addOpportunity.name} was called`);\n    const { address, tagIds, socials, ...restPayload } = payload;\n    const item = await this.prismaService.opportunity.create({\n      data: {\n        ...restPayload,\n        ...(address && {\n          address: {\n            create: {\n              ...address,\n            },\n          },\n        }),\n        ...(tagIds && {\n          tags: {\n            connect: tagIds?.map((id) => ({\n              id,\n              isOpportunityTag: true,\n            })),\n          },\n        }),\n        ...(socials && {\n          socials: {\n            create: {\n              data: JSON.parse(JSON.stringify(socials)),\n            },\n          },\n        }),\n      },\n    });\n\n    return plainToClass(OpportunityResponseDto, item, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async deleteOpportunity(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.deleteOpportunity.name} was called`);\n\n    const item = await this.prismaService.opportunity.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!item) {\n      throw new NotFoundException(\"Opportunity not found\");\n    }\n\n    await this.prismaService.opportunity.delete({\n      where: {\n        id: item.id,\n      },\n    });\n\n    return plainToInstance(OpportunityResponseDto, item, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async updateOpportunity(\n    ctx: RequestContext,\n    id: string,\n    payload: UpdateOpportunityDto\n  ): Promise {\n    this.logger.log(ctx, `${this.updateOpportunity.name} was called`);\n    const item = await this.prismaService.opportunity.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!item) {\n      throw new NotFoundException(\"Opportunity not found!\");\n    }\n\n    const { address, tagIds, socials, ...restPayload } = payload;\n\n    const updatedItem = await this.prismaService.opportunity.update({\n      where: {\n        id: item.id,\n      },\n      data: {\n        ...restPayload,\n        address: {\n          upsert: {},\n        },\n        ...(socials && {\n          socials: {\n            upsert: {\n              create: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n              update: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n            },\n          },\n        }),\n        ...(address && {\n          address: {\n            upsert: {\n              create: address,\n              update: address,\n            },\n          },\n        }),\n        ...(tagIds && {\n          tags: {\n            //set empty then create new records\n            // do not use deletemany here since it maybe used elsewhere\n            set: [],\n            connect: tagIds?.map((id) => ({\n              id,\n              isOpportunityTag: true,\n            })),\n          },\n        }),\n      },\n    });\n\n    return plainToClass(OpportunityResponseDto, updatedItem, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationApiResponse.html":{"url":"classes/OrganizationApiResponse.html","title":"class - OrganizationApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationArrayApiResponse.html":{"url":"classes/OrganizationArrayApiResponse.html","title":"class - OrganizationArrayApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationArrayApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:85\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/controllers/organization.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                organizations\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addOrg\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteOrganization\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOneOrganization\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getOrgs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateOrganization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addOrg\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOrg(ctx: RequestContext, payload: CreateOrganizationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Post()@ApiOperation({summary: 'Add organizations API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/organization/controllers/organization.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateOrganizationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOrganization(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Delete('/:id')@ApiOperation({summary: 'Delete one organizations API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/organization/controllers/organization.controller.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOneOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneOrganization(ctx: RequestContext, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get('/:id')@ApiOperation({summary: 'Get one organizations API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/organization/controllers/organization.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getOrgs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrgs(ctx: RequestContext, query: OrganizationSearchInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get organizations API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/organization/controllers/organization.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            OrganizationSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrganization(ctx: RequestContext, id: string, payload: UpdateOrganizationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Patch('/:id')@ApiOperation({summary: 'Update one organizations API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/organization/controllers/organization.controller.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateOrganizationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { OrganizationService } from \"../services/organization.service\";\nimport {\n  CreateOrganizationDto,\n  OrganizationResponseDto,\n  OrganizationSearchInput,\n  UpdateOrganizationDto,\n} from \"../dto/organization.dto\";\n\n@ApiTags(\"organizations\")\n@Controller(\"organizations\")\nexport class OrganizationController {\n  constructor(\n    private readonly organizationService: OrganizationService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(OrganizationController.name);\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get organizations API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([OrganizationResponseDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOrgs(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: OrganizationSearchInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOrgs.name} was called`);\n\n    const { organizations, count } =\n      await this.organizationService.getOrganizations(ctx, query);\n    return { data: organizations, meta: { count } };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post()\n  @ApiOperation({\n    summary: \"Add organizations API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OrganizationResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async addOrg(\n    @ReqContext() ctx: RequestContext,\n    @Body() payload: CreateOrganizationDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.addOrg.name} was called`);\n\n    const organization = await this.organizationService.addOrganization(\n      ctx,\n      payload\n    );\n    return { data: organization, meta: {} };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"/:id\")\n  @ApiOperation({\n    summary: \"Get one organizations API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OrganizationResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getOneOrganization(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOrgs.name} was called`);\n\n    const organization = await this.organizationService.getOneOrganization(\n      ctx,\n      id\n    );\n    return { data: organization, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Delete(\"/:id\")\n  @ApiOperation({\n    summary: \"Delete one organizations API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OrganizationResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async deleteOrganization(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOrgs.name} was called`);\n\n    const organization = await this.organizationService.deleteOrganization(\n      ctx,\n      id\n    );\n    return { data: organization, meta: {} };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Patch(\"/:id\")\n  @ApiOperation({\n    summary: \"Update one organizations API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(OrganizationResponseDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async updateOrganization(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: string,\n    @Body() payload: UpdateOrganizationDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.getOrgs.name} was called`);\n\n    const organization = await this.organizationService.updateOrganization(\n      ctx,\n      id,\n      payload\n    );\n    return { data: organization, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_OrganizationModule_exports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nSharedModule->OrganizationModule\n\n\n\n\n\nOrganizationService \n\nOrganizationService \n\nOrganizationService  -->\n\nOrganizationModule->OrganizationService \n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nOrganizationModule -->\n\nJwtAuthStrategy->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/organization/organization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAuthStrategy\n                        \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { JwtAuthStrategy } from \"../auth/strategies/jwt-auth.strategy\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { OrganizationService } from \"./services/organization.service\";\nimport { OrganizationController } from \"./controllers/organization.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [OrganizationService, JwtAuthStrategy],\n  controllers: [OrganizationController],\n  exports: [OrganizationService],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationResponseDto.html":{"url":"classes/OrganizationResponseDto.html","title":"class - OrganizationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/dto/organization.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                logoImageId\n                            \n                            \n                                    \n                                    \n                                logoImageUrl\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                organizationGallery\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneCountryCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:272\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image ID', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:287\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:283\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization description', example: 'A leading technology company'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization email', example: 'contact@techinnovations.com'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:247\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization id', example: 'asdasd'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:226\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        logoImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Logo image ID', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:298\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logoImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Logo image URL', example: 'https://example.com/org-logo.jpg'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:294\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization name', example: 'Tech Innovations Inc.'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:233\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organizationGallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Gallery', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:306\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneCountryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone country code', required: false, example: '+1'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:255\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone number', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:264\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Object of Socials ', required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:276\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags IDs', type: undefined, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:302\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OrganizationSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  logoImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OrganizationResponseDto {\n  @ApiProperty({\n    description: \"Organization id\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @Expose()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @Expose()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @Expose()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @Expose()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  organizationGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationSearchInput.html":{"url":"classes/OrganizationSearchInput.html","title":"class - OrganizationSearchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationSearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/dto/organization.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationParamsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OrganizationSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  logoImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OrganizationResponseDto {\n  @ApiProperty({\n    description: \"Organization id\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @Expose()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @Expose()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @Expose()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @Expose()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  organizationGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/services/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addOrganization\n                            \n                            \n                                    Async\n                                deleteOrganization\n                            \n                            \n                                    Async\n                                getOneOrganization\n                            \n                            \n                                    Async\n                                getOrganizations\n                            \n                            \n                                    Async\n                                updateOrganization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/organization/services/organization.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    addOrganization(ctx: RequestContext, payload: CreateOrganizationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/organization/services/organization.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            CreateOrganizationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOrganization(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/organization/services/organization.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneOrganization(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/organization/services/organization.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrganizations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrganizations(ctx: RequestContext, query: OrganizationSearchInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/organization/services/organization.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            OrganizationSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOrganization\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrganization(ctx: RequestContext, id: string, payload: UpdateOrganizationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/organization/services/organization.service.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            UpdateOrganizationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { plainToClass, plainToInstance } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport {\n  CreateOrganizationDto,\n  OrganizationResponseDto,\n  OrganizationSearchInput,\n  UpdateOrganizationDto,\n} from \"../dto/organization.dto\";\nimport { applyFilters } from \"../../shared/filters/prisma-filter.filter\";\nimport { Prisma } from \"@prisma/client\";\nimport { createSearchKey } from \"../../shared/utils/createSearchKey\";\n\n@Injectable()\nexport class OrganizationService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(OrganizationService.name);\n  }\n\n  async getOrganizations(\n    ctx: RequestContext,\n    query: OrganizationSearchInput\n  ): Promise {\n    this.logger.log(ctx, `${this.getOrganizations.name} was called`);\n    const { limit, offset, ...restQuery } = query;\n\n    const { whereBuilder: orgWhereQuery } =\n      await applyFilters({\n        appliedFiltersInput: restQuery,\n        availableFilters: {\n          name: async ({ filter }) => {\n            const searchKey = createSearchKey(String(filter), \"AND\");\n            return {\n              where: {\n                OR: [\n                  {\n                    name: {\n                      search: searchKey,\n                      mode: \"insensitive\",\n                    },\n                  },\n                  {\n                    name: {\n                      contains: String(filter),\n                      mode: \"insensitive\",\n                    },\n                  },\n                ],\n              },\n            };\n          },\n          tagIds: async ({ filter }) => {\n            return {\n              where: {\n                tags: {\n                  some: {\n                    id: {\n                      in: filter as string[],\n                    },\n                  },\n                },\n              },\n            };\n          },\n        },\n      });\n\n    const organizations = await this.prismaService.organizations.findMany({\n      where: {\n        AND: [orgWhereQuery],\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n      },\n      take: limit,\n      skip: offset,\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    const organizationCount = await this.prismaService.organizations.count({\n      where: {\n        AND: [orgWhereQuery],\n      },\n    });\n\n    return {\n      organizations: plainToInstance(OrganizationResponseDto, organizations, {\n        excludeExtraneousValues: true,\n      }),\n      count: organizationCount,\n    };\n  }\n\n  async getOneOrganization(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.getOneOrganization.name} was called`);\n\n    const organization = await this.prismaService.organizations.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        address: true,\n        socials: true,\n        tags: true,\n        organizationGallery: true,\n      },\n    });\n\n    if (!organization) {\n      throw new NotFoundException(\"Organization not found\");\n    }\n\n    return plainToInstance(OrganizationResponseDto, organization, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async addOrganization(\n    ctx: RequestContext,\n    payload: CreateOrganizationDto\n  ): Promise {\n    this.logger.log(ctx, `${this.addOrganization.name} was called`);\n    const { address, tagIds, gallery, socials, ...restPayload } = payload;\n\n    const organization = await this.prismaService.organizations.create({\n      data: {\n        ...restPayload,\n        ...(address && {\n          address: {\n            create: {\n              ...address,\n            },\n          },\n        }),\n\n        ...(tagIds && {\n          tags: {\n            connect: tagIds?.map((id) => ({\n              id,\n              isOrganizationTag: true,\n            })),\n          },\n        }),\n        ...(gallery && {\n          organizationGallery: {\n            create: gallery,\n          },\n        }),\n        ...(socials && {\n          socials: {\n            create: {\n              data: JSON.parse(JSON.stringify(socials)),\n            },\n          },\n        }),\n      },\n    });\n\n    return plainToClass(OrganizationResponseDto, organization, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async deleteOrganization(\n    ctx: RequestContext,\n    id: string\n  ): Promise {\n    this.logger.log(ctx, `${this.deleteOrganization.name} was called`);\n\n    const organization = await this.prismaService.organizations.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!organization) {\n      throw new NotFoundException(\"Organization not found\");\n    }\n\n    await this.prismaService.organizations.delete({\n      where: {\n        id: organization.id,\n      },\n    });\n\n    return plainToInstance(OrganizationResponseDto, organization, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async updateOrganization(\n    ctx: RequestContext,\n    id: string,\n    payload: UpdateOrganizationDto\n  ): Promise {\n    this.logger.log(ctx, `${this.addOrganization.name} was called`);\n    const org = await this.prismaService.organizations.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (!org) {\n      throw new NotFoundException(\"Organization not found!\");\n    }\n\n    const { address, tagIds, gallery, socials, ...restPayload } = payload;\n\n    const organization = await this.prismaService.organizations.update({\n      where: {\n        id: org.id,\n      },\n      data: {\n        ...restPayload,\n        address: {\n          upsert: {},\n        },\n        ...(socials && {\n          socials: {\n            upsert: {\n              create: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n              update: {\n                data: JSON.parse(JSON.stringify(socials)),\n              },\n            },\n          },\n        }),\n        ...(address && {\n          address: {\n            upsert: {\n              create: address,\n              update: address,\n            },\n          },\n        }),\n        ...(tagIds && {\n          tags: {\n            //set empty then create new records\n            // do not use deletemany here since it maybe used elsewhere\n            set: [],\n            connect: tagIds?.map((id) => ({\n              id,\n              isOrganizationTag: true,\n            })),\n          },\n        }),\n        ...(gallery && {\n          organizationGallery: {\n            deleteMany: {},\n            create: gallery,\n          },\n        }),\n      },\n    });\n\n    return plainToClass(OrganizationResponseDto, organization, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationParamsDto.html":{"url":"classes/PaginationParamsDto.html","title":"class - PaginationParamsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParamsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/pagination-params.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/pagination-params.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/pagination-params.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Transform } from \"class-transformer\";\nimport { IsNumber, IsOptional, Min } from \"class-validator\";\n\nexport class PaginationParamsDto {\n  @ApiPropertyOptional({\n    description: \"Optional, defaults to 100\",\n    type: Number,\n  })\n  @IsNumber()\n  @IsOptional()\n  @Min(0)\n  @Transform(({ value }) => parseInt(value, 10), { toClassOnly: true })\n  limit = 100;\n\n  @ApiPropertyOptional({\n    description: \"Optional, defaults to 0\",\n    type: Number,\n  })\n  @IsNumber()\n  @IsOptional()\n  @Min(0)\n  @Transform(({ value }) => parseInt(value, 10), { toClassOnly: true })\n  offset = 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/prisma-module/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/prisma-module/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenInput.html":{"url":"classes/RefreshTokenInput.html","title":"class - RefreshTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-refresh-token-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-refresh-token-input.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class RefreshTokenInput {\n  @IsNotEmpty()\n  @ApiProperty()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterApiResponse.html":{"url":"classes/RegisterApiResponse.html","title":"class - RegisterApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegisterOutput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:119\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterInput.html":{"url":"classes/RegisterInput.html","title":"class - RegisterInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-register-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                isAccountDisabled\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()@MaxLength(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAccountDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@MaxLength(100)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Length(6, 100)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ROLE[]\n\n                    \n                \n                \n                    \n                        Default value : [ROLE.USER]\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@MaxLength(200)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-input.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Length,\n  MaxLength,\n} from 'class-validator';\n\nimport { ROLE } from '../constants/role.constant';\n\nexport class RegisterInput {\n  @ApiProperty()\n  @IsNotEmpty()\n  @MaxLength(100)\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @MaxLength(200)\n  @IsString()\n  username: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Length(6, 100)\n  @IsString()\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  @MaxLength(100)\n  email: string;\n\n  // These keys can only be set by ADMIN user.\n  roles: ROLE[] = [ROLE.USER];\n  isAccountDisabled: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterOutput.html":{"url":"classes/RegisterOutput.html","title":"class - RegisterOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-register-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isAccountDisabled\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isAccountDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ROLE[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-register-output.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\n\nimport { ROLE } from '../constants/role.constant';\n\nexport class RegisterOutput {\n  @Expose()\n  @ApiProperty()\n  id: number;\n\n  @Expose()\n  @ApiProperty()\n  name: string;\n\n  @Expose()\n  @ApiProperty()\n  username: string;\n\n  @Expose()\n  @ApiProperty({ example: [ROLE.USER] })\n  roles: ROLE[];\n\n  @Expose()\n  @ApiProperty()\n  email: string;\n\n  @Expose()\n  @ApiProperty()\n  isAccountDisabled: boolean;\n\n  @Expose()\n  @ApiProperty()\n  createdAt: string;\n\n  @Expose()\n  @ApiProperty()\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestContext.html":{"url":"classes/RequestContext.html","title":"class - RequestContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/request-context/request-context.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                requestID\n                            \n                            \n                                    Public\n                                url\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/request-context/request-context.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestID\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/request-context/request-context.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/request-context/request-context.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserAccessTokenClaims | null\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/request-context/request-context.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserAccessTokenClaims } from '../../auth/dtos/auth-token-output.dto';\n\nexport class RequestContext {\n  public requestID: string | undefined;\n\n  public url: string;\n\n  public ip: string | undefined;\n\n  // TODO : Discuss with team if this import is acceptable or if we should move UserAccessTokenClaims to shared.\n  public user: UserAccessTokenClaims | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseMetadata.html":{"url":"classes/ResponseMetadata.html","title":"class - ResponseMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                additionalInfo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        additionalInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { ROLE } from \"../constants/role.constant\";\nimport { ROLES_KEY } from \"../decorators/role.decorator\";\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n\n    // if (requiredRoles.some((role) => user.roles?.includes(role))) {\n    //   return true;\n    // }\n\n    return true;\n\n    throw new UnauthorizedException(\n      `User with roles ${user.roles} does not have access to this route with roles ${requiredRoles}`\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAppLoggerModule->SharedModule\n\n\n\n\n\nAppLoggerModule \n\nAppLoggerModule \n\nAppLoggerModule  -->\n\nSharedModule->AppLoggerModule \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppLoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppLoggerModule\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\n\nimport { configModuleOptions } from './configs/module-options';\nimport { AllExceptionsFilter } from './filters/all-exceptions.filter';\nimport { LoggingInterceptor } from './interceptors/logging.interceptor';\nimport { AppLoggerModule } from './logger/logger.module';\nimport { PrismaService } from './prisma-module/prisma.service';\n\n@Module({\n  imports: [ConfigModule.forRoot(configModuleOptions), AppLoggerModule],\n  exports: [AppLoggerModule, ConfigModule, PrismaService],\n  providers: [\n    { provide: APP_INTERCEPTOR, useClass: LoggingInterceptor },\n\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    PrismaService,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagApiResponse.html":{"url":"classes/TagApiResponse.html","title":"class - TagApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagArrayApiResponse.html":{"url":"classes/TagArrayApiResponse.html","title":"class - TagArrayApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagArrayApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagOutputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagController.html":{"url":"controllers/TagController.html","title":"controller - TagController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/controllers/tags.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                addTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getTags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getTagsType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        addTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTag(ctx: RequestContext, payload: AddTagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Post()@ApiOperation({summary: 'Add a new tag'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/tags/controllers/tags.controller.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            AddTagDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTags(ctx: RequestContext, query: TagSearchInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get tags API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/tags/controllers/tags.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            TagSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getTagsType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTagsType(ctx: RequestContext, tagType: TagsType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get('/:type')@ApiOperation({summary: 'Get tags by type API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/tags/controllers/tags.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tagType\n                                            \n                                                            TagsType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UnauthorizedException,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { TagsService } from \"../services/tags.service\";\nimport { TagOutputDto } from \"../dto/tags-output.dto\";\nimport { AddTagDto, TagSearchInput, TagsType } from \"../dto/tags-input.dto\";\n\n@ApiTags(\"tags\")\n@Controller(\"tags\")\nexport class TagController {\n  constructor(\n    private readonly tagsService: TagsService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(TagController.name);\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get tags API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([TagOutputDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getTags(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: TagSearchInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.getTags.name} was called`);\n\n    const { tags, count } = await this.tagsService.getTags(ctx, query);\n    return { data: tags, meta: { count } };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"/:type\")\n  @ApiOperation({\n    summary: \"Get tags by type API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([TagOutputDto]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getTagsType(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"type\") tagType: TagsType\n  ): Promise> {\n    this.logger.log(ctx, `${this.getTagsType.name} was called`);\n\n    const { tags, count } = await this.tagsService.getTagsByType(ctx, tagType);\n    return { data: tags, meta: { count } };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Post()\n  @ApiOperation({\n    summary: \"Add a new tag\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(TagOutputDto),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async addTag(\n    @ReqContext() ctx: RequestContext,\n    @Body() payload: AddTagDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.addTag.name} was called`);\n    const roleData = await this.tagsService.addTag(ctx, payload);\n    return { data: roleData, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagOutputDto.html":{"url":"classes/TagOutputDto.html","title":"class - TagOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/dto/tags-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isEventTag\n                            \n                            \n                                    \n                                    \n                                isNewsTag\n                            \n                            \n                                    \n                                    \n                                isOpportunityTag\n                            \n                            \n                                    \n                                    \n                                isOrganizationTag\n                            \n                            \n                                    \n                                    \n                                isUserTag\n                            \n                            \n                                    \n                                    \n                                tag\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isEventTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isNewsTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isOpportunityTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isOrganizationTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isUserTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-output.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from \"class-transformer\";\nimport { IsBoolean, IsOptional, IsString, IsDate } from \"class-validator\";\n\nexport class TagOutputDto {\n  @IsString()\n  @Expose()\n  id: string;\n\n  @IsString()\n  @Expose()\n  tag: string;\n\n  @IsBoolean()\n  @Expose()\n  isUserTag: boolean;\n\n  @IsBoolean()\n  @Expose()\n  isOrganizationTag: boolean;\n\n  @IsBoolean()\n  @Expose()\n  isEventTag: boolean;\n\n  @IsBoolean()\n  @Expose()\n  isNewsTag: boolean;\n\n  @IsBoolean()\n  @Expose()\n  isOpportunityTag: boolean;\n\n  @IsDate()\n  @Expose()\n  createdAt: Date;\n\n  @IsDate()\n  @Expose()\n  updatedAt: Date;\n\n  @IsOptional()\n  @IsDate()\n  @Expose()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagSearchInput.html":{"url":"classes/TagSearchInput.html","title":"class - TagSearchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagSearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/dto/tags-input.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationParamsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isEventTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isNewsTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isOpportunityTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isOrganizationTag\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isUserTag\n                            \n                            \n                                    \n                                    \n                                    \n                                tag\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isEventTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isNewsTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isOpportunityTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isOrganizationTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isUserTag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tags/dto/tags-input.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 100', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional, defaults to 0', type: Number})@IsNumber()@IsOptional()@Min(0)@Transform( => , {toClassOnly: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationParamsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationParamsDto:24\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsBoolean, IsOptional, IsString } from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\n\nexport type TagsType =\n  | \"USER\"\n  | \"ORGANIZATION\"\n  | \"EVENT\"\n  | \"NEWS\"\n  | \"OPPORTUNITY\";\n\nexport class TagSearchInput extends PaginationParamsDto {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  tag: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isUserTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isOrganizationTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isEventTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isNewsTag?: boolean;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  isOpportunityTag?: boolean;\n}\n\nexport class AddTagDto {\n  @ApiProperty({\n    description: \"The name of the tag\",\n    example: \"Tech\",\n    required: true,\n  })\n  @IsString()\n  tag: string;\n\n  @ApiProperty({\n    description: \"Indicates if this is a user tag\",\n    example: true,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isUserTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an organization tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isOrganizationTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an event tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isEventTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is a news tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isNewsTag?: boolean;\n\n  @ApiProperty({\n    description: \"Indicates if this is an opportunity tag\",\n    example: false,\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isOpportunityTag?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_imports\n\n\n\ncluster_TagsModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nTagsModule\n\nTagsModule\n\nTagsModule -->\n\nSharedModule->TagsModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { TagsService } from \"./services/tags.service\";\nimport { TagController } from \"./controllers/tags.controller\";\n\n@Module({\n  imports: [SharedModule],\n  providers: [TagsService],\n  controllers: [TagController],\n  exports: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/services/tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTag\n                            \n                            \n                                    Async\n                                getTags\n                            \n                            \n                                    Async\n                                getTagsByType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/tags/services/tags.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTag(ctx: RequestContext, payload: AddTagDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tags/services/tags.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            AddTagDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTags(ctx: RequestContext, query: TagSearchInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tags/services/tags.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            TagSearchInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTagsByType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTagsByType(ctx: RequestContext, type: TagsType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tags/services/tags.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            TagsType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { plainToClass, plainToInstance } from \"class-transformer\";\n\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\nimport { TagOutputDto } from \"../dto/tags-output.dto\";\nimport { AddTagDto, TagSearchInput, TagsType } from \"../dto/tags-input.dto\";\nimport { applyFilters } from \"../../shared/filters/prisma-filter.filter\";\nimport { Prisma } from \"@prisma/client\";\nimport { createSearchKey } from \"../../shared/utils/createSearchKey\";\n\n@Injectable()\nexport class TagsService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(TagsService.name);\n  }\n\n  async getTags(\n    ctx: RequestContext,\n    query: TagSearchInput\n  ): Promise {\n    this.logger.log(ctx, `${this.getTags.name} was called`);\n    const { limit, offset, ...restQuery } = query;\n\n    const { whereBuilder: tagsWhereQuery } =\n      await applyFilters({\n        appliedFiltersInput: restQuery,\n        availableFilters: {\n          tag: async ({ filter }) => {\n            const searchKey = createSearchKey(String(filter), \"AND\");\n            return {\n              where: {\n                OR: [\n                  {\n                    tag: {\n                      search: searchKey,\n                      mode: \"insensitive\",\n                    },\n                  },\n                  {\n                    tag: {\n                      contains: String(filter),\n                      mode: \"insensitive\",\n                    },\n                  },\n                ],\n              },\n            };\n          },\n          isUserTag: async ({ filter }) => {\n            return {\n              where: {\n                isUserTag: true,\n              },\n            };\n          },\n          isOrganizationTag: async ({ filter }) => {\n            return {\n              where: {\n                isOrganizationTag: true,\n              },\n            };\n          },\n\n          isEventTag: async ({ filter }) => {\n            return {\n              where: {\n                isEventTag: true,\n              },\n            };\n          },\n\n          isNewsTag: async ({ filter }) => {\n            return {\n              where: {\n                isNewsTag: true,\n              },\n            };\n          },\n        },\n      });\n\n    const tags = await this.prismaService.tags.findMany({\n      where: {\n        AND: [tagsWhereQuery],\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    console.log(\"==tags\", tags);\n    const tagsCount = await this.prismaService.tags.count({\n      where: {\n        AND: [tagsWhereQuery],\n      },\n    });\n\n    return {\n      tags: plainToInstance(TagOutputDto, tags, {\n        excludeExtraneousValues: true,\n      }),\n      count: tagsCount,\n    };\n  }\n\n  async getTagsByType(\n    ctx: RequestContext,\n    type: TagsType\n  ): Promise {\n    this.logger.log(ctx, `${this.getTagsByType.name} was called`);\n    const { whereBuilder: tagsWhereQuery } =\n      await applyFilters({\n        appliedFiltersInput: {\n          type,\n        },\n        availableFilters: {\n          type: async ({ filter }) => {\n            const tagType = filter as TagsType;\n            if (tagType === \"NEWS\") {\n              return {\n                where: {\n                  isNewsTag: true,\n                },\n              };\n            }\n            if (tagType === \"EVENT\") {\n              return {\n                where: {\n                  isEventTag: true,\n                },\n              };\n            }\n            if (tagType === \"OPPORTUNITY\") {\n              return {\n                where: {\n                  isOpportunityTag: true,\n                },\n              };\n            }\n            if (tagType === \"ORGANIZATION\") {\n              return {\n                where: {\n                  isOrganizationTag: true,\n                },\n              };\n            }\n            if (tagType === \"USER\") {\n              return {\n                where: {\n                  isUserTag: true,\n                },\n              };\n            }\n            return {\n              where: {},\n            };\n          },\n        },\n      });\n\n    const tags = await this.prismaService.tags.findMany({\n      where: {\n        AND: [tagsWhereQuery],\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n    const tagsCount = await this.prismaService.tags.count({\n      where: {\n        AND: [tagsWhereQuery],\n      },\n    });\n\n    return {\n      tags: plainToInstance(TagOutputDto, tags, {\n        excludeExtraneousValues: true,\n      }),\n      count: tagsCount,\n    };\n  }\n\n  async addTag(ctx: RequestContext, payload: AddTagDto): Promise {\n    this.logger.log(ctx, `${this.addTag.name} was called`);\n    const tag = await this.prismaService.tags.create({\n      data: {\n        ...payload,\n      },\n    });\n\n    return plainToClass(TagOutputDto, tag, {\n      excludeExtraneousValues: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeMapping.html":{"url":"interfaces/TypeMapping.html","title":"interface - TypeMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TypeMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/base-api-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/shared/dtos/base-api-response.dto.ts:49\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport {\n  ApiProperty,\n  ApiPropertyOptional,\n  getSchemaPath,\n} from \"@nestjs/swagger\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { UserOutput } from \"../../user/dtos/user-output.dto\";\nimport { EventResponseDto } from \"../../events/dto/events.dto\";\nimport { OrganizationResponseDto } from \"../../organization/dto/organization.dto\";\nimport { OpportunityResponseDto } from \"../../opportunity/dto/opportunities.dto\";\nimport { AuthTokenOutput } from \"../../auth/dtos/auth-token-output.dto\";\nimport { RegisterOutput } from \"../../auth/dtos/auth-register-output.dto\";\nimport { ImagekitResponseDto } from \"../../imagekit/imagekit.dto\";\nimport {\n  UserApiResponse,\n  UserArrayApiResponse,\n  TagApiResponse,\n  TagArrayApiResponse,\n  EventApiResponse,\n  EventArrayApiResponse,\n  OrganizationApiResponse,\n  OrganizationArrayApiResponse,\n  OpportunityApiResponse,\n  OpportunityArrayApiResponse,\n  AuthTokenApiResponse,\n  RegisterApiResponse,\n  ImagekitApiResponse,\n} from \"./specific-api-responses.dto\";\n\n// Keeping this for backward compatibility\nexport class BaseApiResponse {\n  public data: T;\n\n  @ApiProperty({ type: Object })\n  public meta: Record = {};\n}\n\n// API property type definition\ntype ApiPropertyType =\n  | Type\n  | Function\n  | [Function]\n  | string\n  | number\n  | boolean;\n\n// Type mapping dictionary - maps type names to response classes\ninterface TypeMapping {\n  [key: string]: any;\n}\n\n// Non-generic response type mapping\nconst responseTypeMap: TypeMapping = {\n  UserOutput: UserApiResponse,\n  \"UserOutput[]\": UserArrayApiResponse,\n  TagOutputDto: TagApiResponse,\n  \"TagOutputDto[]\": TagArrayApiResponse,\n  EventResponseDto: EventApiResponse,\n  \"EventResponseDto[]\": EventArrayApiResponse,\n  OrganizationResponseDto: OrganizationApiResponse,\n  \"OrganizationResponseDto[]\": OrganizationArrayApiResponse,\n  OpportunityResponseDto: OpportunityApiResponse,\n  \"OpportunityResponseDto[]\": OpportunityArrayApiResponse,\n  AuthTokenOutput: AuthTokenApiResponse,\n  RegisterOutput: RegisterApiResponse,\n  ImagekitResponseDto: ImagekitApiResponse,\n};\n\n/**\n * Returns a proper OpenAPI compatible response class\n * This function avoids using generics in OpenAPI schema generation\n */\nexport function SwaggerBaseApiResponse(\n  type: T\n): any {\n  let typeName: string;\n  if (Array.isArray(type)) {\n    typeName = `${type[0].name}[]`;\n  } else if (typeof type === \"function\") {\n    typeName = (type as Function).name;\n  } else {\n    typeName = String(type);\n  }\n\n  if (responseTypeMap[typeName]) {\n    return responseTypeMap[typeName];\n  }\n\n  const className = `ApiResponseOf${typeName.replace(\"[]\", \"Array\")}`;\n\n  class CustomApiResponse extends BaseApiResponse {\n    @ApiProperty(\n      Array.isArray(type)\n        ? {\n            type: \"array\",\n            items: {\n              $ref: getSchemaPath(type[0]),\n            },\n          }\n        : { type: type as any }\n    )\n    public declare data: any;\n  }\n\n  Object.defineProperty(CustomApiResponse, \"name\", {\n    value: className,\n  });\n\n  return CustomApiResponse;\n}\n\nexport class BaseApiErrorObject {\n  @ApiProperty({ type: Number })\n  public statusCode: number;\n\n  @ApiProperty({ type: String })\n  public message: string;\n\n  @ApiPropertyOptional({ type: String })\n  public localizedMessage: string;\n\n  @ApiProperty({ type: String })\n  public errorName: string;\n\n  @ApiProperty({ type: Object })\n  public details: unknown;\n\n  @ApiProperty({ type: String })\n  public path: string;\n\n  @ApiProperty({ type: String })\n  public requestId: string;\n\n  @ApiProperty({ type: String })\n  public timestamp: string;\n}\n\nexport class BaseApiErrorResponse {\n  @ApiProperty({ type: BaseApiErrorObject })\n  public error: BaseApiErrorObject;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEventDto.html":{"url":"classes/UpdateEventDto.html","title":"class - UpdateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/events.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                format\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                gallery\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isDraft\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                locationType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                organizer\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                registrationLink\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:285\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:313\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:308\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:261\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:229\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:277\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event description', example: 'A leading technology company'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:194\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:222\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        gallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Gallery iamges', required: false, example: '5551234567'})@ValidateNested({each: true})@Type(undefined)@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:296\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event status'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:328\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:201\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:208\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:186\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        registrationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:245\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        registrationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'link', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:253\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:300\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:237\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:269\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:321\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Event name', example: 'Tech Innovations'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'event type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/events.dto.ts:215\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsBoolean,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class EventsSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsOptional()\n  @IsString()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateEventDto {\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer?: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  type?: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @IsOptional()\n  format?: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Event status\",\n  })\n  @IsBoolean()\n  @IsOptional()\n  isDraft?: boolean;\n}\n\nexport class EventResponseDto {\n  @ApiProperty({\n    description: \"Event id\",\n    example: \"abcd\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Event name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Event description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"event type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  startDate?: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  registrationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"link\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  registrationLink?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  eventGallery: GalleryResponse[];\n\n  @ApiProperty({ description: \"Draft status\" })\n  @Expose()\n  isDraft: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsDto.html":{"url":"classes/UpdateNewsDto.html","title":"class - UpdateNewsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news/dto/news.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                mode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                newsLink\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                publishedDate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                publishedYear\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                source\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/news-banner.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by', example: 'admin'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News mode', example: 'Online'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        newsLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News link', example: 'https://example.com/news-article'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Published date'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        publishedYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Published year'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News source', example: 'Tech News Portal'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'News title', example: 'New Technology Breakthrough'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/news/dto/news.dto.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsDate,\n  IsDateString,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { Expose } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\n\nexport class NewsSearchInput extends PaginationParamsDto {\n  @ApiProperty({ required: false })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({ required: false, type: [String] })\n  @IsArray()\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class CreateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n    example: \"2025-04-15T00:00:00.000Z\",\n  })\n  @IsDateString()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsUrl()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateNewsDto {\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @IsOptional()\n  title?: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @IsOptional()\n  mode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Published date\",\n  })\n  @IsOptional()\n  publishedDate?: Date;\n\n  @ApiPropertyOptional({\n    description: \"Published year\",\n  })\n  @IsOptional()\n  publishedYear?: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @IsOptional()\n  newsLink?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy?: string;\n}\n\nexport class NewsResponseDto {\n  @ApiProperty({\n    description: \"News ID\",\n    example: \"clgf7xhig0000qof3m53ibdz1\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"News title\",\n    example: \"New Technology Breakthrough\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"News source\",\n    example: \"Tech News Portal\",\n  })\n  @IsString()\n  @Expose()\n  source: string;\n\n  @ApiProperty({\n    description: \"News mode\",\n    example: \"Online\",\n  })\n  @IsString()\n  @Expose()\n  mode: string;\n\n  @ApiProperty({\n    description: \"Published date\",\n  })\n  @Expose()\n  publishedDate: Date;\n\n  @ApiProperty({\n    description: \"Published year\",\n  })\n  @Expose()\n  publishedYear: Date;\n\n  @ApiProperty({\n    description: \"News link\",\n    example: \"https://example.com/news-article\",\n  })\n  @IsString()\n  @Expose()\n  newsLink: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/news-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({\n    description: \"Contributed by\",\n    example: \"admin\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiProperty({\n    description: \"Created at\",\n  })\n  @Expose()\n  createdAt: Date;\n\n  @ApiProperty({\n    description: \"Updated at\",\n  })\n  @Expose()\n  updatedAt: Date;\n\n  @ApiPropertyOptional({\n    description: \"Deleted at\",\n  })\n  @IsOptional()\n  @Expose()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOpportunityDto.html":{"url":"classes/UpdateOpportunityDto.html","title":"class - UpdateOpportunityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOpportunityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/opportunity/dto/opportunities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                applicationDeadline\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                contributedBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cost\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                locationType\n                            \n                            \n                                    \n                                    \n                                    \n                                organizer\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:249\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        applicationDeadline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'date', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:217\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:265\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:260\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'email contact', required: false})@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:225\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        contributedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contributed by'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:209\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'cost', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:241\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity description', example: 'A leading technology company'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:174\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:202\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:181\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        locationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'location type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        organizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'organizer'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:253\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:233\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:273\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity name', example: 'Tech Innovations'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Opportunity type'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/opportunity/dto/opportunities.dto.ts:195\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OpportunitySearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  title: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"The Green Fellows Program\",\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  type: string;\n\n  @ApiProperty({\n    description: \"opportunity format\",\n  })\n  @IsString()\n  format: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"duration\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  duration?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl?: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOpportunityDto {\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @IsOptional()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @IsOptional()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @IsOptional()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @IsOptional()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @IsOptional()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @IsOptional()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  cost?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OpportunityResponseDto {\n  @ApiProperty({\n    description: \"Opportunity ID\",\n    example: \"cm92hbrpe00049kz8bwoaz1rh\",\n  })\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty({\n    description: \"Opportunity name\",\n    example: \"Tech Innovations\",\n  })\n  @IsString()\n  @Expose()\n  title: string;\n\n  @ApiProperty({\n    description: \"organizer\",\n  })\n  @IsString()\n  @Expose()\n  organizer: string;\n\n  @ApiProperty({\n    description: \"Opportunity description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"location\",\n  })\n  @IsString()\n  @Expose()\n  location: string;\n\n  @ApiProperty({\n    description: \"location type\",\n  })\n  @IsString()\n  @Expose()\n  locationType: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: \"Opportunity type\",\n  })\n  @IsString()\n  @Expose()\n  format: string;\n\n  @ApiProperty({\n    description: \"Contributed by\",\n  })\n  @IsString()\n  @Expose()\n  contributedBy: string;\n\n  @ApiPropertyOptional({\n    description: \"date\",\n    required: false,\n  })\n  @IsString()\n  @Expose()\n  applicationDeadline?: string;\n\n  @ApiPropertyOptional({\n    description: \"email contact\",\n    required: false,\n  })\n  @IsOptional()\n  @IsEmail()\n  @Expose()\n  contactEmail?: string;\n\n  @ApiPropertyOptional({\n    description: \"status\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  status?: string;\n\n  @ApiPropertyOptional({\n    description: \"cost\",\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  cost?: string;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  OpportunityGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrganizationDto.html":{"url":"classes/UpdateOrganizationDto.html","title":"class - UpdateOrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/organization/dto/organization.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                bannerImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                gallery\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                logoImageId\n                            \n                            \n                                    \n                                    \n                                    \n                                logoImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneCountryCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socials\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tagIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address', required: false, example: '5551234567'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bannerImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        bannerImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image URL', example: 'https://example.com/org-banner.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:195\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization description', example: 'A leading technology company'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization email', example: 'contact@techinnovations.com'})@IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        gallery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GalleryInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Gallery iamges', required: false, example: '5551234567'})@ValidateNested({each: true})@Type(undefined)@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:183\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        logoImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Logo image ID', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:213\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        logoImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Logo image URL', example: 'https://example.com/org-logo.jpg'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:208\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Organization name', example: 'Tech Innovations Inc.'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneCountryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone country code', required: false, example: '+1'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone number', required: false, example: '5551234567'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Object of Socials ', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:187\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tagIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags IDs', type: undefined, required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/organization/dto/organization.dto.ts:217\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport {\n  IsArray,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AddressInput, AddressResponse } from \"../../shared/dtos/address.dto\";\nimport { Expose, Type } from \"class-transformer\";\nimport { TagOutputDto } from \"../../tags/dto/tags-output.dto\";\nimport { GalleryInput, GalleryResponse } from \"../../shared/dtos/gallery.dto\";\n\nexport class OrganizationSearchInput extends PaginationParamsDto {\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsArray()\n  tagIds: string[];\n}\n\nexport class CreateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiPropertyOptional({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  bannerImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  logoImageUrl: string;\n\n  @ApiPropertyOptional({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiPropertyOptional({\n    description: \"Tags IDs\",\n    type: [String],\n    required: false,\n  })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class UpdateOrganizationDto {\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @IsString()\n  @IsOptional()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @IsString()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @IsEmail()\n  @IsOptional()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  address?: AddressInput;\n\n  @ApiPropertyOptional({\n    description: \"Gallery iamges\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @ValidateNested({ each: true })\n  @Type(() => GalleryInput)\n  @IsArray()\n  @IsOptional()\n  gallery?: GalleryInput[];\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @IsOptional()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @IsString()\n  @IsOptional()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @IsString()\n  @IsOptional()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @IsOptional()\n  tagIds?: string[];\n}\n\nexport class OrganizationResponseDto {\n  @ApiProperty({\n    description: \"Organization id\",\n    example: \"asdasd\",\n  })\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: \"Organization name\",\n    example: \"Tech Innovations Inc.\",\n  })\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: \"Organization description\",\n    example: \"A leading technology company\",\n  })\n  @Expose()\n  description: string;\n\n  @ApiProperty({\n    description: \"Organization email\",\n    example: \"contact@techinnovations.com\",\n  })\n  @Expose()\n  email: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone country code\",\n    required: false,\n    example: \"+1\",\n  })\n  @Expose()\n  phoneCountryCode?: string;\n\n  @ApiPropertyOptional({\n    description: \"Phone number\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @ApiPropertyOptional({\n    description: \"Address\",\n    required: false,\n    example: \"5551234567\",\n  })\n  @Expose()\n  address?: AddressResponse;\n\n  @ApiProperty({ description: \"Object of Socials \", required: false })\n  @Expose()\n  socials?: any;\n\n  @ApiProperty({\n    description: \"Banner image URL\",\n    example: \"https://example.com/org-banner.jpg\",\n  })\n  @Expose()\n  bannerImageUrl: string;\n\n  @ApiProperty({ description: \"Banner image ID\", required: false })\n  @Expose()\n  bannerImageId?: string;\n\n  @ApiProperty({\n    description: \"Logo image URL\",\n    example: \"https://example.com/org-logo.jpg\",\n  })\n  @Expose()\n  logoImageUrl: string;\n\n  @ApiProperty({ description: \"Logo image ID\", required: false })\n  @Expose()\n  logoImageId?: string;\n\n  @ApiProperty({ description: \"Tags IDs\", type: [String], required: false })\n  @Expose()\n  tags?: TagOutputDto[];\n\n  @ApiProperty({ description: \"Gallery\", required: false })\n  @Expose()\n  organizationGallery: GalleryResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user-update-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsNotEmpty()@MaxLength(100)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-update-input.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsNotEmpty()@Length(6, 100)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-update-input.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n  MaxLength,\n} from 'class-validator';\n\nexport class UpdateUserInput {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsNotEmpty()\n  @MaxLength(100)\n  @IsString()\n  name: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsNotEmpty()\n  @Length(6, 100)\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAccessTokenClaims.html":{"url":"classes/UserAccessTokenClaims.html","title":"class - UserAccessTokenClaims","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAccessTokenClaims\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-token-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isAccountVerified\n                            \n                            \n                                    \n                                isSuperAdmin\n                            \n                            \n                                    \n                                phoneCountryCode\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isAccountVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isSuperAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneCountryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nexport class AuthTokenOutput {\n  @Expose()\n  @ApiProperty()\n  accessToken: string;\n\n  @Expose()\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class UserAccessTokenClaims {\n  @Expose()\n  id: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  fullName: string;\n\n  @Expose()\n  isSuperAdmin: boolean;\n\n  @Expose()\n  isAccountVerified: boolean;\n\n  @Expose()\n  gender: string | null;\n\n  @Expose()\n  phoneCountryCode: string | null;\n\n  @Expose()\n  phoneNumber: string | null;\n}\n\nexport class UserRefreshTokenClaims {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAclService.html":{"url":"injectables/UserAclService.html","title":"injectable - UserAclService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAclService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/services/user-acl.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAclService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                aclRules\n                            \n                            \n                                    Public\n                                forActor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isUserItself\n                            \n                            \n                                    Protected\n                                canDo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/user/services/user-acl.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isUserItself\n                        \n                    \n                \n            \n            \n                \nisUserItself(resource: User, actor: Actor)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user-acl.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actor\n                                            \n                                                            Actor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        canDo\n                        \n                    \n                \n            \n            \n                \n                        \n                    canDo(role: ROLE, actions: Action[], ruleCallback?: RuleCallback)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAclService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAclService:15\n\n                        \n                    \n\n\n            \n                \n                        Set ACL rule for a role\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            ROLE\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actions\n                                            \n                                                            Action[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ruleCallback\n                                            \n                                                            RuleCallback\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        aclRules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AclRule[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         BaseAclService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAclService:10\n\n                        \n                    \n\n            \n                \n                    ACL rules\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        forActor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         BaseAclService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAclService:28\n\n                        \n                    \n\n            \n                \n                    create user specific acl object to check ability to perform any action\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { BaseAclService } from \"../../shared/acl/acl.service\";\nimport { ROLE } from \"./../../auth/constants/role.constant\";\nimport { Action } from \"./../../shared/acl/action.constant\";\nimport { Actor } from \"./../../shared/acl/actor.constant\";\nimport { User } from \"@prisma/client\";\n\n@Injectable()\nexport class UserAclService extends BaseAclService {\n  constructor() {\n    super();\n    // Admin can do all action\n    this.canDo(ROLE.ADMIN, [Action.Manage]);\n    //user can read himself or any other user\n    this.canDo(ROLE.USER, [Action.Read]);\n    // user can only update himself\n    this.canDo(ROLE.USER, [Action.Update], this.isUserItself);\n  }\n\n  isUserItself(resource: User, actor: Actor): boolean {\n    return resource.id === actor.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApiResponse.html":{"url":"classes/UserApiResponse.html","title":"class - UserApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserOutput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserArrayApiResponse.html":{"url":"classes/UserArrayApiResponse.html","title":"class - UserArrayApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserArrayApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dtos/specific-api-responses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserOutput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/dtos/specific-api-responses.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserOutput } from '../../user/dtos/user-output.dto';\nimport { TagOutputDto } from '../../tags/dto/tags-output.dto';\nimport { EventResponseDto } from '../../events/dto/events.dto';\nimport { OrganizationResponseDto } from '../../organization/dto/organization.dto';\nimport { OpportunityResponseDto } from '../../opportunity/dto/opportunities.dto';\nimport { AuthTokenOutput } from '../../auth/dtos/auth-token-output.dto';\nimport { RegisterOutput } from '../../auth/dtos/auth-register-output.dto';\nimport { ImagekitResponseDto } from '../../imagekit/imagekit.dto';\n\n// Base metadata class used by all responses\nexport class ResponseMetadata {\n  @ApiProperty({ type: Object, required: false })\n  public count?: number;\n\n  @ApiProperty({ type: Object, required: false })\n  public additionalInfo?: Record;\n}\n\n// User responses\nexport class UserApiResponse {\n  @ApiProperty()\n  public data: UserOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class UserArrayApiResponse {\n  @ApiProperty({ type: [UserOutput] })\n  public data: UserOutput[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Tag responses\nexport class TagApiResponse {\n  @ApiProperty()\n  public data: TagOutputDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class TagArrayApiResponse {\n  @ApiProperty({ type: [TagOutputDto] })\n  public data: TagOutputDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Event responses\nexport class EventApiResponse {\n  @ApiProperty()\n  public data: EventResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class EventArrayApiResponse {\n  @ApiProperty({ type: [EventResponseDto] })\n  public data: EventResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Organization responses\nexport class OrganizationApiResponse {\n  @ApiProperty()\n  public data: OrganizationResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OrganizationArrayApiResponse {\n  @ApiProperty({ type: [OrganizationResponseDto] })\n  public data: OrganizationResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Opportunity responses\nexport class OpportunityApiResponse {\n  @ApiProperty()\n  public data: OpportunityResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class OpportunityArrayApiResponse {\n  @ApiProperty({ type: [OpportunityResponseDto] })\n  public data: OpportunityResponseDto[];\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Auth responses\nexport class AuthTokenApiResponse {\n  @ApiProperty()\n  public data: AuthTokenOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\nexport class RegisterApiResponse {\n  @ApiProperty()\n  public data: RegisterOutput;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n\n// Imagekit response\nexport class ImagekitApiResponse {\n  @ApiProperty()\n  public data: ImagekitResponseDto;\n\n  @ApiProperty()\n  public meta: ResponseMetadata;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getMyProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getMyProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyProfile(ctx: RequestContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@UseInterceptors(ClassSerializerInterceptor)@Get('me')@ApiOperation({summary: 'Get user me API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controllers/user.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(ctx: RequestContext, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get(':id')@ApiOperation({summary: 'Get user by id API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/user/controllers/user.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(ctx: RequestContext, query: PaginationParamsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(ClassSerializerInterceptor)@Get()@ApiOperation({summary: 'Get users as a list API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(ROLE.ADMIN, ROLE.USER)@ApiBearerAuth()\n                \n            \n\n                    \n                        \n                            Defined in src/user/controllers/user.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            PaginationParamsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(ctx: RequestContext, userId: number, input: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update user API'})@ApiResponse({status: undefined, type: undefined})@ApiResponse({status: undefined, type: BaseApiErrorResponse})@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/user/controllers/user.controller.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Query,\n  UnauthorizedException,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\n\nimport { ROLE } from \"../../auth/constants/role.constant\";\nimport { Roles } from \"../../auth/decorators/role.decorator\";\nimport { JwtAuthGuard } from \"../../auth/guards/jwt-auth.guard\";\nimport { RolesGuard } from \"../../auth/guards/roles.guard\";\nimport {\n  BaseApiErrorResponse,\n  BaseApiResponse,\n  SwaggerBaseApiResponse,\n} from \"../../shared/dtos/base-api-response.dto\";\nimport { PaginationParamsDto } from \"../../shared/dtos/pagination-params.dto\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { ReqContext } from \"../../shared/request-context/req-context.decorator\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { UserOutput } from \"../dtos/user-output.dto\";\nimport { UpdateUserInput } from \"../dtos/user-update-input.dto\";\nimport { UserService } from \"../services/user.service\";\n\n@ApiTags(\"users\")\n@Controller(\"users\")\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly logger: AppLogger\n  ) {\n    this.logger.setContext(UserController.name);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\"me\")\n  @ApiOperation({\n    summary: \"Get user me API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(UserOutput),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  async getMyProfile(\n    @ReqContext() ctx: RequestContext\n  ): Promise> {\n    this.logger.log(ctx, `${this.getMyProfile.name} was called`);\n\n    const user = await this.userService.findById(ctx, ctx.user!.id);\n    return { data: user, meta: {} };\n  }\n\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get()\n  @ApiOperation({\n    summary: \"Get users as a list API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse([UserOutput]),\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    type: BaseApiErrorResponse,\n  })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(ROLE.ADMIN, ROLE.USER)\n  @ApiBearerAuth()\n  async getUsers(\n    @ReqContext() ctx: RequestContext,\n    @Query() query: PaginationParamsDto\n  ): Promise> {\n    this.logger.log(ctx, `${this.getUsers.name} was called`);\n\n    const { users, count } = await this.userService.getUsers(\n      ctx,\n      query.limit,\n      query.offset\n    );\n\n    return { data: users, meta: { count } };\n  }\n\n  // TODO: ADD RoleGuard\n  // NOTE : This can be made a admin only endpoint. For normal users they can use GET /me\n  @UseInterceptors(ClassSerializerInterceptor)\n  @Get(\":id\")\n  @ApiOperation({\n    summary: \"Get user by id API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(UserOutput),\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    type: BaseApiErrorResponse,\n  })\n  async getUser(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") id: number\n  ): Promise> {\n    this.logger.log(ctx, `${this.getUser.name} was called`);\n\n    const user = await this.userService.getUserById(ctx, id);\n    return { data: user, meta: {} };\n  }\n\n  // TODO: ADD RoleGuard\n  // NOTE : This can be made a admin only endpoint. For normal users they can use PATCH /me\n  @Patch(\":id\")\n  @ApiOperation({\n    summary: \"Update user API\",\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: SwaggerBaseApiResponse(UserOutput),\n  })\n  @ApiResponse({\n    status: HttpStatus.NOT_FOUND,\n    type: BaseApiErrorResponse,\n  })\n  @UseInterceptors(ClassSerializerInterceptor)\n  async updateUser(\n    @ReqContext() ctx: RequestContext,\n    @Param(\"id\") userId: number,\n    @Body() input: UpdateUserInput\n  ): Promise> {\n    this.logger.log(ctx, `${this.updateUser.name} was called`);\n\n    const user = await this.userService.updateUser(ctx, userId, input);\n    return { data: user, meta: {} };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nSharedModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nUserModule -->\n\nJwtAuthStrategy->UserModule\n\n\n\n\n\nUserAclService\n\nUserAclService\n\nUserModule -->\n\nUserAclService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAuthStrategy\n                        \n                        \n                            UserAclService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { JwtAuthStrategy } from '../auth/strategies/jwt-auth.strategy';\nimport { SharedModule } from '../shared/shared.module';\nimport { UserController } from './controllers/user.controller';\nimport { UserService } from './services/user.service';\nimport { UserAclService } from './services/user-acl.service';\n\n@Module({\n  imports: [SharedModule],\n  providers: [UserService, JwtAuthStrategy, UserAclService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserOutput.html":{"url":"classes/UserOutput.html","title":"class - UserOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                fullName\n                            \n                            \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isAccountVerified\n                            \n                            \n                                    \n                                    \n                                isSuperAdmin\n                            \n                            \n                                    \n                                    \n                                phoneCountryCode\n                            \n                            \n                                    \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isAccountVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isSuperAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phoneCountryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user-output.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nexport class UserOutput {\n  @Expose()\n  @ApiProperty()\n  id: string;\n\n  @Expose()\n  @ApiProperty()\n  email: string;\n\n  @Expose()\n  @ApiProperty()\n  fullName: string;\n\n  @Expose()\n  @ApiProperty()\n  isSuperAdmin: boolean;\n\n  @Expose()\n  @ApiProperty()\n  isAccountVerified: boolean;\n\n  @ApiProperty()\n  @Expose()\n  gender: string | null;\n\n  @ApiProperty()\n  @Expose()\n  phoneCountryCode: string | null;\n\n  @ApiProperty()\n  @Expose()\n  phoneNumber: string | null;\n\n  @ApiProperty()\n  @Expose()\n  createdAt: string;\n\n  @ApiProperty()\n  @Expose()\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRefreshTokenClaims.html":{"url":"classes/UserRefreshTokenClaims.html","title":"class - UserRefreshTokenClaims","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRefreshTokenClaims\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-token-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth-token-output.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Expose } from \"class-transformer\";\n\nexport class AuthTokenOutput {\n  @Expose()\n  @ApiProperty()\n  accessToken: string;\n\n  @Expose()\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class UserAccessTokenClaims {\n  @Expose()\n  id: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  fullName: string;\n\n  @Expose()\n  isSuperAdmin: boolean;\n\n  @Expose()\n  isAccountVerified: boolean;\n\n  @Expose()\n  gender: string | null;\n\n  @Expose()\n  phoneCountryCode: string | null;\n\n  @Expose()\n  phoneNumber: string | null;\n}\n\nexport class UserRefreshTokenClaims {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                validateUsernamePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: AppLogger, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(ctx: RequestContext, input: CreateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(ctx: RequestContext, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(ctx: RequestContext, username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(ctx: RequestContext, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(ctx: RequestContext, limit: number, offset: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(ctx: RequestContext, userId: number, input: UpdateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUsernamePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUsernamePassword(ctx: RequestContext, email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/services/user.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                            RequestContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\n// import { compare, hash } from \"bcrypt\";\nimport { plainToClass } from \"class-transformer\";\nimport { AppLogger } from \"../../shared/logger/logger.service\";\nimport { RequestContext } from \"../../shared/request-context/request-context.dto\";\nimport { CreateUserInput } from \"../dtos/user-create-input.dto\";\nimport { UserOutput } from \"../dtos/user-output.dto\";\nimport { UpdateUserInput } from \"../dtos/user-update-input.dto\";\nimport { PrismaService } from \"../../shared/prisma-module/prisma.service\";\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly logger: AppLogger,\n    private readonly prismaService: PrismaService\n  ) {\n    this.logger.setContext(UserService.name);\n  }\n  async createUser(\n    ctx: RequestContext,\n    input: CreateUserInput\n  ): Promise {\n    this.logger.log(ctx, `${this.createUser.name} was called`);\n\n    return plainToClass(\n      UserOutput,\n      {},\n      {\n        excludeExtraneousValues: true,\n      }\n    );\n  }\n\n  async validateUsernamePassword(\n    ctx: RequestContext,\n    email: string,\n    pass: string\n  ): Promise {\n    this.logger.log(ctx, `${this.validateUsernamePassword.name} was called`);\n\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        email,\n      },\n    });\n\n    if (!user) throw new UnauthorizedException(\"User not found.\");\n    // const match = await compare(pass, user.password);\n    const match = true;\n    if (!match) throw new UnauthorizedException(\"Email or password mismatch.\");\n\n    return plainToClass(UserOutput, user, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async getUsers(\n    ctx: RequestContext,\n    limit: number,\n    offset: number\n  ): Promise {\n    this.logger.log(ctx, `${this.getUsers.name} was called`);\n\n    const usersOutput = plainToClass(UserOutput, [], {\n      excludeExtraneousValues: true,\n    });\n\n    return { users: usersOutput, count: 1 };\n  }\n\n  async findById(ctx: RequestContext, id: string): Promise {\n    this.logger.log(ctx, `${this.findById.name} was called`);\n\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    if (!user) throw new UnauthorizedException(\"User not found.\");\n\n    return plainToClass(UserOutput, user, {\n      excludeExtraneousValues: true,\n    });\n  }\n\n  async getUserById(ctx: RequestContext, id: number): Promise {\n    this.logger.log(ctx, `${this.getUserById.name} was called`);\n\n    return plainToClass(\n      UserOutput,\n      {},\n      {\n        excludeExtraneousValues: true,\n      }\n    );\n  }\n\n  async findByUsername(\n    ctx: RequestContext,\n    username: string\n  ): Promise {\n    this.logger.log(ctx, `${this.findByUsername.name} was called`);\n\n    return plainToClass(\n      UserOutput,\n      {},\n      {\n        excludeExtraneousValues: true,\n      }\n    );\n  }\n\n  async updateUser(\n    ctx: RequestContext,\n    userId: number,\n    input: UpdateUserInput\n  ): Promise {\n    this.logger.log(ctx, `${this.updateUser.name} was called`);\n\n    // Hash the password if it exists in the input payload.\n    if (input.password) {\n      // input.password = await hash(input.password, 10);\n    }\n\n    return plainToClass(\n      UserOutput,\n      {},\n      {\n        excludeExtraneousValues: true,\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        scripts/seed/user.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        scripts/seed/user.ts\n            \n            variable\n            seedSuperAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/analytics/controllers/analytics.controller.ts\n            \n            controller\n            AnalyticsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/analytics/dtos/admin-analytics-output.dto.ts\n            \n            class\n            AdminAnalyticsOutput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/analytics/services/analytics.service.ts\n            \n            injectable\n            AnalyticsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/constants/strategy.constant.ts\n            \n            variable\n            STRATEGY_JWT_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/strategy.constant.ts\n            \n            variable\n            STRATEGY_JWT_REFRESH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/strategy.constant.ts\n            \n            variable\n            STRATEGY_LOCAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/controllers/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/auth/decorators/role.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/role.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-login-input.dto.ts\n            \n            class\n            LoginInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-refresh-token-input.dto.ts\n            \n            class\n            RefreshTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-register-input.dto.ts\n            \n            class\n            RegisterInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-register-output.dto.ts\n            \n            class\n            RegisterOutput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-token-output.dto.ts\n            \n            class\n            AuthTokenOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-token-output.dto.ts\n            \n            class\n            UserAccessTokenClaims\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-token-output.dto.ts\n            \n            class\n            UserRefreshTokenClaims\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-refresh.guard.ts\n            \n            injectable\n            JwtRefreshGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt-auth.strategy.ts\n            \n            injectable\n            JwtAuthStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt-refresh.strategy.ts\n            \n            injectable\n            JwtRefreshStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/events/controllers/events.controller.ts\n            \n            controller\n            EventsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/events/dto/events.dto.ts\n            \n            class\n            CreateEventDto\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/events/dto/events.dto.ts\n            \n            class\n            EventResponseDto\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/events/dto/events.dto.ts\n            \n            class\n            EventsSearchInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/events/dto/events.dto.ts\n            \n            class\n            UpdateEventDto\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/events/services/events.service.ts\n            \n            injectable\n            EventsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/imagekit/imagekit.controller.ts\n            \n            controller\n            ImagekitController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/imagekit/imagekit.dto.ts\n            \n            class\n            ImagekitAuthParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/imagekit/imagekit.dto.ts\n            \n            class\n            ImagekitResponseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/imagekit/imagekit.service.ts\n            \n            injectable\n            ImagekitService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            updateReferences\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/news/controllers/news.controller.ts\n            \n            controller\n            NewsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/news/dto/news.dto.ts\n            \n            class\n            CreateNewsDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/news/dto/news.dto.ts\n            \n            class\n            NewsResponseDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/news/dto/news.dto.ts\n            \n            class\n            NewsSearchInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/news/dto/news.dto.ts\n            \n            class\n            UpdateNewsDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/news/services/news.service.ts\n            \n            injectable\n            NewsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/opportunity/controllers/opportunities.controller.ts\n            \n            controller\n            OpportunityController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/opportunity/dto/opportunities.dto.ts\n            \n            class\n            CreateOpportunityDto\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/opportunity/dto/opportunities.dto.ts\n            \n            class\n            OpportunityResponseDto\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/opportunity/dto/opportunities.dto.ts\n            \n            class\n            OpportunitySearchInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/opportunity/dto/opportunities.dto.ts\n            \n            class\n            UpdateOpportunityDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/opportunity/services/opportunities.service.ts\n            \n            injectable\n            OpportunityService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/organization/controllers/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/organization/dto/organization.dto.ts\n            \n            class\n            CreateOrganizationDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/organization/dto/organization.dto.ts\n            \n            class\n            OrganizationResponseDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/organization/dto/organization.dto.ts\n            \n            class\n            OrganizationSearchInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/organization/dto/organization.dto.ts\n            \n            class\n            UpdateOrganizationDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/organization/services/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/shared/acl/acl-rule.constant.ts\n            \n            type alias\n            AclRule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/shared/acl/acl-rule.constant.ts\n            \n            type alias\n            RuleCallback\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/shared/acl/acl.service.ts\n            \n            class\n            BaseAclService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/shared/acl/actor.constant.ts\n            \n            interface\n            Actor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/shared/configs/module-options.ts\n            \n            variable\n            configModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/common.ts\n            \n            variable\n            FORWARDED_FOR_TOKEN_HEADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/common.ts\n            \n            variable\n            REQUEST_ID_TOKEN_HEADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/common.ts\n            \n            variable\n            VALIDATION_PIPE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/index.ts\n            \n            variable\n            permissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/index.ts\n            \n            type alias\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/index.ts\n            \n            type alias\n            PermissionActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/index.ts\n            \n            type alias\n            PermissionModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/roles.permissions.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/permissions/users.permissions.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/decorators/sorting-params-swagger.decorator.ts\n            \n            variable\n            ApiSortingQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/decorators/sorting-params.decorator.ts\n            \n            variable\n            SortingParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/decorators/sorting-params.decorator.ts\n            \n            type alias\n            SortingParam\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/dtos/address.dto.ts\n            \n            class\n            AddressInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/dtos/address.dto.ts\n            \n            class\n            AddressResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/dtos/base-api-response.dto.ts\n            \n            class\n            BaseApiErrorObject\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/shared/dtos/base-api-response.dto.ts\n            \n            class\n            BaseApiErrorResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/dtos/base-api-response.dto.ts\n            \n            class\n            BaseApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/base-api-response.dto.ts\n            \n            interface\n            TypeMapping\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/dtos/base-api-response.dto.ts\n            \n            function\n            SwaggerBaseApiResponse\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/shared/dtos/base-api-response.dto.ts\n            \n            variable\n            responseTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/dtos/base-api-response.dto.ts\n            \n            type alias\n            ApiPropertyType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/dtos/gallery.dto.ts\n            \n            class\n            GalleryInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/gallery.dto.ts\n            \n            class\n            GalleryResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/dtos/pagination-params.dto.ts\n            \n            class\n            PaginationParamsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            AuthTokenApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            EventApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            EventArrayApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            ImagekitApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            OpportunityApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            OpportunityArrayApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            OrganizationApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            OrganizationArrayApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            RegisterApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            ResponseMetadata\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            TagApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            TagArrayApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            UserApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dtos/specific-api-responses.dto.ts\n            \n            class\n            UserArrayApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/exceptions/base-api.exception.ts\n            \n            class\n            BaseApiException\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            function\n            mergeWithAnd\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            variable\n            applyFilters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IApplyFiltersInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IApplyFiltersOutput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IAvailableFilters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IAvailableFiltersInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IAvailableFiltersOutput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/filters/prisma-filter.filter.ts\n            \n            type alias\n            IDefaultFilters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/interceptors/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/logger/logger.service.ts\n            \n            injectable\n            AppLogger\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/shared/middlewares/request-id/request-id.middleware.ts\n            \n            variable\n            RequestIdMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/prisma-module/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/shared/request-context/req-context.decorator.ts\n            \n            variable\n            ReqContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/request-context/request-context.dto.ts\n            \n            class\n            RequestContext\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/shared/request-context/util/index.ts\n            \n            function\n            createRequestContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/utils/createSearchKey.ts\n            \n            variable\n            createSearchKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/utils/createSearchKey.ts\n            \n            variable\n            fullTextOperatorMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/utils/createSearchKey.ts\n            \n            type alias\n            Operators\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/controllers/tags.controller.ts\n            \n            controller\n            TagController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tags/dto/tags-input.dto.ts\n            \n            class\n            AddTagDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tags/dto/tags-input.dto.ts\n            \n            class\n            TagSearchInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/tags/dto/tags-input.dto.ts\n            \n            type alias\n            TagsType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/dto/tags-output.dto.ts\n            \n            class\n            TagOutputDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/tags/services/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dtos/user-create-input.dto.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dtos/user-output.dto.ts\n            \n            class\n            UserOutput\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/dtos/user-update-input.dto.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/services/user-acl.service.ts\n            \n            injectable\n            UserAclService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/user/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^11.0.11\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.11\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @prisma/client : 6.4.1\n        \n            @scalar/nestjs-api-reference : ^0.4.2\n        \n            @types/uuid : ^10.0.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            imagekit : ^6.0.0\n        \n            joi : ^17.13.3\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rimraf : ^6.0.1\n        \n            rxjs : ^7.8.2\n        \n            uuid : ^11.1.0\n        \n            winston : ^3.17.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (src/.../action.constant.ts)\n                        \n                        \n                            ROLE   (src/.../role.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/acl/action.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        Action\n                    \n                \n                    \n                        \n                            ACL action list\n\n                        \n                    \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 Read\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 Update\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n                        \n                            \n                                 Delete\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n                        \n                            \n                                 Manage\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n                        \n                            \n                                 List\n                            \n                        \n                        \n                            \n                                Value : list\n                            \n                        \n            \n        \n\n    src/auth/constants/role.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ROLE\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createRequestContext   (src/.../index.ts)\n                        \n                        \n                            mergeWithAnd   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            SwaggerBaseApiResponse   (src/.../base-api-response.dto.ts)\n                        \n                        \n                            updateReferences   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateReferences\n                        \n                    \n                \n            \n            \n                \nupdateReferences(obj: Record, oldRef: string, newRef: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                oldRef\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newRef\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/shared/request-context/util/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRequestContext\n                        \n                    \n                \n            \n            \n                \ncreateRequestContext(request: Request)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RequestContext\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/shared/filters/prisma-filter.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mergeWithAnd\n                        \n                    \n                \n            \n            \n                \nmergeWithAnd(current: T, incoming: T)\n                \n            \n\n\n\n\n            \n                \n                        Merges two prisma where conditions into a top-level AND to avoid any overwrites.\nIf current is empty, return incoming. Otherwise, nest them under { AND: [current, incoming] }.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                incoming\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/shared/dtos/base-api-response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SwaggerBaseApiResponse\n                        \n                    \n                \n            \n            \n                \nSwaggerBaseApiResponse(type: T)\n                \n            \n\n\n\n\n            \n                \n                        Returns a proper OpenAPI compatible response class\nThis function avoids using generics in OpenAPI schema generation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNCH Backend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppLoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagekitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpportunityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_imports\n\n\n\ncluster_AnalyticsModule_exports\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_AppLoggerModule\n\n\n\ncluster_AppLoggerModule_exports\n\n\n\ncluster_AppLoggerModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_providers\n\n\n\ncluster_ImagekitModule\n\n\n\ncluster_ImagekitModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_OpportunityModule\n\n\n\ncluster_OpportunityModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_exports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nSharedModule->AnalyticsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nImagekitModule\n\nImagekitModule\n\nImagekitModule -->\n\nSharedModule->ImagekitModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nSharedModule->NewsModule\n\n\n\n\n\nOpportunityModule\n\nOpportunityModule\n\nOpportunityModule -->\n\nSharedModule->OpportunityModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nSharedModule->OrganizationModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nTagsModule -->\n\nSharedModule->TagsModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nSharedModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppLoggerModule \n\nAppLoggerModule \n\nAppLoggerModule  -->\n\nSharedModule->AppLoggerModule \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nSharedModule->PrismaService \n\n\n\n\n\nAnalyticsService \n\nAnalyticsService \n\nAnalyticsService  -->\n\nAnalyticsModule->AnalyticsService \n\n\n\nAppModule -->\n\nAnalyticsModule->AppModule\n\n\n\n\n\nAnalyticsService\n\nAnalyticsService\n\nAnalyticsModule -->\n\nAnalyticsService->AnalyticsModule\n\n\n\n\n\nAppLogger \n\nAppLogger \n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\nSharedModule -->\n\nAppLoggerModule->SharedModule\n\n\n\nAppLogger  -->\n\nAppLoggerModule->AppLogger \n\n\n\n\n\nAppLogger\n\nAppLogger\n\nAppLoggerModule -->\n\nAppLogger->AppLoggerModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\nAppModule -->\n\nImagekitModule->AppModule\n\n\n\nAppModule -->\n\nNewsModule->AppModule\n\n\n\nAppModule -->\n\nOpportunityModule->AppModule\n\n\n\nAppModule -->\n\nOrganizationModule->AppModule\n\n\n\n\n\nOrganizationService \n\nOrganizationService \n\nOrganizationService  -->\n\nOrganizationModule->OrganizationService \n\n\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtAuthStrategy\n\nJwtAuthStrategy\n\nAuthModule -->\n\nJwtAuthStrategy->AuthModule\n\n\n\nEventsModule -->\n\nJwtAuthStrategy->EventsModule\n\n\n\nNewsModule -->\n\nJwtAuthStrategy->NewsModule\n\n\n\nOpportunityModule -->\n\nJwtAuthStrategy->OpportunityModule\n\n\n\nOrganizationModule -->\n\nJwtAuthStrategy->OrganizationModule\n\n\n\nUserModule -->\n\nJwtAuthStrategy->UserModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\n\n\nImagekitService\n\nImagekitService\n\nImagekitModule -->\n\nImagekitService->ImagekitModule\n\n\n\n\n\nNewsService\n\nNewsService\n\nNewsModule -->\n\nNewsService->NewsModule\n\n\n\n\n\nOpportunityService\n\nOpportunityService\n\nOpportunityModule -->\n\nOpportunityService->OpportunityModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSharedModule -->\n\nPrismaService->SharedModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\nUserAclService\n\nUserAclService\n\nUserModule -->\n\nUserAclService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    58 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : NCH CMS Backend\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AclRule   (src/.../acl-rule.constant.ts)\n                        \n                        \n                            ApiPropertyType   (src/.../base-api-response.dto.ts)\n                        \n                        \n                            IApplyFiltersInput   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            IApplyFiltersOutput   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            IAvailableFilters   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            IAvailableFiltersInput   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            IAvailableFiltersOutput   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            IDefaultFilters   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            Operators   (src/.../createSearchKey.ts)\n                        \n                        \n                            Permission   (src/.../index.ts)\n                        \n                        \n                            PermissionActions   (src/.../index.ts)\n                        \n                        \n                            PermissionModule   (src/.../index.ts)\n                        \n                        \n                            RuleCallback   (src/.../acl-rule.constant.ts)\n                        \n                        \n                            SortingParam   (src/.../sorting-params.decorator.ts)\n                        \n                        \n                            TagsType   (src/.../tags-input.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/acl/acl-rule.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AclRule\n                \n            \n            \n                \n                    ACL rule format\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RuleCallback\n                \n            \n            \n                \n                    Custom rule callback definition\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/shared/dtos/base-api-response.dto.ts\n    \n    \n        \n            \n                \n                    \n                    ApiPropertyType\n                \n            \n            \n                \n                        Type<> | Function |  | string | number | boolean\n\n                \n            \n        \n    \n    src/shared/filters/prisma-filter.filter.ts\n    \n    \n        \n            \n                \n                    \n                    IApplyFiltersInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IApplyFiltersOutput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IAvailableFilters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IAvailableFiltersInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IAvailableFiltersOutput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDefaultFilters\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/shared/utils/createSearchKey.ts\n    \n    \n        \n            \n                \n                    \n                    Operators\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/shared/constants/permissions/index.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PermissionActions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PermissionModule\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/shared/decorators/sorting-params.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    SortingParam\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/tags/dto/tags-input.dto.ts\n    \n    \n        \n            \n                \n                    \n                    TagsType\n                \n            \n            \n                \n                        \"USER\" | \"ORGANIZATION\" | \"EVENT\" | \"NEWS\" | \"OPPORTUNITY\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSortingQuery   (src/.../sorting-params-swagger.decorator.ts)\n                        \n                        \n                            applyFilters   (src/.../prisma-filter.filter.ts)\n                        \n                        \n                            config   (src/.../roles.permissions.ts)\n                        \n                        \n                            config   (src/.../users.permissions.ts)\n                        \n                        \n                            configModuleOptions   (src/.../module-options.ts)\n                        \n                        \n                            createSearchKey   (src/.../createSearchKey.ts)\n                        \n                        \n                            FORWARDED_FOR_TOKEN_HEADER   (src/.../common.ts)\n                        \n                        \n                            fullTextOperatorMap   (src/.../createSearchKey.ts)\n                        \n                        \n                            permissions   (src/.../index.ts)\n                        \n                        \n                            prisma   (scripts/.../user.ts)\n                        \n                        \n                            ReqContext   (src/.../req-context.decorator.ts)\n                        \n                        \n                            REQUEST_ID_TOKEN_HEADER   (src/.../common.ts)\n                        \n                        \n                            RequestIdMiddleware   (src/.../request-id.middleware.ts)\n                        \n                        \n                            responseTypeMap   (src/.../base-api-response.dto.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.decorator.ts)\n                        \n                        \n                            seedSuperAdmin   (scripts/.../user.ts)\n                        \n                        \n                            SortingParams   (src/.../sorting-params.decorator.ts)\n                        \n                        \n                            STRATEGY_JWT_AUTH   (src/.../strategy.constant.ts)\n                        \n                        \n                            STRATEGY_JWT_REFRESH   (src/.../strategy.constant.ts)\n                        \n                        \n                            STRATEGY_LOCAL   (src/.../strategy.constant.ts)\n                        \n                        \n                            VALIDATION_PIPE_OPTIONS   (src/.../common.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/sorting-params-swagger.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiSortingQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (params: string[]) => {\n  return applyDecorators(\n    ApiQuery({\n      // the name of the query property to pass to the query object of the request.\n      name: 'sort',\n      // make optional\n      required: false,\n      // ensures that the sort parameter is serialized as a single string\n      explode: false,\n      type: String,\n      description: `param to sort in format: ?sort=property:(asc|desc), allowed: ${params.join(', ')}`,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/filters/prisma-filter.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  params: IApplyFiltersInput\n): Promise> => {\n  const { availableFilters, appliedFiltersInput } = params;\n  let whereBuilder: T = {} as T;\n\n  for (const [key, value] of Object.entries(appliedFiltersInput as any)) {\n    if (availableFilters[key] && value) {\n      const { where } = await availableFilters[key]({\n        filter: value,\n      });\n      whereBuilder = mergeWithAnd(whereBuilder, where);\n    }\n  }\n\n  return {\n    whereBuilder,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/constants/permissions/roles.permissions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  key: \"ROLES\",\n  name: \"Role Management\",\n  description: \"Role Management\",\n  permissions: [\n    {\n      action: \"ROLES_FULL\",\n      description: \"Full Access\",\n    },\n    {\n      action: \"ROLES_VIEW\",\n      description: \"View Access\",\n    },\n  ],\n} as const\n                    \n                \n\n\n        \n    \n\n    src/shared/constants/permissions/users.permissions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  key: \"USERS\",\n  name: \"User Management\",\n  description: \"User Management\",\n  permissions: [\n    {\n      action: \"USERS_FULL\",\n      description: \"Full Access\",\n    },\n    {\n      action: \"USERS_VIEW\",\n      description: \"View Access\",\n    },\n  ],\n} as const\n                    \n                \n\n\n        \n    \n\n    src/shared/configs/module-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configModuleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  envFilePath: \".env\",\n  load: [configuration],\n  validationSchema: Joi.object({\n    APP_ENV: Joi.string()\n      .valid(\"development\", \"production\", \"test\")\n      .default(\"development\"),\n    APP_PORT: Joi.number().required(),\n    DATABASE_URL: Joi.string().required(),\n    JWT_PUBLIC_KEY_BASE64: Joi.string().required(),\n    JWT_PRIVATE_KEY_BASE64: Joi.string().required(),\n    JWT_ACCESS_TOKEN_EXP_IN_SEC: Joi.number().required(),\n    JWT_REFRESH_TOKEN_EXP_IN_SEC: Joi.number().required(),\n    IMAGEKIT_PUB_KEY: Joi.string().required(),\n    IMAGEKIT_PVT_KEY: Joi.string().required(),\n    IMAGEKIT_ENDPOINT: Joi.string().required(),\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/utils/createSearchKey.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createSearchKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (input: string, operator: Operators) => {\n  // remove special characters except spaces\n  const sanitizedInput = input.replace(/[^a-zA-Z0-9\\s]/g, '').trim();\n  const op = fullTextOperatorMap[operator];\n\n  // split by space, remove falsy elments and join with supplied operator\n  const searchKey = sanitizedInput.split(/\\s+/).filter(Boolean).join(` ${op} `);\n\n  return searchKey;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullTextOperatorMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  OR: '|',\n  AND: '&',\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/constants/common.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FORWARDED_FOR_TOKEN_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'x-forwarded-for'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_ID_TOKEN_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'x-request-id'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VALIDATION_PIPE_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { transform: true, whitelist: true }\n                    \n                \n\n\n        \n    \n\n    src/shared/constants/permissions/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [userPermissions, rolePermissions] as const\n                    \n                \n\n\n        \n    \n\n    scripts/seed/user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seedSuperAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const pass = \"Test@123\";\n  const hasedPW = await hash(pass, 10);\n\n  const superAdmin: Prisma.UserCreateInput[] = [\n    {\n      fullName: \"NCH Admin\",\n      email: \"nchadmin@mailinator.com\",\n      password: hasedPW,\n      isAccountVerified: true,\n      isSuperAdmin: true,\n      gender: \"Male\",\n    },\n    {\n      fullName: \"Mukesh Kumar Chaudhary\",\n      email: \"mukezhz@gmail.com\",\n      password: hasedPW,\n      isAccountVerified: true,\n      isSuperAdmin: true,\n      gender: \"Male\",\n    },\n  ];\n\n  await prisma.user.createMany({\n    data: superAdmin,\n    skipDuplicates: true,\n  });\n  console.log(\"Super admin seeded!\");\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/request-context/req-context.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReqContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext): RequestContext => {\n    const request = ctx.switchToHttp().getRequest();\n\n    return createRequestContext(request);\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/shared/middlewares/request-id/request-id.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RequestIdMiddleware\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  req: Request,\n  res: Response,\n  next: () => void,\n): void => {\n  /** set request id, if not being set yet */\n  const requestIdToken = req.header(REQUEST_ID_TOKEN_HEADER) || '';\n\n  if (!requestIdToken || !validate(requestIdToken)) {\n    req.headers[REQUEST_ID_TOKEN_HEADER] = uuidv4();\n  }\n\n  /** set res id in response from req */\n  res.set(REQUEST_ID_TOKEN_HEADER, req.headers[REQUEST_ID_TOKEN_HEADER]);\n  next();\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/dtos/base-api-response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        responseTypeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeMapping\n\n                    \n                \n                \n                    \n                        Default value : {\n  UserOutput: UserApiResponse,\n  \"UserOutput[]\": UserArrayApiResponse,\n  TagOutputDto: TagApiResponse,\n  \"TagOutputDto[]\": TagArrayApiResponse,\n  EventResponseDto: EventApiResponse,\n  \"EventResponseDto[]\": EventArrayApiResponse,\n  OrganizationResponseDto: OrganizationApiResponse,\n  \"OrganizationResponseDto[]\": OrganizationArrayApiResponse,\n  OpportunityResponseDto: OpportunityApiResponse,\n  \"OpportunityResponseDto[]\": OpportunityArrayApiResponse,\n  AuthTokenOutput: AuthTokenApiResponse,\n  RegisterOutput: RegisterApiResponse,\n  ImagekitResponseDto: ImagekitApiResponse,\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: ROLE[]): CustomDecorator =>\n  SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/shared/decorators/sorting-params.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SortingParams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (validParams, ctx: ExecutionContext): SortingParam | null => {\n    const req: Request = ctx.switchToHttp().getRequest();\n    const sort = req.query.sort as string;\n    if (!sort) return null;\n\n    // check if the valid params sent is an array\n    if (typeof validParams != \"object\")\n      throw new NotAcceptableException(\"Invalid sort parameter\");\n\n    const schema = Joi.object({\n      property: Joi.string()\n        .valid(...validParams)\n        .required(),\n      direction: Joi.string().valid(\"asc\", \"desc\").required(),\n    });\n    const { error, value } = schema.validate({\n      property: sort.split(\":\")[0],\n      direction: sort.split(\":\")[1],\n    });\n    if (error) throw new NotAcceptableException(error.message);\n    const { property, direction } = value;\n    return { property, direction };\n  }\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants/strategy.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STRATEGY_JWT_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'jwt-auth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGY_JWT_REFRESH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'jwt-refresh'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGY_LOCAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'local'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
