generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enum EventType {
//   CONFERENCE
//   SIDE_EVENT
//   SEMINAR
//   SUMMIT
//   SYMPOSIUM
//   WEBINAR
//   WORKSHOP
// }

// enum LocationType {
//   NATIONAL
//   INTERNATIONAL
// }

// enum Province {
//   KOSHI
//   MADHESH
//   BAGMATI
//   GANDAKI
//   LUMBINI
//   KARNALI
//   SUDURPASCHIM
// }

// enum EventStatus {
//   OPEN
//   UPCOMING
//   CLOSED
// }

// enum EventFormat {
//   IN_PERSON
//   VIRTUAL
//   HYBRID
// }

// enum EventCost {
//   FULLY_FUNDED
//   PARTIALLY_FUNDED
//   PAID
//   FREE
// }

model User {
  id                String    @id() @default(cuid())
  fullName          String
  email             String    @unique() @db.VarChar(254)
  password          String
  isAccountVerified Boolean   @default(false)
  isSuperAdmin      Boolean   @default(false)
  profession        String?
  expertise         String?
  bio               String?
  dateOfBirth       DateTime? @db.Timestamptz(6)
  dateOfJoin        DateTime? @db.Timestamptz(6)
  gender            String?
  phoneCountryCode  String?
  phoneNumber       String?

  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?

  socials   Socials? @relation(fields: [socialsId], references: [id])
  socialsId String?

  gallery Gallery[]
  tags    Tags[]

  resetPasswordToken              String?
  resetPasswordExpires            DateTime?
  accountVerificationToken        String?
  accountVerificationTokenExpires DateTime?

  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([email])
}

model Organizations {
  id               String  @id() @default(cuid())
  name             String
  description      String
  email            String
  phoneCountryCode String?
  phoneNumber      String?

  tags                Tags[]
  organizationGallery Gallery[]

  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?

  socials   Socials? @relation(fields: [socialsId], references: [id])
  socialsId String?

  bannerImageId  String?
  bannerImageUrl String?

  logoImageUrl String
  logoImageId  String?

  isDraft   Boolean   @default(true)
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Events {
  id           String @id() @default(cuid())
  title        String
  organizer    String @map("organizer")
  description  String
  // location is like venue
  location     String
  locationType String
  type         String
  format       String

  startDate            DateTime?
  registrationDeadline DateTime?
  registrationLink     String?
  contactEmail         String?
  status               String?
  cost                 String?

  tags         Tags[]
  eventGallery Gallery[]

  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?

  socials   Socials? @relation(fields: [socialsId], references: [id])
  socialsId String?

  bannerImageId  String?
  bannerImageUrl String?

  contributedBy String

  isDraft   Boolean   @default(true)
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Opportunity {
  id                  String    @id() @default(cuid())
  title               String
  organizer           String    @map("organizer")
  description         String
  // location is like venue
  location            String
  locationType        String
  type                String
  format              String
  applicationDeadline DateTime?
  duration            String?
  contactEmail        String?
  status              String?
  cost                String?

  tags Tags[]

  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?

  socials   Socials? @relation(fields: [socialsId], references: [id])
  socialsId String?

  bannerImageId  String?
  bannerImageUrl String?

  contributedBy String

  isDraft   Boolean   @default(true)
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model News {
  id            String   @id() @default(cuid())
  title         String
  source        String
  mode          String
  publishedDate DateTime
  publishedYear DateTime
  newsLink      String

  tags Tags[]

  bannerImageId  String?
  bannerImageUrl String?

  contributedBy String

  isDraft   Boolean   @default(true)
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Address {
  id       String  @id() @default(cuid())
  street   String?
  country  String?
  city     String?
  state    String?
  postcode String?

  user         User[]
  event        Events[]
  opportunity  Opportunity[]
  organization Organizations[]

  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Socials {
  id   String @id() @default(cuid())
  data Json?

  user         User[]
  events       Events[]
  opportunity  Opportunity[]
  organization Organizations[]

  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Tags {
  id                String  @id() @default(cuid())
  tag               String
  isUserTag         Boolean @default(false)
  isOrganizationTag Boolean @default(false)
  isEventTag        Boolean @default(false)
  isNewsTag         Boolean @default(false)
  isOpportunityTag  Boolean @default(false)

  user         User[]
  event        Events[]
  news         News[]
  organization Organizations[]
  opportunity  Opportunity[]

  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Gallery {
  id        String  @id() @default(cuid())
  sourceId  String?
  publicUrl String

  user         User[]
  events       Events[]
  organization Organizations[]

  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}
